import { YMapComplexEntity } from "../../../imperative/YMapEnities";
import type { CustomVuefyOptions } from "../../vuefy";
import { YMapFeatureEditorDefaultPoint } from "./YMapFeatureEditorDefaultPoint";
import { YMapFeatureEditorDefaultPreviewPoint } from "./YMapFeatureEditorDefaultPreviewPoint";
import type { YMapFeatureEditorProps } from "./interface";
declare const defaultProps: Readonly<{
    isActive: true;
    featureStyle: {};
    prefix: "EDITOR";
    zIndex: 2600;
    pointZIndex: 1900;
    previewPointZIndex: 1800;
    previewPointElement: YMapFeatureEditorDefaultPreviewPoint;
    renderPoint: () => YMapFeatureEditorDefaultPoint;
}>;
type DefaultProps = typeof defaultProps;
declare class YMapFeatureEditor extends YMapComplexEntity<YMapFeatureEditorProps, DefaultProps> {
    static defaultProps: Readonly<{
        isActive: true;
        featureStyle: {};
        prefix: "EDITOR";
        zIndex: 2600;
        pointZIndex: 1900;
        previewPointZIndex: 1800;
        previewPointElement: YMapFeatureEditorDefaultPreviewPoint;
        renderPoint: () => YMapFeatureEditorDefaultPoint;
    }>;
    static [ymaps3.optionsKeyVuefy]: CustomVuefyOptions<YMapFeatureEditor>;
    private _previewPoint;
    private _draggingPoint;
    private _getName;
    private _getZIndex;
    private shape;
    private line;
    constructor(props: YMapFeatureEditorProps);
    private _updatePreviewPoint;
    private _updateDraggingPoint;
    protected _onUpdate({ points, geometry, featureStyle, isActive, prefix, zIndex }: Partial<YMapFeatureEditorProps>): void;
    private _markers;
    private _upsertMarker;
    private _previewMarker;
    private _upsertPreviewPoint;
    private handleLayerClick;
    private handlePointClick;
    private handlePointDblClick;
    private _handleDragStart;
    private handlePreviewDragStart;
    private handleDragMove;
    private handlePreviewDragMove;
    private handleMouseMove;
    private handlePreviewPointClick;
    private _handleDragEnd;
}
export declare function getCorrectName(prefix: string, postfix: string): string;
export declare function getCorrectZIndex(zIndex: number, offset: number): number;
export { YMapFeatureEditor, YMapFeatureEditorProps };
