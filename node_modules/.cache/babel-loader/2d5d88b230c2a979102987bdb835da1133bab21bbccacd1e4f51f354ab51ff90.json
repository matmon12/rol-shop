{"ast":null,"code":"import axios from \"axios\";\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  data() {\n    return {\n      paths: [{\n        name: \"История заказов\",\n        path: \"/rol-shop/history\"\n      }],\n      ordersComplete: [],\n      ordersProcess: [],\n      activeItem1: 0,\n      activeItem2: \"\",\n      loadingOrders: false,\n      loadingTips: false,\n      error: false\n    };\n  },\n  methods: {\n    ...mapActions({\n      dateFormat: \"date/dateFormat\"\n    }),\n    async fetchOrders() {\n      let apiRes = null;\n      try {\n        this.loadingOrders = true;\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/orders?sortBy=-id`);\n        this.ordersComplete = data.filter(order => order.status === 5);\n        this.ordersProcess = data.filter(order => order.status !== 5);\n      } catch (err) {\n        apiRes = err.response.status;\n      } finally {\n        if (apiRes == 404) {\n          this.error = !this.error;\n          console.log(this.error);\n        }\n      }\n    },\n    async fetchTips() {\n      try {\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/tips`);\n        this.ordersProcess = this.ordersProcess.map(order => {\n          const tips = data.find(item => item.orders_id === order.id);\n          if (!tips) {\n            return {\n              ...order,\n              tips: false\n            };\n          }\n          return {\n            ...order,\n            tips: true\n          };\n        });\n      } catch (err) {\n        console.log(err);\n      } finally {\n        this.loadingOrders = false;\n      }\n    }\n  },\n  computed: {\n    ...mapState({})\n  },\n  mounted() {\n    this.fetchOrders().then(() => {\n      this.fetchTips();\n    });\n  }\n};","map":{"version":3,"names":["axios","mapState","mapActions","data","paths","name","path","ordersComplete","ordersProcess","activeItem1","activeItem2","loadingOrders","loadingTips","error","methods","dateFormat","fetchOrders","apiRes","get","filter","order","status","err","response","console","log","fetchTips","map","tips","find","item","orders_id","id","computed","mounted","then"],"sources":["C:\\gitPages\\rol-shop\\src\\pages\\History.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"!error\" class=\"history\">\r\n    <div class=\"container\">\r\n      <Crumbs :paths=\"paths\" class=\"crumbs\" />\r\n      <div class=\"history__inner\">\r\n        <Menu />\r\n\r\n        <div class=\"history-wrapper\">\r\n          <h1 class=\"history-title\">История заказов</h1>\r\n          <div\r\n            class=\"history__content\"\r\n            v-if=\"ordersProcess.length > 0 || ordersComplete.length > 0 || loadingOrders\"\r\n          >\r\n            <div class=\"history__block\" v-if=\"ordersProcess.length > 0 || loadingOrders\">\r\n              <p class=\"history-subtitle\">Готовятся</p>\r\n              <el-collapse v-if=\"!loadingOrders\" v-model=\"activeItem1\" accordion>\r\n                <div class=\"history__box\">\r\n                  <div\r\n                    class=\"history__item\"\r\n                    v-for=\"(item, id) in ordersProcess\"\r\n                    :key=\"id\"\r\n                  >\r\n                    <HistoryOrders :order=\"item\" :id=\"id\" :activeItem=\"activeItem1\" />\r\n                  </div>\r\n                </div>\r\n              </el-collapse>\r\n              <el-skeleton v-else animated />\r\n            </div>\r\n            <div class=\"history__block\" v-if=\"ordersComplete.length > 0 || loadingOrders\">\r\n              <p class=\"history-subtitle\">Доставленные</p>\r\n              <el-collapse v-if=\"!loadingOrders\" v-model=\"activeItem2\" accordion>\r\n                <div class=\"history__box\">\r\n                  <div\r\n                    class=\"history__item\"\r\n                    v-for=\"(item, id) in ordersComplete\"\r\n                    :key=\"id\"\r\n                  >\r\n                    <HistoryOrders :order=\"item\" :id=\"id\" :activeItem=\"activeItem2\" />\r\n                  </div>\r\n                </div>\r\n              </el-collapse>\r\n              <el-skeleton v-else animated />\r\n            </div>\r\n          </div>\r\n          <EmptyBlock\r\n            v-if=\"\r\n              ordersProcess.length === 0 && ordersComplete.length === 0 && !loadingOrders\r\n            \"\r\n            class=\"history-empty\"\r\n            :imgUrl=\"require('@/img/icon/empty.svg')\"\r\n            title=\"У вас нет заказов\"\r\n            text=\"Переходите в интересующую вас категорию и сделайте свой первый заказ\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Error\r\n    :imgUrl=\"require('@/img/icon/404.svg')\"\r\n    title=\"Ошибка 404. Что-то пошло не так.\"\r\n    text=\"Страница, которую вы ищите, временно не доступна или ее еже нет\"\r\n    :button=\"[{imgUrl: '', }]\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { mapState, mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      paths: [{ name: \"История заказов\", path: \"/rol-shop/history\" }],\r\n      ordersComplete: [],\r\n      ordersProcess: [],\r\n      activeItem1: 0,\r\n      activeItem2: \"\",\r\n      loadingOrders: false,\r\n      loadingTips: false,\r\n      error: false,\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      dateFormat: \"date/dateFormat\",\r\n    }),\r\n    async fetchOrders() {\r\n      let apiRes = null;\r\n      try {\r\n        this.loadingOrders = true;\r\n\r\n        const { data } = await axios.get(\r\n          `https://c2ff7a8de0a119c8.mokky.dev/orders?sortBy=-id`\r\n        );\r\n\r\n        this.ordersComplete = data.filter((order) => order.status === 5);\r\n        this.ordersProcess = data.filter((order) => order.status !== 5);\r\n      } catch (err) {\r\n        apiRes = err.response.status;\r\n      } finally {\r\n        if (apiRes == 404) {\r\n          this.error = !this.error;\r\n          console.log(this.error);\r\n        }\r\n      }\r\n    },\r\n    async fetchTips() {\r\n      try {\r\n        const { data } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/tips`);\r\n\r\n        this.ordersProcess = this.ordersProcess.map((order) => {\r\n          const tips = data.find((item) => item.orders_id === order.id);\r\n\r\n          if (!tips) {\r\n            return {\r\n              ...order,\r\n              tips: false,\r\n            };\r\n          }\r\n\r\n          return {\r\n            ...order,\r\n            tips: true,\r\n          };\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        this.loadingOrders = false;\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapState({}),\r\n  },\r\n  mounted() {\r\n    this.fetchOrders().then(() => {\r\n      this.fetchTips();\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.crumbs {\r\n  margin-bottom: 32px;\r\n}\r\n.history {\r\n  margin-bottom: 64px;\r\n  &__inner {\r\n    display: flex;\r\n    gap: 153px;\r\n  }\r\n\r\n  &__box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n  }\r\n\r\n  &__block {\r\n    & + & {\r\n      margin-top: 48px;\r\n    }\r\n  }\r\n\r\n  &__item {\r\n    border-radius: $border;\r\n    background-color: #fff;\r\n    padding: 16px 0;\r\n  }\r\n}\r\n.history-wrapper {\r\n  flex-grow: 1;\r\n}\r\n.history-title {\r\n  color: $grey-dark;\r\n  font-size: 48px;\r\n  font-weight: 700;\r\n  margin-bottom: 32px;\r\n}\r\n.history-subtitle {\r\n  margin-bottom: 24px;\r\n  color: rgb(104, 104, 112);\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n}\r\n.history-empty {\r\n  align-items: center;\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n.el-skeleton {\r\n  --el-skeleton-color: rgb(224, 224, 224);\r\n  --el-skeleton-to-color: rgb(172, 172, 172);\r\n}\r\n</style>\r\n"],"mappings":"AAkEA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,QAAQ,EAAEC,UAAS,QAAS,MAAM;AAE3C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE,iBAAiB;QAAEC,IAAI,EAAE;MAAoB,CAAC,CAAC;MAC/DC,cAAc,EAAE,EAAE;MAClBC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE,KAAK;MAClBC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGZ,UAAU,CAAC;MACZa,UAAU,EAAE;IACd,CAAC,CAAC;IACF,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAIC,MAAK,GAAI,IAAI;MACjB,IAAI;QACF,IAAI,CAACN,aAAY,GAAI,IAAI;QAEzB,MAAM;UAAER;QAAK,IAAI,MAAMH,KAAK,CAACkB,GAAG,CAC7B,sDACH,CAAC;QAED,IAAI,CAACX,cAAa,GAAIJ,IAAI,CAACgB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,MAAK,KAAM,CAAC,CAAC;QAChE,IAAI,CAACb,aAAY,GAAIL,IAAI,CAACgB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,MAAK,KAAM,CAAC,CAAC;MACjE,EAAE,OAAOC,GAAG,EAAE;QACZL,MAAK,GAAIK,GAAG,CAACC,QAAQ,CAACF,MAAM;MAC9B,UAAU;QACR,IAAIJ,MAAK,IAAK,GAAG,EAAE;UACjB,IAAI,CAACJ,KAAI,GAAI,CAAC,IAAI,CAACA,KAAK;UACxBW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,KAAK,CAAC;QACzB;MACF;IACF,CAAC;IACD,MAAMa,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAM;UAAEvB;QAAK,IAAI,MAAMH,KAAK,CAACkB,GAAG,CAAE,yCAAwC,CAAC;QAE3E,IAAI,CAACV,aAAY,GAAI,IAAI,CAACA,aAAa,CAACmB,GAAG,CAAEP,KAAK,IAAK;UACrD,MAAMQ,IAAG,GAAIzB,IAAI,CAAC0B,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAQ,KAAMX,KAAK,CAACY,EAAE,CAAC;UAE7D,IAAI,CAACJ,IAAI,EAAE;YACT,OAAO;cACL,GAAGR,KAAK;cACRQ,IAAI,EAAE;YACR,CAAC;UACH;UAEA,OAAO;YACL,GAAGR,KAAK;YACRQ,IAAI,EAAE;UACR,CAAC;QACH,CAAC,CAAC;MACJ,EAAE,OAAON,GAAG,EAAE;QACZE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAClB,UAAU;QACR,IAAI,CAACX,aAAY,GAAI,KAAK;MAC5B;IACF;EACF,CAAC;EACDsB,QAAQ,EAAE;IACR,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EAChB,CAAC;EACDiC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAClB,WAAW,CAAC,CAAC,CAACmB,IAAI,CAAC,MAAM;MAC5B,IAAI,CAACT,SAAS,CAAC,CAAC;IAClB,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}