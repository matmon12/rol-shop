{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { inject, ref, computed } from \"vue\";\nimport * as turf from \"@turf/turf\";\nimport emitter from \"@/store/eventBus.js\";\nimport { mapActions, mapMutations, mapState, useStore } from \"vuex\";\nexport default {\n  data() {\n    let currentDate = new Date();\n    let data1 = new Date();\n    let data2 = new Date();\n    let data3 = new Date();\n    let data4 = new Date();\n    let data5 = new Date();\n    data1.setDate(currentDate.getDate());\n    data2.setDate(currentDate.getDate() + 1);\n    data3.setDate(currentDate.getDate() + 2);\n    data4.setDate(currentDate.getDate() + 3);\n    data5.setDate(currentDate.getDate() + 4);\n    let month1 = data1.getMonth() + 1;\n    let month2 = data2.getMonth() + 1;\n    let month3 = data3.getMonth() + 1;\n    let month4 = data4.getMonth() + 1;\n    let month5 = data5.getMonth() + 1;\n    data1 = data1 < 10 ? \"0\" + data1.getDate() : data1.getDate();\n    data2 = data2 < 10 ? \"0\" + data2.getDate() : data2.getDate();\n    data3 = data3 < 10 ? \"0\" + data3.getDate() : data3.getDate();\n    data4 = data4 < 10 ? \"0\" + data4.getDate() : data4.getDate();\n    data5 = data5 < 10 ? \"0\" + data5.getDate() : data5.getDate();\n    month1 = month1 < 10 ? \"0\" + month1 : month1;\n    month2 = month2 < 10 ? \"0\" + month2 : month2;\n    month3 = month3 < 10 ? \"0\" + month3 : month3;\n    month4 = month4 < 10 ? \"0\" + month4 : month4;\n    month5 = month5 < 10 ? \"0\" + month5 : month5;\n    return {\n      input: \"\",\n      dialogVisible: false,\n      tab: \"tab_1\",\n      addAddress: false,\n      paths: [{\n        name: \"Оформление заказа\",\n        path: \"/rol-shop/order\"\n      }],\n      loadingPostAddress: false,\n      restaurants: [],\n      optionsDay: [{\n        value: `${data1}.${month1}`,\n        label: \"Сегодня\"\n      }, {\n        value: `${data2}.${month2}`,\n        label: \"Завтра\"\n      }, {\n        value: `${data3}.${month3}`,\n        label: `${data3}.${month3}`\n      }, {\n        value: `${data4}.${month4}`,\n        label: `${data4}.${month4}`\n      }, {\n        value: `${data5}.${month5}`,\n        label: `${data5}.${month5}`\n      }],\n      optionsTime: [],\n      selectDay: \"\",\n      selectTime: \"\",\n      lat: \"\",\n      long: \"\",\n      svg: `\n        <path class=\"path\" d=\"\n          M 30 15\n          L 28 17\n          M 25.61 25.61\n          A 15 15, 0, 0, 1, 15 30\n          A 15 15, 0, 1, 1, 27.99 7.5\n          L 15 15\n        \" style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0); stroke: #f63\"/>\n      `,\n      paymentDelivery: \"Наличными курьеру\",\n      paymentPickup: \"Наличными в точке выдачи\",\n      sliderLoading: false,\n      validForm1: false,\n      validForm2: false,\n      validForm3: false,\n      isCreatingOrder: false,\n      orderId: null,\n      animals: [\"dog\"],\n      doorOptions1: [\"Оставить под дверью\"],\n      doorOptions2: [\"Оставить под дверью\"],\n      addressRadio: \"\",\n      cityRadio1: \"Киев\",\n      cityRadio2: \"Киев\",\n      resultsOrder: \"\",\n      coord: this.$store.state.map.coord,\n      result: [],\n      orderDone: false\n    };\n  },\n  methods: {\n    ...mapActions({\n      checkAddress: \"map/checkAddress\"\n    }),\n    async fetchAddressSelect(value, cb) {\n      try {\n        this.checkFromSelect = false;\n        if (value) {\n          const {\n            data\n          } = await axios.get(`https://suggest-maps.yandex.ru/v1/suggest?apikey=00748542-2e0b-439d-864b-98b4baac2c5f&text=${this.cityRadio1}, ${value}&bbox=${this.area}&lang=ru_RU&strict_bounds=1&types=street,metro,house,district,vegetation&print_address=1`);\n          if (data.results) {\n            this.result = data.results.map(item => ({\n              address: item.title.text,\n              house: item.address.component.find(pl => pl.kind == \"HOUSE\") ? item.address.component.find(pl => pl.kind == \"HOUSE\").name : \"\"\n            }));\n\n            // возвращение данных\n            cb(this.result);\n          } else {\n            // если нет результатов / скрытие списка\n            cb([]);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    handleSelectAddress(item) {\n      // заполнение полей\n      this.form.address = item.address;\n      this.form.house = item.house;\n\n      // проверка что адрес был выбран из списка\n      this.checkFromSelect = true;\n    },\n    async fetchAddress() {\n      try {\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/address`);\n        this.address = data;\n\n        // по умолчанию первый отмечен\n        if (this.address.length > 0) {\n          this.addressRadio = this.address[0].id;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async fetchRestaurant() {\n      try {\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/restaurant?city=${this.cityRadio2}`);\n        this.restaurants = data;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async fetchProduct() {\n      try {\n        this.sliderLoading = true;\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/items?category=drinks`);\n        this.products = data.map(obj => ({\n          ...obj,\n          isAdded: false,\n          count: 1\n        }));\n      } catch (err) {\n        console.log(err);\n      } finally {\n        this.sliderLoading = false;\n      }\n    },\n    geocoderCoord(lat, long) {\n      this.lat = lat;\n      this.long = long;\n\n      // скрытие блока при клике по карте\n      this.$store.commit(\"map/setDeliveryCheck\", false);\n    },\n    async removeAddress() {\n      await axios.delete(`https://c2ff7a8de0a119c8.mokky.dev/address/${this.addressRadio}`);\n      let index = this.address.findIndex(item => item.id == this.addressRadio);\n      if (index !== -1) {\n        this.address.splice(index, 1);\n      }\n\n      // первый адрес отмечен\n      if (this.address.length > 0) {\n        this.addressRadio = this.address[0].id;\n      }\n    },\n    sumbitForm(forName) {\n      forName.validate(valid => {\n        if (valid) {\n          this.postAddress().then(() => {\n            this.addAddress = false;\n            this.fetchAddress();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    async postAddress() {\n      try {\n        this.loadingPostAddress = true;\n        const {\n          data\n        } = await axios.post(`https://c2ff7a8de0a119c8.mokky.dev/address`, {\n          address: this.form.address,\n          house: this.form.house,\n          input: this.form.input,\n          floor: this.form.floor,\n          apartment: this.form.apartment,\n          city: this.cityRadio1\n        });\n        this.form.address = \"\";\n        this.form.house = \"\";\n        this.form.input = \"\";\n        this.form.floor = \"\";\n        this.form.apartment = \"\";\n      } catch (err) {\n        console.log(err);\n      } finally {\n        this.loadingPostAddress = false;\n      }\n    },\n    filterArray(input, cb) {\n      const results = this.restaurants.filter(element => element.address.toLowerCase().includes(input.toLowerCase()));\n      cb(results);\n    },\n    handleSelect(item) {\n      // ресторан из списка\n      this.fromSelectRestaurant = true;\n      this.form.restaurant = item.address;\n    },\n    async validForms() {\n      if (!this.ruleFormRef3) return;\n      await this.ruleFormRef3.validate((valid, fields) => {\n        if (valid) {\n          this.validForm1 = true;\n        }\n      });\n      if (this.tab === \"tab_2\") {\n        await this.ruleFormRef2.validate((valid, fields) => {\n          if (valid) {\n            this.validForm2 = true;\n          }\n        });\n      }\n      if (this.tab === \"tab_1\" && (this.addAddress || this.address.length === 0)) {\n        await this.ruleFormRef1.validate((valid, fields) => {\n          if (valid) {\n            this.validForm3 = true;\n          }\n        });\n      }\n    },\n    generateTimeOptions() {\n      this.optionsTime = [];\n      if (this.selectDay === this.optionsDay[0].value) {\n        let currentDate = new Date();\n        let hours = currentDate.getHours();\n        let minutes = currentDate.getMinutes();\n        this.optionsTime.push({\n          value: `${hours}:${minutes}`,\n          label: \"Ближайшее\"\n        });\n        if (minutes > 30) {\n          this.optionsTime.push({\n            value: `${hours + 2}:30`,\n            label: `${hours + 2}:30`\n          });\n          for (let i = hours + 3; i < 23; i++) {\n            this.optionsTime.push({\n              value: `${i}:00`,\n              label: `${i}:00`\n            });\n            this.optionsTime.push({\n              value: `${i}:30`,\n              label: `${i}:30`\n            });\n          }\n        } else {\n          for (let i = hours + 2; i < 23; i++) {\n            this.optionsTime.push({\n              value: `${i}:00`,\n              label: `${i}:00`\n            });\n            this.optionsTime.push({\n              value: `${i}:30`,\n              label: `${i}:30`\n            });\n          }\n        }\n      } else {\n        for (let i = 11; i < 23; i++) {\n          this.optionsTime.push({\n            value: `${i}:00`,\n            label: `${i}:00`\n          });\n          this.optionsTime.push({\n            value: `${i}:30`,\n            label: `${i}:30`\n          });\n        }\n      }\n      this.selectTime = this.optionsTime[0].value;\n    },\n    postOrder() {\n      this.validForms().then(() => {\n        if (this.tab === \"tab_2\") {\n          //самовывоз\n          if (this.validForm1 && this.validForm2) {\n            this.createOrder();\n          }\n        } else if (this.tab === \"tab_1\" && (this.addAddress || this.address.length === 0)) {\n          // доставка и добавить\n          if (this.validForm1 && this.validForm3) {\n            this.createOrder();\n          }\n        } else {\n          // доставка и сохраненный адрес\n          if (this.validForm1) {\n            this.createOrder();\n          }\n        }\n      });\n    },\n    async createOrder() {\n      try {\n        this.isCreatingOrder = true;\n        const info = {\n          name: this.form.name,\n          tel: this.form.tel,\n          day: this.selectDay,\n          time: this.selectTime,\n          payment: this.tab === \"tab_1\" ? this.paymentDelivery : this.paymentPickup,\n          items: this.cart,\n          totalPrice: this.totalPrice,\n          animals: this.animals,\n          methods: this.tab === \"tab_1\" ? \"Доставка\" : \"Самовывоз\",\n          address: \"\",\n          options: \"\"\n        };\n\n        // сдача\n        if (this.paymentDelivery === \"Наличными курьеру\" && this.tab === \"tab_1\" || this.paymentPickup === \"Наличными в точке выдачи\" && this.tab === \"tab_2\") {\n          info.change = this.form.change ? this.form.change : \"без сдачи\";\n        }\n        if (this.form.comment1) {\n          info.regularSticks = this.form.comment1;\n        }\n        if (this.form.comment2) {\n          info.traningSticks = this.form.comment2;\n        }\n        if (this.form.note) {\n          info.note = this.form.note;\n        }\n        if (this.freeProduct.length > 0) {\n          info.freeProduct = this.freeProduct;\n        }\n        if (this.tab === \"tab_1\" && !this.addAddress && this.address.length > 0) {\n          const result = this.address.find(item => {\n            return item.id === this.addressRadio;\n          });\n          info.address = result;\n          info.options = this.doorOptions1;\n        }\n        if (this.tab === \"tab_1\" && (this.addAddress || this.address.length === 0)) {\n          const result = {\n            city: this.cityRadio1,\n            address: this.form.address,\n            house: this.form.house,\n            input: this.form.input,\n            floor: this.form.floor,\n            apartment: this.form.apartment\n          };\n          info.address = result;\n          info.options = this.doorOptions2;\n        }\n        if (this.tab === \"tab_2\") {\n          const result = {\n            city: this.cityRadio2,\n            address: this.form.restaurant\n          };\n          info.address = result;\n        }\n        const {\n          data\n        } = await axios.post(`https://c2ff7a8de0a119c8.mokky.dev/orders`, info);\n        this.cart = [];\n        this.orderId = data.id;\n\n        // история заказов в localStorage\n        this.historyOrder.push(this.orderId);\n        localStorage.setItem(\"order\", JSON.stringify(this.historyOrder));\n      } catch (err) {\n        console.log(err);\n      } finally {\n        this.isCreatingOrder = false;\n        this.orderDone = true;\n      }\n    },\n    async fetchOrder() {\n      try {\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/orders?id=${this.historyOrder[this.historyOrder.length - 1]}`);\n        this.resultsOrder = data[0];\n        this.cart = this.resultsOrder.items;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    onRepeatOrder() {\n      this.fetchOrder().then(() => {\n        // включение кнопки для карточек и слайдера и favorites\n        // this.sushi = this.updateItemsStatus(this.sushi);\n        // this.rolls = this.updateItemsStatus(this.rolls);\n        // this.sets = this.updateItemsStatus(this.sets);\n        // this.snacks = this.updateItemsStatus(this.snacks);\n        // this.drinks = this.updateItemsStatus(this.drinks);\n        // this.slides = this.updateItemsStatus(this.slides);\n        // this.favorites = this.updateItemsStatus(this.favorites);\n        // this.categores = this.updateItemsStatus(this.categores);\n        // this.slidesTovar = this.updateItemsStatus(this.slidesTovar);\n        this.products = this.updateItemsStatus(this.products);\n        // this.cart.some((cartItem) => cartItem.id === this.product.id)\n        //   ? (this.product.isAdded = true)\n        //   : null;\n\n        // заполнение полей\n        this.form.name = this.resultsOrder.name;\n        this.form.tel = this.resultsOrder.tel;\n        this.form.change = this.resultsOrder.change !== \"без сдачи\" ? this.resultsOrder.change : \"\";\n        this.animals = this.resultsOrder.animals;\n        if (this.resultsOrder.methods === \"Доставка\") {\n          this.tab = \"tab_1\";\n          this.paymentDelivery = this.resultsOrder.payment;\n          if (this.resultsOrder.address.id) {\n            // сохраненные адреса\n            if (this.address.length > 0) {\n              const result = this.address.find(item => {\n                return item.id === this.resultsOrder.address.id;\n              });\n              if (result !== undefined) {\n                //если адрес найден\n                this.addressRadio = this.resultsOrder.address.id;\n                this.doorOptions1 = this.resultsOrder.options;\n              } else {\n                // если адрес не найден в сохраненных (был уделен)\n                this.addAddress = true;\n                this.cityRadio1 = this.resultsOrder.address.city;\n                this.form.address = this.resultsOrder.address.address;\n                this.form.house = this.resultsOrder.address.house;\n                this.form.input = this.resultsOrder.address.input;\n                this.form.floor = this.resultsOrder.address.floor;\n                this.form.apartment = this.resultsOrder.address.apartment;\n                this.doorOptions2 = this.resultsOrder.options;\n              }\n            } else {\n              // если нет сохраненных адресов\n              this.addAddress = true;\n              this.cityRadio1 = this.resultsOrder.address.city;\n              this.form.address = this.resultsOrder.address.address;\n              this.form.house = this.resultsOrder.address.house;\n              this.form.input = this.resultsOrder.address.input;\n              this.form.floor = this.resultsOrder.address.floor;\n              this.form.apartment = this.resultsOrder.address.apartment;\n              this.doorOptions2 = this.resultsOrder.options;\n            }\n          } else {\n            // не сохраненный адрес\n            this.addAddress = true;\n            this.cityRadio1 = this.resultsOrder.address.city;\n            this.form.address = this.resultsOrder.address.address;\n            this.form.house = this.resultsOrder.address.house;\n            this.form.input = this.resultsOrder.address.input;\n            this.form.floor = this.resultsOrder.address.floor;\n            this.form.apartment = this.resultsOrder.address.apartment;\n            this.doorOptions2 = this.resultsOrder.options;\n          }\n        }\n        if (this.resultsOrder.methods === \"Самовывоз\") {\n          this.tab = \"tab_2\";\n          this.paymentPickup = this.resultsOrder.payment;\n          this.cityRadio2 = this.resultsOrder.address.city;\n          this.form.restaurant = this.resultsOrder.address.address;\n          this.fetchRestaurant();\n        }\n        if (this.resultsOrder.regularSticks) {\n          this.form.comment1 = this.resultsOrder.regularSticks;\n        }\n        if (this.resultsOrder.traningSticks) {\n          this.form.comment2 = this.resultsOrder.traningSticks;\n        }\n        if (this.resultsOrder.note) {\n          this.form.note = this.resultsOrder.note;\n        }\n      });\n    },\n    updateItemsStatus(items) {\n      return items.map(item => ({\n        ...item,\n        isAdded: this.cart.some(cartItem => cartItem.id === item.id)\n      }));\n    },\n    repeatAddress(item) {\n      for (let address of this.address) {\n        if (address.address === item.address && address.house === item.house && address.input === item.input && address.floor === item.floor && address.apartment === item.apartment && address.city === item.city) {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n  mounted() {\n    this.fetchAddress();\n    // значения по умолчанию\n    this.selectDay = this.optionsDay[0].value;\n    // генерация времени\n    this.generateTimeOptions();\n    // координаты центра по умолчанию\n    this.lat = this.coord[0];\n    this.long = this.coord[1];\n    // slider\n    this.fetchProduct().then(() => {\n      this.products = this.products.map(item => ({\n        ...item,\n        isAdded: this.cart.some(cartItem => cartItem.id === item.id)\n      }));\n    });\n\n    // прослушивание событие с корзины\n    // emitter.on(\"is-order-fetching\", this.onRepeatOrder);\n\n    // если есть параметр repeat повтор заказа\n    if (this.$route.query.repeat) {\n      this.onRepeatOrder();\n    }\n  },\n  computed: {\n    ...mapState({\n      deliveryPossible: state => state.map.deliveryPossible,\n      deliveryCheck: state => state.map.deliveryCheck,\n      addressDialog: state => state.map.address,\n      loadingDeliveryCheck: state => state.map.loading,\n      loadingAddress: state => state.map.loadingAddress\n    }),\n    checkCart() {\n      return this.cart.length === 0;\n    },\n    repeatOnPage() {\n      return this.$route.query.repeat === \"true\";\n    }\n  },\n  watch: {\n    repeatOnPage(value) {\n      // если повтор заказа был сделан когда страница уже была открыта\n      if (value) {\n        this.onRepeatOrder();\n      }\n    },\n    checkCart(value) {\n      if (value) {\n        if (!this.orderDone) {\n          // удаление query из запроса если нет товаров в корзине\n          this.$router.push({\n            path: \"/rol-shop/order\"\n          });\n        } else {\n          this.$router.push({\n            path: \"/rol-shop/success\"\n          });\n        }\n      }\n    }\n  },\n  setup(props) {\n    const {\n      address,\n      area\n    } = inject(\"address\");\n    const {\n      cart,\n      addToCart,\n      removeFromCart,\n      totalPrice,\n      historyOrder\n    } = inject(\"cart\");\n    const {\n      sushi,\n      rolls,\n      sets,\n      snacks,\n      drinks,\n      slides,\n      favorites,\n      categores,\n      product,\n      slidesTovar,\n      products\n    } = inject(\"items\");\n    const form = ref({\n      name: \"\",\n      tel: \"\",\n      address: \"\",\n      house: \"\",\n      input: \"\",\n      floor: \"\",\n      apartment: \"\",\n      restaurant: \"\",\n      comment1: \"\",\n      comment2: \"\",\n      note: \"\",\n      change: \"\",\n      code: \"\"\n    });\n    const ruleFormRef1 = ref({});\n    const ruleFormRef2 = ref({});\n    const ruleFormRef3 = ref({});\n    const ruleFormRef4 = ref({});\n    const ruleFormRef5 = ref({});\n    const ruleFormRef6 = ref({});\n    const ruleFormRef7 = ref({});\n    const ruleFormRef8 = ref({});\n    const code = ref();\n    const codeValid = ref();\n    const codeLoading = ref(false);\n    const freeProduct = ref([]);\n    const freeLoading = ref(false);\n    const store = useStore();\n    var arrayCoord = computed(() => store.state.map.arrayCoord);\n    var deliveryPossible = computed(() => store.state.map.deliveryPossible);\n    var checkFromSelect = ref(false);\n    var fromSelectRestaurant = ref(false);\n\n    // кастомное правило\n    const checkNumber = (rule, value, callback) => {\n      if (!Number.isInteger(value) && value) {\n        callback(new Error(\"Введите число!\"));\n      } else {\n        if (value <= 0 && value) {\n          callback(new Error(\"Неверное кол-во!\"));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    // получение промокода\n    const fetchCode = async () => {\n      try {\n        codeLoading.value = true;\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/code`);\n        code.value = data[0].code;\n      } catch (err) {\n        console.log(err);\n      } finally {\n        codeLoading.value = false;\n      }\n    };\n\n    // получение товаров по промокоду\n    const fetchFree = async () => {\n      try {\n        freeLoading.value = true;\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/items?category=snacks&id=41`);\n        freeProduct.value = data.map(obj => ({\n          ...obj,\n          count: 1\n        }));\n      } catch (err) {\n        console.log(err);\n      } finally {\n        freeLoading.value = false;\n      }\n    };\n    const checkCode = () => {\n      fetchCode().then(() => {\n        if (code.value === form.value.code) {\n          codeValid.value = true;\n          fetchFree();\n        } else {\n          codeValid.value = false;\n        }\n      });\n    };\n    const cancelCode = () => {\n      freeProduct.value = [];\n      codeValid.value = \"\";\n      form.value.code = \"\";\n    };\n\n    // проверка адреса на доступность для доставки\n    const checkGeo = (rule, value, callback) => {\n      let possible = false;\n      let address = `${props.cityRadio1}, ${value}`;\n      store.dispatch(\"map/geocoderAddress\", address).then(() => {\n        store.dispatch(\"map/checkAddress\", {\n          lat: arrayCoord.value[0],\n          long: arrayCoord.value[1]\n        }).then(() => {\n          possible = deliveryPossible.value;\n          if (value && !possible) {\n            callback(new Error(\"Доставка по этому адресу не осуществляется!\"));\n          } else {\n            callback();\n          }\n        });\n      });\n    };\n\n    // проверка что адрес был выбран из списка\n    const checkSelect = (rule, value, callback) => {\n      if (!checkFromSelect.value) {\n        callback(new Error(\"Адрес не выбран!\"));\n      } else {\n        callback();\n      }\n    };\n\n    // проверка что ресторан был выбран из списка\n    const checkRestaurant = (rule, value, callback) => {\n      if (!fromSelectRestaurant.value) {\n        callback(new Error(\"Адрес не выбран!\"));\n      } else {\n        callback();\n      }\n    };\n    const rules = ref({\n      address: [{\n        required: true,\n        message: \"Нужно заполнить!\",\n        trigger: \"blur\"\n      }, {\n        min: 5,\n        message: \"Слишком короткий!\",\n        trigger: \"blur\"\n      }, {\n        validator: checkGeo,\n        trigger: \"submit\"\n      }, {\n        validator: checkSelect,\n        trigger: \"submit\"\n      }],\n      restaurant: [{\n        required: true,\n        message: \"Нужно заполнить!\",\n        trigger: \"blur\"\n      }, {\n        min: 5,\n        message: \"Слишком короткий!\",\n        trigger: \"blur\"\n      }, {\n        validator: checkRestaurant,\n        trigger: \"submit\"\n      }],\n      name: [{\n        required: true,\n        message: \"Нужно заполнить!\",\n        trigger: \"blur\"\n      }, {\n        min: 3,\n        message: \"Слишком короткий!\",\n        trigger: \"blur\"\n      }],\n      tel: [{\n        required: true,\n        message: \"Нужно заполнить!\",\n        trigger: \"blur\"\n      }, {\n        min: 18,\n        message: \"Слишком короткий!\",\n        trigger: \"blur\"\n      }],\n      number: [{\n        validator: checkNumber,\n        trigger: \"blur\"\n      }]\n    });\n    const onClickAddPlus = item => {\n      if (!item.isAdded) {\n        addToCart(item);\n      } else {\n        removeFromCart(item);\n      }\n    };\n    return {\n      address,\n      form,\n      ruleFormRef1,\n      ruleFormRef2,\n      ruleFormRef3,\n      ruleFormRef4,\n      ruleFormRef5,\n      ruleFormRef6,\n      ruleFormRef7,\n      ruleFormRef8,\n      rules,\n      cart,\n      onClickAddPlus,\n      products,\n      totalPrice,\n      checkCode,\n      codeValid,\n      codeLoading,\n      freeProduct,\n      cancelCode,\n      freeLoading,\n      historyOrder,\n      sushi,\n      rolls,\n      sets,\n      snacks,\n      drinks,\n      slides,\n      favorites,\n      categores,\n      product,\n      slidesTovar,\n      area,\n      checkFromSelect,\n      fromSelectRestaurant\n    };\n  }\n};","map":{"version":3,"names":["axios","inject","ref","computed","turf","emitter","mapActions","mapMutations","mapState","useStore","data","currentDate","Date","data1","data2","data3","data4","data5","setDate","getDate","month1","getMonth","month2","month3","month4","month5","input","dialogVisible","tab","addAddress","paths","name","path","loadingPostAddress","restaurants","optionsDay","value","label","optionsTime","selectDay","selectTime","lat","long","svg","paymentDelivery","paymentPickup","sliderLoading","validForm1","validForm2","validForm3","isCreatingOrder","orderId","animals","doorOptions1","doorOptions2","addressRadio","cityRadio1","cityRadio2","resultsOrder","coord","$store","state","map","result","orderDone","methods","checkAddress","fetchAddressSelect","cb","checkFromSelect","get","area","results","item","address","title","text","house","component","find","pl","kind","err","console","log","handleSelectAddress","form","fetchAddress","length","id","fetchRestaurant","fetchProduct","products","obj","isAdded","count","geocoderCoord","commit","removeAddress","delete","index","findIndex","splice","sumbitForm","forName","validate","valid","postAddress","then","post","floor","apartment","city","filterArray","filter","element","toLowerCase","includes","handleSelect","fromSelectRestaurant","restaurant","validForms","ruleFormRef3","fields","ruleFormRef2","ruleFormRef1","generateTimeOptions","hours","getHours","minutes","getMinutes","push","i","postOrder","createOrder","info","tel","day","time","payment","items","cart","totalPrice","options","change","comment1","regularSticks","comment2","traningSticks","note","freeProduct","historyOrder","localStorage","setItem","JSON","stringify","fetchOrder","onRepeatOrder","updateItemsStatus","undefined","some","cartItem","repeatAddress","mounted","$route","query","repeat","deliveryPossible","deliveryCheck","addressDialog","loadingDeliveryCheck","loading","loadingAddress","checkCart","repeatOnPage","watch","$router","setup","props","addToCart","removeFromCart","sushi","rolls","sets","snacks","drinks","slides","favorites","categores","product","slidesTovar","code","ruleFormRef4","ruleFormRef5","ruleFormRef6","ruleFormRef7","ruleFormRef8","codeValid","codeLoading","freeLoading","store","arrayCoord","checkNumber","rule","callback","Number","isInteger","Error","fetchCode","fetchFree","checkCode","cancelCode","checkGeo","possible","dispatch","checkSelect","checkRestaurant","rules","required","message","trigger","min","validator","number","onClickAddPlus"],"sources":["C:\\gitPages\\rol-shop\\src\\pages\\OrderPlacing.vue"],"sourcesContent":["<template>\r\n  <div class=\"order\">\r\n    <div class=\"container\">\r\n      <div class=\"order__inner\">\r\n        <Category class=\"category-pages\" />\r\n        <Crumbs :paths=\"paths\" class=\"crumbs\" />\r\n\r\n        <h1 class=\"order-title\">Оформление заказа</h1>\r\n        <div class=\"order-wrapper\">\r\n          <div class=\"order-left\">\r\n            <div class=\"order__person\">\r\n              <h4 class=\"order__person-title\">Личные данные</h4>\r\n              <el-form ref=\"ruleFormRef3\" :model=\"form\">\r\n                <div class=\"order__person-inputs\">\r\n                  <el-form-item label=\"Имя\" prop=\"name\" :rules=\"rules.name\">\r\n                    <el-input v-model=\"form.name\" placeholder=\"Ввод\" />\r\n                  </el-form-item>\r\n                  <el-form-item label=\"Телефон\" prop=\"tel\" :rules=\"rules.tel\">\r\n                    <el-input\r\n                      v-model=\"form.tel\"\r\n                      v-mask=\"['+7 (###) ###-##-##']\"\r\n                      placeholder=\"Ввод\"\r\n                    />\r\n                  </el-form-item>\r\n                </div>\r\n              </el-form>\r\n            </div>\r\n            <div class=\"order__delivery\">\r\n              <div class=\"order__delivery-head\">\r\n                <h4 class=\"order__delivery-title\">Доставка</h4>\r\n                <el-button\r\n                  plain\r\n                  @click=\"\r\n                    dialogVisible = true;\r\n                    this.$store.commit('map/setDeliveryCheck', false);\r\n                  \"\r\n                >\r\n                  Зона доставки\r\n                  <img src=\"@/img/icon/info.svg\" alt=\"\" />\r\n                </el-button>\r\n                <el-dialog v-model=\"dialogVisible\" title=\"Зона доставки\" align-center>\r\n                  <p class=\"order-dialog__text\">\r\n                    Выберите место на карте, а мы проверим возможна ли доставка в эту зону\r\n                  </p>\r\n                  <div\r\n                    v-if=\"deliveryCheck\"\r\n                    v-loading=\"loadingDeliveryCheck\"\r\n                    :element-loading-spinner=\"svg\"\r\n                    element-loading-svg-view-box=\"-10, -10, 50, 50\"\r\n                    class=\"order-dialog__check\"\r\n                  >\r\n                    <img\r\n                      class=\"order-dialog__check-img\"\r\n                      :src=\"\r\n                        deliveryPossible\r\n                          ? require('@/img/icon/check-green.svg')\r\n                          : require('@/img/icon/none.svg')\r\n                      \"\r\n                      alt=\"\"\r\n                    />\r\n                    <p class=\"order-dialog__check-address\">{{ addressDialog }}</p>\r\n                    <span>—</span>\r\n                    <p\r\n                      :class=\"\r\n                        deliveryPossible\r\n                          ? 'order-dialog__check-green'\r\n                          : 'order-dialog__check-red'\r\n                      \"\r\n                    >\r\n                      {{ deliveryPossible ? \"Доставка возможна\" : \"Доставка невозможна\" }}\r\n                    </p>\r\n                  </div>\r\n                  <ul class=\"order-dialog__list\">\r\n                    <li class=\"order-dialog__list-item\">\r\n                      <img src=\"@/img/icon/circle-1.svg\" alt=\"zone\" />\r\n                      <span>—</span>\r\n                      <p class=\"order-dialog__list-text\">Бесплатная доставка</p>\r\n                    </li>\r\n                    <li class=\"order-dialog__list-item\">\r\n                      <img src=\"@/img/icon/circle-2.svg\" alt=\"zone\" />\r\n                      <span>—</span>\r\n                      <p class=\"order-dialog__list-text\">Платная доставка</p>\r\n                    </li>\r\n                    <li class=\"order-dialog__list-item\">\r\n                      <img src=\"@/img/icon/circle-3.svg\" alt=\"zone\" />\r\n                      <span>—</span>\r\n                      <p class=\"order-dialog__list-text\">Доставку не делаем</p>\r\n                    </li>\r\n                  </ul>\r\n                  <div class=\"destination__map\">\r\n                    <Map :geocoderCoord=\"geocoderCoord\" ref=\"Map\" />\r\n                  </div>\r\n                  <app-button\r\n                    class=\"order-dialog__btn\"\r\n                    @click=\"checkAddress({ lat, long })\"\r\n                    :disabled=\"loadingDeliveryCheck\"\r\n                  >\r\n                    <img src=\"@/img/icon/location-white.svg\" alt=\"\" />\r\n                    Проверить адрес\r\n                  </app-button>\r\n                </el-dialog>\r\n              </div>\r\n              <p class=\"order__delivery-text\">\r\n                Зона бесплатной доставки уточняется у оператора\r\n              </p>\r\n              <div class=\"tabs-wrapper\">\r\n                <div\r\n                  class=\"tabs order__tabs\"\r\n                  :class=\"tab === 'tab_1' ? 'tabs-active-1' : 'tabs-active-2'\"\r\n                >\r\n                  <div\r\n                    class=\"tab\"\r\n                    @click=\"tab = 'tab_1'\"\r\n                    :class=\"{ 'tab--is-active': tab === 'tab_1' }\"\r\n                  >\r\n                    Доставка\r\n                  </div>\r\n                  <div\r\n                    class=\"tab\"\r\n                    @click=\"(tab = 'tab_2'), fetchRestaurant()\"\r\n                    :class=\"{ 'tab--is-active': tab === 'tab_2' }\"\r\n                  >\r\n                    Самовывоз\r\n                  </div>\r\n                </div>\r\n                <div class=\"tabs__content\">\r\n                  <div v-if=\"tab === 'tab_1'\" class=\"tab__content\">\r\n                    <p class=\"delivery__text\">Минимальная сумма заказа 400 грн</p>\r\n                    <div class=\"delivery__old\" v-if=\"!addAddress && address.length > 0\">\r\n                      <ul class=\"address__list\" v-auto-animate>\r\n                        <label\r\n                          class=\"address__list-item\"\r\n                          v-for=\"(item, index) in address\"\r\n                          :key=\"index\"\r\n                        >\r\n                          <div class=\"address__info\">\r\n                            <p class=\"address__address\">\r\n                              {{ `${item.city}, ${item.address}` }}\r\n                            </p>\r\n                            <p class=\"address__other\">\r\n                              Подьезд {{ item.input ? item.input : \"(-)\" }}, этаж\r\n                              {{ item.floor ? item.floor : \"(-)\" }}, квартира\r\n                              {{ item.apartment ? item.apartment : \"(-)\" }}\r\n                            </p>\r\n                          </div>\r\n\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"address\"\r\n                            v-model=\"addressRadio\"\r\n                            :value=\"item.id\"\r\n                          />\r\n                        </label>\r\n                      </ul>\r\n                      <div class=\"delivery__btns\">\r\n                        <button class=\"delivery__btn\" @click=\"addAddress = true\">\r\n                          Добавить новый адрес\r\n                        </button>\r\n                        <button class=\"delivery__btn\" @click.prevent=\"removeAddress\">\r\n                          Удалить адрес\r\n                        </button>\r\n                      </div>\r\n                      <div class=\"delivery__other\">\r\n                        <label for=\"delivery__other-1\" class=\"delivery__other-label\">\r\n                          <input\r\n                            class=\"delivery__other-check\"\r\n                            type=\"checkbox\"\r\n                            id=\"delivery__other-1\"\r\n                            v-model=\"doorOptions1\"\r\n                            value=\"Не звонить в дверь\"\r\n                          />\r\n                          Не звонить в дверь\r\n                        </label>\r\n                        <label for=\"delivery__other-2\" class=\"delivery__other-label\">\r\n                          <input\r\n                            class=\"delivery__other-check\"\r\n                            type=\"checkbox\"\r\n                            id=\"delivery__other-2\"\r\n                            v-model=\"doorOptions1\"\r\n                            value=\"Оставить под дверью\"\r\n                          />\r\n                          Оставить под дверью\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"delivery__new\" v-if=\"addAddress || address.length === 0\">\r\n                      <el-form ref=\"ruleFormRef1\" :model=\"form\">\r\n                        <div class=\"delivery__new-city\">\r\n                          <label for=\"city-1\" class=\"delivery__new-label\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"city\"\r\n                              id=\"city-1\"\r\n                              v-model=\"cityRadio1\"\r\n                              value=\"Киев\"\r\n                            />\r\n                            <p>Киев</p>\r\n                          </label>\r\n                          <label for=\"city-2\" class=\"delivery__new-label\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"city\"\r\n                              id=\"city-2\"\r\n                              v-model=\"cityRadio1\"\r\n                              value=\"Днепр\"\r\n                            />\r\n                            <p>Днепр</p>\r\n                          </label>\r\n                          <label for=\"city-3\" class=\"delivery__new-label\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"city\"\r\n                              id=\"city-3\"\r\n                              v-model=\"cityRadio1\"\r\n                              value=\"Харьков\"\r\n                            />\r\n                            <p>Харьков</p>\r\n                          </label>\r\n                          <label for=\"city-4\" class=\"delivery__new-label\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"city\"\r\n                              id=\"city-4\"\r\n                              v-model=\"cityRadio1\"\r\n                              value=\"Одесса\"\r\n                            />\r\n                            <p>Одесса</p>\r\n                          </label>\r\n                        </div>\r\n                        <el-form-item\r\n                          label=\"Улица, дом\"\r\n                          prop=\"address\"\r\n                          :rules=\"rules.address\"\r\n                        >\r\n                          <el-autocomplete\r\n                            v-model=\"form.address\"\r\n                            :fetch-suggestions=\"fetchAddressSelect\"\r\n                            :trigger-on-focus=\"true\"\r\n                            :select-when-unmatched=\"false\"\r\n                            placeholder=\"Введите адрес\"\r\n                            @select=\"handleSelectAddress\"\r\n                            :debounce=\"1000\"\r\n                            clearable\r\n                            fit-input-width\r\n                            popper-class=\"my-autocomplete\"\r\n                            class=\"destination__form-search\"\r\n                          >\r\n                            <template #default=\"{ item }\">\r\n                              <div class=\"address\">{{ item.address }}</div>\r\n                            </template>\r\n                          </el-autocomplete>\r\n                        </el-form-item>\r\n                        <div class=\"delivery__new-inputs\">\r\n                          <el-form-item label=\"Дом\">\r\n                            <el-input v-model=\"form.house\" placeholder=\"Ввод\" />\r\n                          </el-form-item>\r\n                          <el-form-item label=\"Подъезд\">\r\n                            <el-input v-model=\"form.input\" placeholder=\"Ввод\" />\r\n                          </el-form-item>\r\n                          <el-form-item label=\"Этаж\">\r\n                            <el-input v-model=\"form.floor\" placeholder=\"Ввод\" />\r\n                          </el-form-item>\r\n                          <el-form-item label=\"Квартира\">\r\n                            <el-input v-model=\"form.apartment\" placeholder=\"Ввод\" />\r\n                          </el-form-item>\r\n                        </div>\r\n                        <div class=\"delivery__other\">\r\n                          <label for=\"delivery__other-1\" class=\"delivery__other-label\">\r\n                            <input\r\n                              class=\"delivery__other-check\"\r\n                              type=\"checkbox\"\r\n                              id=\"delivery__other-1\"\r\n                              v-model=\"doorOptions2\"\r\n                              value=\"Не звонить в дверь\"\r\n                            />\r\n                            Не звонить в дверь\r\n                          </label>\r\n                          <label for=\"delivery__other-2\" class=\"delivery__other-label\">\r\n                            <input\r\n                              class=\"delivery__other-check\"\r\n                              type=\"checkbox\"\r\n                              id=\"delivery__other-2\"\r\n                              v-model=\"doorOptions2\"\r\n                              value=\"Оставить под дверью\"\r\n                            />\r\n                            Оставить под дверью\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"delivery__new-back\">\r\n                          <el-form-item>\r\n                            <button\r\n                              class=\"delivery__new-back__btn\"\r\n                              @click.prevent=\"sumbitForm(ruleFormRef1)\"\r\n                              :disabled=\"\r\n                                loadingPostAddress ||\r\n                                loadingDeliveryCheck ||\r\n                                loadingAddress\r\n                              \"\r\n                            >\r\n                              <div\r\n                                v-if=\"\r\n                                  loadingPostAddress ||\r\n                                  loadingDeliveryCheck ||\r\n                                  loadingAddress\r\n                                \"\r\n                                class=\"delivery__new-back__box\"\r\n                              >\r\n                                <div class=\"custom-loading\">\r\n                                  <svg class=\"circular\" viewBox=\"-10, -10, 50, 50\">\r\n                                    <path\r\n                                      class=\"path\"\r\n                                      d=\"\r\n                                          M 30 15\r\n                                          L 28 17\r\n                                          M 25.61 25.61\r\n                                          A 15 15, 0, 0, 1, 15 30\r\n                                          A 15 15, 0, 1, 1, 27.99 7.5\r\n                                          L 15 15\r\n                                        \"\r\n                                      style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"\r\n                                    />\r\n                                  </svg>\r\n                                </div>\r\n                                <span class=\"delivery__new-back__loading\">{{\r\n                                  loadingDeliveryCheck || loadingAddress\r\n                                    ? \"Проверка адреса\"\r\n                                    : loadingPostAddress\r\n                                    ? \"Идет отправка\"\r\n                                    : \"\"\r\n                                }}</span>\r\n                              </div>\r\n                              <div v-else class=\"delivery__new-back__box\">\r\n                                <img src=\"@/img/icon/arrow-green.svg\" alt=\"\" />\r\n                                <span>Назад</span>\r\n                              </div>\r\n                            </button>\r\n                          </el-form-item>\r\n                          <p class=\"delivery__new-back__text\">\r\n                            Адрес доставки сохранится автоматически\r\n                          </p>\r\n                        </div>\r\n                      </el-form>\r\n                    </div>\r\n                  </div>\r\n                  <div v-if=\"tab === 'tab_2'\" class=\"tab__content\">\r\n                    <el-form ref=\"ruleFormRef2\" :model=\"form\">\r\n                      <div class=\"delivery__new-city\">\r\n                        <label for=\"city-1\" class=\"delivery__new-label\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"city\"\r\n                            id=\"city-1\"\r\n                            @change=\"fetchRestaurant(), (form.restaurant = '')\"\r\n                            v-model=\"cityRadio2\"\r\n                            value=\"Киев\"\r\n                          />\r\n                          <p>Киев</p>\r\n                        </label>\r\n                        <label for=\"city-2\" class=\"delivery__new-label\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"city\"\r\n                            id=\"city-2\"\r\n                            @change=\"fetchRestaurant(), (form.restaurant = '')\"\r\n                            v-model=\"cityRadio2\"\r\n                            value=\"Днепр\"\r\n                          />\r\n                          <p>Днепр</p>\r\n                        </label>\r\n                        <label for=\"city-3\" class=\"delivery__new-label\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"city\"\r\n                            id=\"city-3\"\r\n                            @change=\"fetchRestaurant(), (form.restaurant = '')\"\r\n                            v-model=\"cityRadio2\"\r\n                            value=\"Харьков\"\r\n                          />\r\n                          <p>Харьков</p>\r\n                        </label>\r\n                        <label for=\"city-4\" class=\"delivery__new-label\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"city\"\r\n                            id=\"city-4\"\r\n                            @change=\"fetchRestaurant(), (form.restaurant = '')\"\r\n                            v-model=\"cityRadio2\"\r\n                            value=\"Одесса\"\r\n                          />\r\n                          <p>Одесса</p>\r\n                        </label>\r\n                      </div>\r\n                      <el-form-item\r\n                        label=\"Ресторан с которого будете забирать\"\r\n                        prop=\"restaurant\"\r\n                        :rules=\"rules.restaurant\"\r\n                      >\r\n                        <el-autocomplete\r\n                          v-model=\"form.restaurant\"\r\n                          :fetch-suggestions=\"filterArray\"\r\n                          placeholder=\"Введите адрес\"\r\n                          @select=\"handleSelect\"\r\n                          @input=\"this.fromSelectRestaurant = false\"\r\n                          :debounce=\"500\"\r\n                          clearable\r\n                          fit-input-width\r\n                          popper-class=\"my-autocomplete\"\r\n                          class=\"destination__form-search\"\r\n                        >\r\n                          <template #default=\"{ item }\">\r\n                            <div class=\"address\">{{ item.address }}</div>\r\n                          </template>\r\n                        </el-autocomplete>\r\n                      </el-form-item>\r\n                    </el-form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"order__time\">\r\n              <h3 class=\"order__time-title\">Время доставки</h3>\r\n              <p class=\"order__time-text\">Время доставки заказа уточните по телефону.</p>\r\n              <div class=\"order__time-selects\">\r\n                <div class=\"order__time-select\">\r\n                  <p class=\"order__time-select-title\">День</p>\r\n                  <el-select\r\n                    v-model=\"selectDay\"\r\n                    popper-class=\"order-select\"\r\n                    @change=\"generateTimeOptions\"\r\n                  >\r\n                    <el-option\r\n                      v-for=\"item in optionsDay\"\r\n                      :key=\"item.value\"\r\n                      :label=\"item.label\"\r\n                      :value=\"item.value\"\r\n                    >\r\n                      <span class=\"order__time-select-item\">{{ item.label }}</span>\r\n                    </el-option>\r\n                  </el-select>\r\n                </div>\r\n                <div class=\"order__time-select\">\r\n                  <p class=\"order__time-select-title\">Время</p>\r\n                  <el-select v-model=\"selectTime\" popper-class=\"order-select\">\r\n                    <el-option\r\n                      v-for=\"item in optionsTime\"\r\n                      :key=\"item.value\"\r\n                      :label=\"item.label\"\r\n                      :value=\"item.value\"\r\n                    />\r\n                  </el-select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"order__payment\">\r\n              <h3 class=\"order__payment-title\">Способ оплаты</h3>\r\n              <p class=\"order__payment-text\">\r\n                Алкогольные напитки оплачиваются только наличными\r\n              </p>\r\n              <form v-if=\"tab === 'tab_1'\" action=\"\">\r\n                <div class=\"order__payment-list\">\r\n                  <label class=\"order__payment-label\" for=\"radio-1\">\r\n                    <input\r\n                      class=\"order__payment-radio\"\r\n                      type=\"radio\"\r\n                      name=\"payment\"\r\n                      id=\"radio-1\"\r\n                      v-model=\"paymentDelivery\"\r\n                      checked\r\n                      value=\"Наличными курьеру\"\r\n                    />\r\n                    Наличными курьеру\r\n                  </label>\r\n                  <label class=\"order__payment-label\" for=\"radio-2\">\r\n                    <input\r\n                      class=\"order__payment-radio\"\r\n                      type=\"radio\"\r\n                      name=\"payment\"\r\n                      id=\"radio-2\"\r\n                      v-model=\"paymentDelivery\"\r\n                      value=\"Оплата терминалом курьеру\"\r\n                    />\r\n                    Оплата терминалом курьеру\r\n                  </label>\r\n                  <label class=\"order__payment-label\" for=\"radio-3\">\r\n                    <input\r\n                      class=\"order__payment-radio\"\r\n                      type=\"radio\"\r\n                      name=\"payment\"\r\n                      id=\"radio-3\"\r\n                      v-model=\"paymentDelivery\"\r\n                      value=\"Оплата картой online\"\r\n                    />\r\n                    Оплата картой online\r\n                  </label>\r\n                  <label class=\"order__payment-label\" for=\"radio-4\">\r\n                    <input\r\n                      class=\"order__payment-radio\"\r\n                      type=\"radio\"\r\n                      name=\"payment\"\r\n                      id=\"radio-4\"\r\n                      v-model=\"paymentDelivery\"\r\n                      value=\"Оплата через BitPay\"\r\n                    />\r\n                    Оплата через BitPay\r\n                  </label>\r\n                </div>\r\n              </form>\r\n              <form v-if=\"tab === 'tab_2'\" action=\"\">\r\n                <div class=\"order__payment-list\">\r\n                  <label class=\"order__payment-label\" for=\"radio-1\">\r\n                    <input\r\n                      class=\"order__payment-radio\"\r\n                      type=\"radio\"\r\n                      name=\"payment\"\r\n                      id=\"radio-1\"\r\n                      v-model=\"paymentPickup\"\r\n                      checked\r\n                      value=\"Наличными в точке выдачи\"\r\n                    />\r\n                    Наличными в точке выдачи\r\n                  </label>\r\n                  <label class=\"order__payment-label\" for=\"radio-2\">\r\n                    <input\r\n                      class=\"order__payment-radio\"\r\n                      type=\"radio\"\r\n                      name=\"payment\"\r\n                      id=\"radio-2\"\r\n                      v-model=\"paymentPickup\"\r\n                      value=\"Оплата картой online\"\r\n                    />\r\n                    Оплата картой online\r\n                  </label>\r\n                  <label class=\"order__payment-label\" for=\"radio-3\">\r\n                    <input\r\n                      class=\"order__payment-radio\"\r\n                      type=\"radio\"\r\n                      name=\"payment\"\r\n                      id=\"radio-3\"\r\n                      v-model=\"paymentPickup\"\r\n                      value=\"Оплата через BitPay\"\r\n                    />\r\n                    Оплата через BitPay\r\n                  </label>\r\n                </div>\r\n              </form>\r\n              <div\r\n                v-if=\"\r\n                  (paymentDelivery === 'Наличными курьеру' && tab === 'tab_1') ||\r\n                  (paymentPickup === 'Наличными в точке выдачи' && tab === 'tab_2')\r\n                \"\r\n                class=\"order__payment-change\"\r\n              >\r\n                <el-form ref=\"ruleFormRef5\" :model=\"form\">\r\n                  <el-form-item\r\n                    label=\"Подготовить сдачу с\"\r\n                    prop=\"change\"\r\n                    :rules=\"rules.number\"\r\n                    class=\"order__payment-change-input\"\r\n                  >\r\n                    <el-input v-model.number=\"form.change\" placeholder=\"500\">\r\n                      <template #suffix>\r\n                        <span>грн</span>\r\n                      </template>\r\n                    </el-input>\r\n                  </el-form-item>\r\n                </el-form>\r\n              </div>\r\n            </div>\r\n            <div class=\"order__comment\">\r\n              <h3 class=\"order__comment-title\">Комментарий</h3>\r\n              <el-form ref=\"ruleFormRef4\" :model=\"form\">\r\n                <div class=\"order__comment-inputs\">\r\n                  <el-form-item\r\n                    label=\"Обычные палочки\"\r\n                    prop=\"comment1\"\r\n                    :rules=\"rules.number\"\r\n                  >\r\n                    <el-input v-model.number=\"form.comment1\" placeholder=\"4\" />\r\n                  </el-form-item>\r\n                  <el-form-item\r\n                    label=\"Учебные палочки\"\r\n                    prop=\"comment2\"\r\n                    :rules=\"rules.number\"\r\n                  >\r\n                    <el-input v-model.number=\"form.comment2\" placeholder=\"1\" />\r\n                  </el-form-item>\r\n                </div>\r\n                <el-form-item label=\"Примечание к заказу\">\r\n                  <el-input\r\n                    class=\"order__comment-textarea\"\r\n                    v-model=\"form.note\"\r\n                    type=\"textarea\"\r\n                    :rows=\"2\"\r\n                  />\r\n                </el-form-item>\r\n                <div class=\"delivery__other\">\r\n                  <label for=\"order__comment-1\" class=\"delivery__other-label\">\r\n                    <input\r\n                      v-model=\"animals\"\r\n                      class=\"delivery__other-check\"\r\n                      type=\"checkbox\"\r\n                      id=\"order__comment-1\"\r\n                      value=\"cat\"\r\n                    />\r\n                    У меня есть кошка\r\n                  </label>\r\n                  <label for=\"order__comment-2\" class=\"delivery__other-label\">\r\n                    <input\r\n                      v-model=\"animals\"\r\n                      class=\"delivery__other-check\"\r\n                      type=\"checkbox\"\r\n                      id=\"order__comment-2\"\r\n                      value=\"dog\"\r\n                    />\r\n                    У меня есть собака\r\n                  </label>\r\n                </div>\r\n              </el-form>\r\n            </div>\r\n          </div>\r\n          <div class=\"order-right\">\r\n            <CartList class=\"order-right__drawer\" />\r\n\r\n            <EmptyBlock\r\n              v-if=\"cart.length === 0\"\r\n              :imgUrl=\"require('@/img/icon/cart-empty.svg')\"\r\n              title=\"Вы еще не добавили товары в корзину\"\r\n              text=\"Добавьте товары в корзину, чтобы сделать заказ\"\r\n            />\r\n\r\n            <SliderOrder\r\n              class=\"order-added\"\r\n              v-loading=\"sliderLoading\"\r\n              :slides=\"products\"\r\n              @order-add-cart=\"(item) => onClickAddPlus(item)\"\r\n            />\r\n\r\n            <div class=\"order__total\">\r\n              <el-form ref=\"ruleFormRef6\">\r\n                <div class=\"order__total-promokod\">\r\n                  <el-form-item class=\"order__total-input\">\r\n                    <p v-if=\"codeValid === false\" class=\"order__total-novalid\">\r\n                      Промокод введен не верно!\r\n                    </p>\r\n                    <el-input placeholder=\"Введите промокод\" v-model=\"form.code\">\r\n                      <template #suffix>\r\n                        <img\r\n                          v-if=\"codeValid === true\"\r\n                          src=\"@/img/icon/check-green.svg\"\r\n                          alt=\"\"\r\n                        />\r\n                        <img\r\n                          v-if=\"codeValid === false\"\r\n                          src=\"@/img/icon/warning.svg\"\r\n                          alt=\"\"\r\n                        />\r\n                      </template>\r\n                    </el-input>\r\n                  </el-form-item>\r\n                  <el-form-item>\r\n                    <button\r\n                      class=\"order__total-promokod-btn\"\r\n                      @click.prevent=\"codeValid === true ? cancelCode() : checkCode()\"\r\n                      :disabled=\"codeLoading || freeLoading\"\r\n                    >\r\n                      <div v-if=\"codeLoading\" class=\"order__total-btn-box\">\r\n                        <div class=\"custom-loading\">\r\n                          <svg class=\"circular\" viewBox=\"-10, -10, 50, 50\">\r\n                            <path\r\n                              class=\"path\"\r\n                              d=\"\r\n                                          M 30 15\r\n                                          L 28 17\r\n                                          M 25.61 25.61\r\n                                          A 15 15, 0, 0, 1, 15 30\r\n                                          A 15 15, 0, 1, 1, 27.99 7.5\r\n                                          L 15 15\r\n                                        \"\r\n                              style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"\r\n                            />\r\n                          </svg>\r\n                        </div>\r\n                        <span>Подождите...</span>\r\n                      </div>\r\n                      <span v-if=\"!codeLoading\">{{\r\n                        codeValid === true ? \"Отменить\" : \"Применить\"\r\n                      }}</span>\r\n                    </button>\r\n                  </el-form-item>\r\n                </div>\r\n              </el-form>\r\n              <div v-if=\"freeProduct.length > 0\" class=\"order__total-list\">\r\n                <div class=\"order__total-item\" v-for=\"item in freeProduct\" :key=\"item.id\">\r\n                  <div class=\"order__total-list-left\">\r\n                    <div class=\"order__total-imgwrapper\">\r\n                      <img\r\n                        class=\"order__total-img\"\r\n                        :src=\"require(`@/img/products/${item.imgUrl}`)\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"order__total-info\">\r\n                      <p class=\"order__total-list-title\">{{ item.title }}</p>\r\n                      <p class=\"order__total-list-weight\">Вес: {{ item.weight }} г</p>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"order__total-list-right\">\r\n                    <p class=\"order__total-count\">{{ item.count }} шт</p>\r\n                    <p class=\"order__total-free\">Бесплатно</p>\r\n                  </div>\r\n                  <div class=\"order__total-list-btn\">\r\n                    <img src=\"@/img/icon/plus-green.svg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"order__total-box\">\r\n                <div class=\"order__total-left\">\r\n                  <p class=\"order__total-text\">Итого:</p>\r\n                  <p class=\"order__total-price\">{{ totalPrice }}<span>грн</span></p>\r\n                </div>\r\n                <button\r\n                  @click=\"postOrder\"\r\n                  class=\"order__total-btn\"\r\n                  :disabled=\"totalPrice < 400 || isCreatingOrder\"\r\n                >\r\n                  <div v-if=\"isCreatingOrder\" class=\"order__total-btn-box\">\r\n                    <div class=\"custom-loading\">\r\n                      <svg class=\"circular\" viewBox=\"-10, -10, 50, 50\">\r\n                        <path\r\n                          class=\"path\"\r\n                          d=\"\r\n                                          M 30 15\r\n                                          L 28 17\r\n                                          M 25.61 25.61\r\n                                          A 15 15, 0, 0, 1, 15 30\r\n                                          A 15 15, 0, 1, 1, 27.99 7.5\r\n                                          L 15 15\r\n                                        \"\r\n                          style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <span>Отправка...</span>\r\n                  </div>\r\n                  <span v-else>Оформить заказ</span>\r\n                </button>\r\n              </div>\r\n              <p v-if=\"totalPrice < 400\" class=\"order__total-warning\">\r\n                Минимальная сумма заказа 400 грн\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { inject, ref, computed } from \"vue\";\r\nimport * as turf from \"@turf/turf\";\r\nimport emitter from \"@/store/eventBus.js\";\r\nimport { mapActions, mapMutations, mapState, useStore } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    let currentDate = new Date();\r\n\r\n    let data1 = new Date();\r\n    let data2 = new Date();\r\n    let data3 = new Date();\r\n    let data4 = new Date();\r\n    let data5 = new Date();\r\n    data1.setDate(currentDate.getDate());\r\n    data2.setDate(currentDate.getDate() + 1);\r\n    data3.setDate(currentDate.getDate() + 2);\r\n    data4.setDate(currentDate.getDate() + 3);\r\n    data5.setDate(currentDate.getDate() + 4);\r\n\r\n    let month1 = data1.getMonth() + 1;\r\n    let month2 = data2.getMonth() + 1;\r\n    let month3 = data3.getMonth() + 1;\r\n    let month4 = data4.getMonth() + 1;\r\n    let month5 = data5.getMonth() + 1;\r\n\r\n    data1 = data1 < 10 ? \"0\" + data1.getDate() : data1.getDate();\r\n    data2 = data2 < 10 ? \"0\" + data2.getDate() : data2.getDate();\r\n    data3 = data3 < 10 ? \"0\" + data3.getDate() : data3.getDate();\r\n    data4 = data4 < 10 ? \"0\" + data4.getDate() : data4.getDate();\r\n    data5 = data5 < 10 ? \"0\" + data5.getDate() : data5.getDate();\r\n\r\n    month1 = month1 < 10 ? \"0\" + month1 : month1;\r\n    month2 = month2 < 10 ? \"0\" + month2 : month2;\r\n    month3 = month3 < 10 ? \"0\" + month3 : month3;\r\n    month4 = month4 < 10 ? \"0\" + month4 : month4;\r\n    month5 = month5 < 10 ? \"0\" + month5 : month5;\r\n\r\n    return {\r\n      input: \"\",\r\n      dialogVisible: false,\r\n      tab: \"tab_1\",\r\n      addAddress: false,\r\n      paths: [{ name: \"Оформление заказа\", path: \"/rol-shop/order\" }],\r\n      loadingPostAddress: false,\r\n      restaurants: [],\r\n      optionsDay: [\r\n        {\r\n          value: `${data1}.${month1}`,\r\n          label: \"Сегодня\",\r\n        },\r\n        {\r\n          value: `${data2}.${month2}`,\r\n          label: \"Завтра\",\r\n        },\r\n        {\r\n          value: `${data3}.${month3}`,\r\n          label: `${data3}.${month3}`,\r\n        },\r\n        {\r\n          value: `${data4}.${month4}`,\r\n          label: `${data4}.${month4}`,\r\n        },\r\n        {\r\n          value: `${data5}.${month5}`,\r\n          label: `${data5}.${month5}`,\r\n        },\r\n      ],\r\n      optionsTime: [],\r\n      selectDay: \"\",\r\n      selectTime: \"\",\r\n      lat: \"\",\r\n      long: \"\",\r\n      svg: `\r\n        <path class=\"path\" d=\"\r\n          M 30 15\r\n          L 28 17\r\n          M 25.61 25.61\r\n          A 15 15, 0, 0, 1, 15 30\r\n          A 15 15, 0, 1, 1, 27.99 7.5\r\n          L 15 15\r\n        \" style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0); stroke: #f63\"/>\r\n      `,\r\n      paymentDelivery: \"Наличными курьеру\",\r\n      paymentPickup: \"Наличными в точке выдачи\",\r\n      sliderLoading: false,\r\n      validForm1: false,\r\n      validForm2: false,\r\n      validForm3: false,\r\n      isCreatingOrder: false,\r\n      orderId: null,\r\n      animals: [\"dog\"],\r\n      doorOptions1: [\"Оставить под дверью\"],\r\n      doorOptions2: [\"Оставить под дверью\"],\r\n      addressRadio: \"\",\r\n      cityRadio1: \"Киев\",\r\n      cityRadio2: \"Киев\",\r\n      resultsOrder: \"\",\r\n      coord: this.$store.state.map.coord,\r\n      result: [],\r\n      orderDone: false,\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      checkAddress: \"map/checkAddress\",\r\n    }),\r\n    async fetchAddressSelect(value, cb) {\r\n      try {\r\n        this.checkFromSelect = false;\r\n        if (value) {\r\n          const { data } = await axios.get(\r\n            `https://suggest-maps.yandex.ru/v1/suggest?apikey=00748542-2e0b-439d-864b-98b4baac2c5f&text=${this.cityRadio1}, ${value}&bbox=${this.area}&lang=ru_RU&strict_bounds=1&types=street,metro,house,district,vegetation&print_address=1`\r\n          );\r\n          if (data.results) {\r\n            this.result = data.results.map((item) => ({\r\n              address: item.title.text,\r\n              house: item.address.component.find((pl) => pl.kind == \"HOUSE\")\r\n                ? item.address.component.find((pl) => pl.kind == \"HOUSE\").name\r\n                : \"\",\r\n            }));\r\n\r\n            // возвращение данных\r\n            cb(this.result);\r\n          } else {\r\n            // если нет результатов / скрытие списка\r\n            cb([]);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    handleSelectAddress(item) {\r\n      // заполнение полей\r\n      this.form.address = item.address;\r\n      this.form.house = item.house;\r\n\r\n      // проверка что адрес был выбран из списка\r\n      this.checkFromSelect = true;\r\n    },\r\n    async fetchAddress() {\r\n      try {\r\n        const { data } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/address`);\r\n\r\n        this.address = data;\r\n\r\n        // по умолчанию первый отмечен\r\n        if (this.address.length > 0) {\r\n          this.addressRadio = this.address[0].id;\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    async fetchRestaurant() {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://c2ff7a8de0a119c8.mokky.dev/restaurant?city=${this.cityRadio2}`\r\n        );\r\n\r\n        this.restaurants = data;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    async fetchProduct() {\r\n      try {\r\n        this.sliderLoading = true;\r\n\r\n        const { data } = await axios.get(\r\n          `https://c2ff7a8de0a119c8.mokky.dev/items?category=drinks`\r\n        );\r\n\r\n        this.products = data.map((obj) => ({\r\n          ...obj,\r\n          isAdded: false,\r\n          count: 1,\r\n        }));\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        this.sliderLoading = false;\r\n      }\r\n    },\r\n    geocoderCoord(lat, long) {\r\n      this.lat = lat;\r\n      this.long = long;\r\n\r\n      // скрытие блока при клике по карте\r\n      this.$store.commit(\"map/setDeliveryCheck\", false);\r\n    },\r\n    async removeAddress() {\r\n      await axios.delete(\r\n        `https://c2ff7a8de0a119c8.mokky.dev/address/${this.addressRadio}`\r\n      );\r\n\r\n      let index = this.address.findIndex((item) => item.id == this.addressRadio);\r\n      if (index !== -1) {\r\n        this.address.splice(index, 1);\r\n      }\r\n\r\n      // первый адрес отмечен\r\n      if (this.address.length > 0) {\r\n        this.addressRadio = this.address[0].id;\r\n      }\r\n    },\r\n    sumbitForm(forName) {\r\n      forName.validate((valid) => {\r\n        if (valid) {\r\n          this.postAddress().then(() => {\r\n            this.addAddress = false;\r\n            this.fetchAddress();\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    async postAddress() {\r\n      try {\r\n        this.loadingPostAddress = true;\r\n\r\n        \r\n        const { data } = await axios.post(`https://c2ff7a8de0a119c8.mokky.dev/address`, {\r\n          address: this.form.address,\r\n          house: this.form.house,\r\n          input: this.form.input,\r\n          floor: this.form.floor,\r\n          apartment: this.form.apartment,\r\n          city: this.cityRadio1,\r\n        });\r\n\r\n        this.form.address = \"\";\r\n        this.form.house = \"\";\r\n        this.form.input = \"\";\r\n        this.form.floor = \"\";\r\n        this.form.apartment = \"\";\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        this.loadingPostAddress = false;\r\n      }\r\n    },\r\n    filterArray(input, cb) {\r\n      const results = this.restaurants.filter((element) =>\r\n        element.address.toLowerCase().includes(input.toLowerCase())\r\n      );\r\n      cb(results);\r\n    },\r\n    handleSelect(item) {\r\n      // ресторан из списка\r\n      this.fromSelectRestaurant = true;\r\n      this.form.restaurant = item.address;\r\n    },\r\n    async validForms() {\r\n      if (!this.ruleFormRef3) return;\r\n      await this.ruleFormRef3.validate((valid, fields) => {\r\n        if (valid) {\r\n          this.validForm1 = true;\r\n        }\r\n      });\r\n      if (this.tab === \"tab_2\") {\r\n        await this.ruleFormRef2.validate((valid, fields) => {\r\n          if (valid) {\r\n            this.validForm2 = true;\r\n          }\r\n        });\r\n      }\r\n      if (this.tab === \"tab_1\" && (this.addAddress || this.address.length === 0)) {\r\n        await this.ruleFormRef1.validate((valid, fields) => {\r\n          if (valid) {\r\n            this.validForm3 = true;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    generateTimeOptions() {\r\n      this.optionsTime = [];\r\n      if (this.selectDay === this.optionsDay[0].value) {\r\n        let currentDate = new Date();\r\n        let hours = currentDate.getHours();\r\n        let minutes = currentDate.getMinutes();\r\n\r\n        this.optionsTime.push({ value: `${hours}:${minutes}`, label: \"Ближайшее\" });\r\n\r\n        if (minutes > 30) {\r\n          this.optionsTime.push({ value: `${hours + 2}:30`, label: `${hours + 2}:30` });\r\n          for (let i = hours + 3; i < 23; i++) {\r\n            this.optionsTime.push({ value: `${i}:00`, label: `${i}:00` });\r\n            this.optionsTime.push({ value: `${i}:30`, label: `${i}:30` });\r\n          }\r\n        } else {\r\n          for (let i = hours + 2; i < 23; i++) {\r\n            this.optionsTime.push({ value: `${i}:00`, label: `${i}:00` });\r\n            this.optionsTime.push({ value: `${i}:30`, label: `${i}:30` });\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = 11; i < 23; i++) {\r\n          this.optionsTime.push({ value: `${i}:00`, label: `${i}:00` });\r\n          this.optionsTime.push({ value: `${i}:30`, label: `${i}:30` });\r\n        }\r\n      }\r\n      this.selectTime = this.optionsTime[0].value;\r\n    },\r\n    postOrder() {\r\n      this.validForms().then(() => {\r\n        if (this.tab === \"tab_2\") {\r\n          //самовывоз\r\n          if (this.validForm1 && this.validForm2) {\r\n            this.createOrder();\r\n          }\r\n        } else if (\r\n          this.tab === \"tab_1\" &&\r\n          (this.addAddress || this.address.length === 0)\r\n        ) {\r\n          // доставка и добавить\r\n          if (this.validForm1 && this.validForm3) {\r\n            this.createOrder();\r\n          }\r\n        } else {\r\n          // доставка и сохраненный адрес\r\n          if (this.validForm1) {\r\n            this.createOrder();\r\n          }\r\n        }\r\n      });\r\n    },\r\n    async createOrder() {\r\n      try {\r\n        this.isCreatingOrder = true;\r\n\r\n        const info = {\r\n          name: this.form.name,\r\n          tel: this.form.tel,\r\n          day: this.selectDay,\r\n          time: this.selectTime,\r\n          payment: this.tab === \"tab_1\" ? this.paymentDelivery : this.paymentPickup,\r\n          items: this.cart,\r\n          totalPrice: this.totalPrice,\r\n          animals: this.animals,\r\n          methods: this.tab === \"tab_1\" ? \"Доставка\" : \"Самовывоз\",\r\n          address: \"\",\r\n          options: \"\",\r\n        };\r\n\r\n        // сдача\r\n        if (\r\n          (this.paymentDelivery === \"Наличными курьеру\" && this.tab === \"tab_1\") ||\r\n          (this.paymentPickup === \"Наличными в точке выдачи\" && this.tab === \"tab_2\")\r\n        ) {\r\n          info.change = this.form.change ? this.form.change : \"без сдачи\";\r\n        }\r\n\r\n        if (this.form.comment1) {\r\n          info.regularSticks = this.form.comment1;\r\n        }\r\n        if (this.form.comment2) {\r\n          info.traningSticks = this.form.comment2;\r\n        }\r\n        if (this.form.note) {\r\n          info.note = this.form.note;\r\n        }\r\n        if (this.freeProduct.length > 0) {\r\n          info.freeProduct = this.freeProduct;\r\n        }\r\n\r\n        if (this.tab === \"tab_1\" && !this.addAddress && this.address.length > 0) {\r\n          const result = this.address.find((item) => {\r\n            return item.id === this.addressRadio;\r\n          });\r\n          info.address = result;\r\n          info.options = this.doorOptions1;\r\n        }\r\n\r\n        if (this.tab === \"tab_1\" && (this.addAddress || this.address.length === 0)) {\r\n          const result = {\r\n            city: this.cityRadio1,\r\n            address: this.form.address,\r\n            house: this.form.house,\r\n            input: this.form.input,\r\n            floor: this.form.floor,\r\n            apartment: this.form.apartment,\r\n          };\r\n          info.address = result;\r\n          info.options = this.doorOptions2;\r\n        }\r\n\r\n        if (this.tab === \"tab_2\") {\r\n          const result = {\r\n            city: this.cityRadio2,\r\n            address: this.form.restaurant,\r\n          };\r\n          info.address = result;\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n          `https://c2ff7a8de0a119c8.mokky.dev/orders`,\r\n          info\r\n        );\r\n\r\n        this.cart = [];\r\n        this.orderId = data.id;\r\n\r\n        // история заказов в localStorage\r\n        this.historyOrder.push(this.orderId);\r\n        localStorage.setItem(\"order\", JSON.stringify(this.historyOrder));\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        this.isCreatingOrder = false;\r\n        this.orderDone = true;\r\n      }\r\n    },\r\n    async fetchOrder() {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://c2ff7a8de0a119c8.mokky.dev/orders?id=${\r\n            this.historyOrder[this.historyOrder.length - 1]\r\n          }`\r\n        );\r\n\r\n        this.resultsOrder = data[0];\r\n        this.cart = this.resultsOrder.items;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    onRepeatOrder() {\r\n      this.fetchOrder().then(() => {\r\n        // включение кнопки для карточек и слайдера и favorites\r\n        // this.sushi = this.updateItemsStatus(this.sushi);\r\n        // this.rolls = this.updateItemsStatus(this.rolls);\r\n        // this.sets = this.updateItemsStatus(this.sets);\r\n        // this.snacks = this.updateItemsStatus(this.snacks);\r\n        // this.drinks = this.updateItemsStatus(this.drinks);\r\n        // this.slides = this.updateItemsStatus(this.slides);\r\n        // this.favorites = this.updateItemsStatus(this.favorites);\r\n        // this.categores = this.updateItemsStatus(this.categores);\r\n        // this.slidesTovar = this.updateItemsStatus(this.slidesTovar);\r\n        this.products = this.updateItemsStatus(this.products);\r\n        // this.cart.some((cartItem) => cartItem.id === this.product.id)\r\n        //   ? (this.product.isAdded = true)\r\n        //   : null;\r\n\r\n        // заполнение полей\r\n        this.form.name = this.resultsOrder.name;\r\n        this.form.tel = this.resultsOrder.tel;\r\n        this.form.change =\r\n          this.resultsOrder.change !== \"без сдачи\" ? this.resultsOrder.change : \"\";\r\n        this.animals = this.resultsOrder.animals;\r\n\r\n        if (this.resultsOrder.methods === \"Доставка\") {\r\n          this.tab = \"tab_1\";\r\n          this.paymentDelivery = this.resultsOrder.payment;\r\n\r\n          if (this.resultsOrder.address.id) {\r\n            // сохраненные адреса\r\n            if (this.address.length > 0) {\r\n              const result = this.address.find((item) => {\r\n                return item.id === this.resultsOrder.address.id;\r\n              });\r\n\r\n              if (result !== undefined) {\r\n                //если адрес найден\r\n                this.addressRadio = this.resultsOrder.address.id;\r\n\r\n                this.doorOptions1 = this.resultsOrder.options;\r\n              } else {\r\n                // если адрес не найден в сохраненных (был уделен)\r\n                this.addAddress = true;\r\n\r\n                this.cityRadio1 = this.resultsOrder.address.city;\r\n                this.form.address = this.resultsOrder.address.address;\r\n                this.form.house = this.resultsOrder.address.house;\r\n                this.form.input = this.resultsOrder.address.input;\r\n                this.form.floor = this.resultsOrder.address.floor;\r\n                this.form.apartment = this.resultsOrder.address.apartment;\r\n\r\n                this.doorOptions2 = this.resultsOrder.options;\r\n              }\r\n            } else {\r\n              // если нет сохраненных адресов\r\n              this.addAddress = true;\r\n\r\n              this.cityRadio1 = this.resultsOrder.address.city;\r\n              this.form.address = this.resultsOrder.address.address;\r\n              this.form.house = this.resultsOrder.address.house;\r\n              this.form.input = this.resultsOrder.address.input;\r\n              this.form.floor = this.resultsOrder.address.floor;\r\n              this.form.apartment = this.resultsOrder.address.apartment;\r\n\r\n              this.doorOptions2 = this.resultsOrder.options;\r\n            }\r\n          } else {\r\n            // не сохраненный адрес\r\n            this.addAddress = true;\r\n\r\n            this.cityRadio1 = this.resultsOrder.address.city;\r\n            this.form.address = this.resultsOrder.address.address;\r\n            this.form.house = this.resultsOrder.address.house;\r\n            this.form.input = this.resultsOrder.address.input;\r\n            this.form.floor = this.resultsOrder.address.floor;\r\n            this.form.apartment = this.resultsOrder.address.apartment;\r\n\r\n            this.doorOptions2 = this.resultsOrder.options;\r\n          }\r\n        }\r\n        if (this.resultsOrder.methods === \"Самовывоз\") {\r\n          this.tab = \"tab_2\";\r\n          this.paymentPickup = this.resultsOrder.payment;\r\n\r\n          this.cityRadio2 = this.resultsOrder.address.city;\r\n          this.form.restaurant = this.resultsOrder.address.address;\r\n          this.fetchRestaurant();\r\n        }\r\n        if (this.resultsOrder.regularSticks) {\r\n          this.form.comment1 = this.resultsOrder.regularSticks;\r\n        }\r\n        if (this.resultsOrder.traningSticks) {\r\n          this.form.comment2 = this.resultsOrder.traningSticks;\r\n        }\r\n        if (this.resultsOrder.note) {\r\n          this.form.note = this.resultsOrder.note;\r\n        }\r\n      });\r\n    },\r\n    updateItemsStatus(items) {\r\n      return items.map((item) => ({\r\n        ...item,\r\n        isAdded: this.cart.some((cartItem) => cartItem.id === item.id),\r\n      }));\r\n    },\r\n    repeatAddress(item) {\r\n      for (let address of this.address) {\r\n        if (\r\n          address.address === item.address &&\r\n          address.house === item.house &&\r\n          address.input === item.input &&\r\n          address.floor === item.floor &&\r\n          address.apartment === item.apartment &&\r\n          address.city === item.city\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchAddress();\r\n    // значения по умолчанию\r\n    this.selectDay = this.optionsDay[0].value;\r\n    // генерация времени\r\n    this.generateTimeOptions();\r\n    // координаты центра по умолчанию\r\n    this.lat = this.coord[0];\r\n    this.long = this.coord[1];\r\n    // slider\r\n    this.fetchProduct().then(() => {\r\n      this.products = this.products.map((item) => ({\r\n        ...item,\r\n        isAdded: this.cart.some((cartItem) => cartItem.id === item.id),\r\n      }));\r\n    });\r\n\r\n    // прослушивание событие с корзины\r\n    // emitter.on(\"is-order-fetching\", this.onRepeatOrder);\r\n\r\n    // если есть параметр repeat повтор заказа\r\n    if (this.$route.query.repeat) {\r\n      this.onRepeatOrder();\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      deliveryPossible: (state) => state.map.deliveryPossible,\r\n      deliveryCheck: (state) => state.map.deliveryCheck,\r\n      addressDialog: (state) => state.map.address,\r\n      loadingDeliveryCheck: (state) => state.map.loading,\r\n      loadingAddress: (state) => state.map.loadingAddress,\r\n    }),\r\n    checkCart() {\r\n      return this.cart.length === 0;\r\n    },\r\n    repeatOnPage() {\r\n      return this.$route.query.repeat === \"true\";\r\n    },\r\n  },\r\n  watch: {\r\n    repeatOnPage(value) {\r\n      // если повтор заказа был сделан когда страница уже была открыта\r\n      if (value) {\r\n        this.onRepeatOrder();\r\n      }\r\n    },\r\n    checkCart(value) {\r\n      if (value) {\r\n        if (!this.orderDone) {\r\n          // удаление query из запроса если нет товаров в корзине\r\n          this.$router.push({ path: \"/rol-shop/order\" });\r\n        } else {\r\n          this.$router.push({ path: \"/rol-shop/success\" });\r\n        }\r\n      }\r\n    },\r\n  },\r\n  setup(props) {\r\n    const { address, area } = inject(\"address\");\r\n    const { cart, addToCart, removeFromCart, totalPrice, historyOrder } = inject(\"cart\");\r\n    const {\r\n      sushi,\r\n      rolls,\r\n      sets,\r\n      snacks,\r\n      drinks,\r\n      slides,\r\n      favorites,\r\n      categores,\r\n      product,\r\n      slidesTovar,\r\n      products,\r\n    } = inject(\"items\");\r\n    const form = ref({\r\n      name: \"\",\r\n      tel: \"\",\r\n      address: \"\",\r\n      house: \"\",\r\n      input: \"\",\r\n      floor: \"\",\r\n      apartment: \"\",\r\n      restaurant: \"\",\r\n      comment1: \"\",\r\n      comment2: \"\",\r\n      note: \"\",\r\n      change: \"\",\r\n      code: \"\",\r\n    });\r\n    const ruleFormRef1 = ref({});\r\n    const ruleFormRef2 = ref({});\r\n    const ruleFormRef3 = ref({});\r\n    const ruleFormRef4 = ref({});\r\n    const ruleFormRef5 = ref({});\r\n    const ruleFormRef6 = ref({});\r\n    const ruleFormRef7 = ref({});\r\n    const ruleFormRef8 = ref({});\r\n\r\n    const code = ref();\r\n    const codeValid = ref();\r\n    const codeLoading = ref(false);\r\n    const freeProduct = ref([]);\r\n    const freeLoading = ref(false);\r\n\r\n    const store = useStore();\r\n    var arrayCoord = computed(() => store.state.map.arrayCoord);\r\n    var deliveryPossible = computed(() => store.state.map.deliveryPossible);\r\n    var checkFromSelect = ref(false);\r\n    var fromSelectRestaurant = ref(false);\r\n\r\n    // кастомное правило\r\n    const checkNumber = (rule, value, callback) => {\r\n      if (!Number.isInteger(value) && value) {\r\n        callback(new Error(\"Введите число!\"));\r\n      } else {\r\n        if (value <= 0 && value) {\r\n          callback(new Error(\"Неверное кол-во!\"));\r\n        } else {\r\n          callback();\r\n        }\r\n      }\r\n    };\r\n\r\n    // получение промокода\r\n    const fetchCode = async () => {\r\n      try {\r\n        codeLoading.value = true;\r\n\r\n        const { data } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/code`);\r\n\r\n        code.value = data[0].code;\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        codeLoading.value = false;\r\n      }\r\n    };\r\n\r\n    // получение товаров по промокоду\r\n    const fetchFree = async () => {\r\n      try {\r\n        freeLoading.value = true;\r\n\r\n        const { data } = await axios.get(\r\n          `https://c2ff7a8de0a119c8.mokky.dev/items?category=snacks&id=41`\r\n        );\r\n\r\n        freeProduct.value = data.map((obj) => ({\r\n          ...obj,\r\n          count: 1,\r\n        }));\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        freeLoading.value = false;\r\n      }\r\n    };\r\n\r\n    const checkCode = () => {\r\n      fetchCode().then(() => {\r\n        if (code.value === form.value.code) {\r\n          codeValid.value = true;\r\n          fetchFree();\r\n        } else {\r\n          codeValid.value = false;\r\n        }\r\n      });\r\n    };\r\n\r\n    const cancelCode = () => {\r\n      freeProduct.value = [];\r\n      codeValid.value = \"\";\r\n      form.value.code = \"\";\r\n    };\r\n\r\n    // проверка адреса на доступность для доставки\r\n    const checkGeo = (rule, value, callback) => {\r\n      let possible = false;\r\n      let address = `${props.cityRadio1}, ${value}`;\r\n      store.dispatch(\"map/geocoderAddress\", address).then(() => {\r\n        store\r\n          .dispatch(\"map/checkAddress\", {\r\n            lat: arrayCoord.value[0],\r\n            long: arrayCoord.value[1],\r\n          })\r\n          .then(() => {\r\n            possible = deliveryPossible.value;\r\n            if (value && !possible) {\r\n              callback(new Error(\"Доставка по этому адресу не осуществляется!\"));\r\n            } else {\r\n              callback();\r\n            }\r\n          });\r\n      });\r\n    };\r\n\r\n    // проверка что адрес был выбран из списка\r\n    const checkSelect = (rule, value, callback) => {\r\n      if (!checkFromSelect.value) {\r\n        callback(new Error(\"Адрес не выбран!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    // проверка что ресторан был выбран из списка\r\n    const checkRestaurant = (rule, value, callback) => {\r\n      if (!fromSelectRestaurant.value) {\r\n        callback(new Error(\"Адрес не выбран!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    const rules = ref({\r\n      address: [\r\n        { required: true, message: \"Нужно заполнить!\", trigger: \"blur\" },\r\n        { min: 5, message: \"Слишком короткий!\", trigger: \"blur\" },\r\n        { validator: checkGeo, trigger: \"submit\" },\r\n        { validator: checkSelect, trigger: \"submit\" },\r\n      ],\r\n      restaurant: [\r\n        { required: true, message: \"Нужно заполнить!\", trigger: \"blur\" },\r\n        { min: 5, message: \"Слишком короткий!\", trigger: \"blur\" },\r\n        { validator: checkRestaurant, trigger: \"submit\" },\r\n      ],\r\n      name: [\r\n        { required: true, message: \"Нужно заполнить!\", trigger: \"blur\" },\r\n        { min: 3, message: \"Слишком короткий!\", trigger: \"blur\" },\r\n      ],\r\n      tel: [\r\n        { required: true, message: \"Нужно заполнить!\", trigger: \"blur\" },\r\n        { min: 18, message: \"Слишком короткий!\", trigger: \"blur\" },\r\n      ],\r\n      number: [{ validator: checkNumber, trigger: \"blur\" }],\r\n    });\r\n\r\n    const onClickAddPlus = (item) => {\r\n      if (!item.isAdded) {\r\n        addToCart(item);\r\n      } else {\r\n        removeFromCart(item);\r\n      }\r\n    };\r\n\r\n    return {\r\n      address,\r\n      form,\r\n      ruleFormRef1,\r\n      ruleFormRef2,\r\n      ruleFormRef3,\r\n      ruleFormRef4,\r\n      ruleFormRef5,\r\n      ruleFormRef6,\r\n      ruleFormRef7,\r\n      ruleFormRef8,\r\n      rules,\r\n      cart,\r\n      onClickAddPlus,\r\n      products,\r\n      totalPrice,\r\n      checkCode,\r\n      codeValid,\r\n      codeLoading,\r\n      freeProduct,\r\n      cancelCode,\r\n      freeLoading,\r\n      historyOrder,\r\n      sushi,\r\n      rolls,\r\n      sets,\r\n      snacks,\r\n      drinks,\r\n      slides,\r\n      favorites,\r\n      categores,\r\n      product,\r\n      slidesTovar,\r\n      area,\r\n      checkFromSelect,\r\n      fromSelectRestaurant,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.crumbs {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.destination__map {\r\n  // flex-grow: 1;\r\n  width: 100%;\r\n  height: 400px;\r\n  border-radius: $border;\r\n  overflow: hidden;\r\n}\r\n.order {\r\n  &__inner {\r\n    position: relative;\r\n  }\r\n}\r\n.order-title {\r\n  color: $grey-dark;\r\n  font-size: 48px;\r\n  font-weight: 700;\r\n  margin-bottom: 24px;\r\n  line-height: 1.4;\r\n}\r\n.order-wrapper {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 64px;\r\n}\r\n.order-left {\r\n  width: 645px;\r\n}\r\n.order {\r\n  &__person {\r\n    background-color: #fff;\r\n    border-radius: $border;\r\n    padding: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__person-title {\r\n    color: $grey-dark;\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  &__person-inputs {\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n\r\n  &__delivery {\r\n    background-color: #fff;\r\n    border-radius: $border;\r\n    padding: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__delivery-head {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  &__delivery-title {\r\n    color: $grey-dark;\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    line-height: 1.4;\r\n  }\r\n}\r\n.order-dialog {\r\n  &__text {\r\n    font-weight: 400;\r\n    color: rgb(104, 104, 112);\r\n  }\r\n\r\n  &__list {\r\n    display: flex;\r\n    gap: 24px;\r\n    margin-bottom: 16px;\r\n    margin-top: 40px;\r\n  }\r\n\r\n  &__list-item {\r\n    display: flex;\r\n    gap: 12px;\r\n    span {\r\n      color: $grey-dark;\r\n      font-size: 20px;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  &__list-text {\r\n    color: $grey-dark;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  &__btn {\r\n    margin-top: 24px;\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    &:disabled {\r\n      cursor: default;\r\n      background-color: #929292;\r\n    }\r\n  }\r\n}\r\n.address {\r\n  &__list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  &__list-item {\r\n    width: 100%;\r\n    border-radius: $border;\r\n    padding: 12px 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 16px;\r\n    border: 1px solid rgb(237, 237, 237);\r\n    &::before {\r\n      content: url(\"@/img/icon/location-grey.svg\");\r\n      height: 24px;\r\n      width: 20px;\r\n    }\r\n    input {\r\n      appearance: none;\r\n      min-width: 24px;\r\n      height: 24px;\r\n      border: 1px solid rgb(158, 158, 158);\r\n      border-radius: 50%;\r\n      position: relative;\r\n      transition: $transition;\r\n      cursor: pointer;\r\n      &::before {\r\n        content: \"\";\r\n        width: 14px;\r\n        height: 14px;\r\n        background-color: transparent;\r\n        border-radius: 50%;\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n        transition: $transition;\r\n      }\r\n      &:checked {\r\n        border: 2px solid rgb(255, 102, 51);\r\n        &::before {\r\n          background-color: rgb(255, 102, 51);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &__info {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  &__address {\r\n    color: $grey-dark;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n  }\r\n\r\n  &__other {\r\n    color: rgb(104, 104, 112);\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    line-height: 1.3;\r\n  }\r\n}\r\n.order {\r\n  &__delivery-text {\r\n    color: rgb(104, 104, 112);\r\n    font-size: 14px;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  &__tabs {\r\n    display: flex;\r\n    background: rgb(245, 245, 247);\r\n    border-radius: $border;\r\n    padding: 6px 8px;\r\n    position: relative;\r\n    margin-bottom: 8px;\r\n    &::after {\r\n      content: \"\";\r\n      background-color: rgb(255, 102, 51);\r\n      border-radius: $border;\r\n      position: absolute;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      width: calc(50% - 8px);\r\n      height: calc(100% - 12px);\r\n      transition: $transition;\r\n    }\r\n    &.tabs-active-1 {\r\n      &::after {\r\n        left: 8px;\r\n        right: auto;\r\n      }\r\n    }\r\n    &.tabs-active-2 {\r\n      &::after {\r\n        transform: translateY(-50%) translateX(100%);\r\n      }\r\n    }\r\n  }\r\n}\r\n.tabs-wrapper {\r\n}\r\n.tabs {\r\n  &__content {\r\n  }\r\n}\r\n.tab {\r\n  flex: 1;\r\n  text-align: center;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: $transition;\r\n  z-index: 1;\r\n  color: $grey-dark;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  &__content {\r\n  }\r\n}\r\n.delivery {\r\n  &__text {\r\n    margin-left: 8px;\r\n    font-size: 14px;\r\n    color: $grey-dark;\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  &__btns {\r\n    display: flex;\r\n    gap: 12px;\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  &__btn {\r\n    flex: 1;\r\n    text-align: center;\r\n    background-color: rgb(245, 245, 247);\r\n    border-radius: $border;\r\n    height: 56px;\r\n    font-weight: 500;\r\n    &:nth-child(1) {\r\n      color: rgb(0, 204, 45);\r\n    }\r\n    &:nth-child(2) {\r\n      color: rgb(244, 72, 55);\r\n    }\r\n  }\r\n\r\n  &__other {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n  }\r\n\r\n  &__other-label {\r\n    width: fit-content;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 16px;\r\n    color: $grey-dark;\r\n  }\r\n}\r\ninput.delivery__other-check {\r\n  appearance: none;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 6px;\r\n  border: 2px solid rgb(158, 158, 158);\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: $transition;\r\n  &::after {\r\n    content: url(\"@/img/icon/check.svg\");\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  &:checked {\r\n    border: 2px solid rgb(255, 102, 51);\r\n    background-color: rgb(255, 102, 51);\r\n  }\r\n}\r\n.tab--is-active {\r\n  color: #fff;\r\n}\r\n\r\n.delivery {\r\n  &__new {\r\n  }\r\n\r\n  &__new-city {\r\n    margin: 24px 0;\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n\r\n  &__new-label {\r\n    input {\r\n      appearance: none;\r\n      display: none;\r\n      &:checked + p {\r\n        background-color: rgb(255, 102, 51);\r\n        color: #fff;\r\n      }\r\n    }\r\n    p {\r\n      border-radius: $border;\r\n      background-color: rgb(245, 245, 247);\r\n      padding: 12px;\r\n      color: $grey-dark;\r\n      font-weight: 500;\r\n      transition: $transition;\r\n    }\r\n  }\r\n\r\n  &__new-inputs {\r\n    display: flex;\r\n    gap: 12px;\r\n    margin-top: 16px;\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  &__new-back {\r\n    margin-top: 24px;\r\n    display: flex;\r\n    gap: 16px;\r\n    &__btn {\r\n      padding: 16px;\r\n      border-radius: $border;\r\n      background-color: rgb(245, 245, 247);\r\n      width: 290px;\r\n      color: rgb(0, 204, 45);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      img {\r\n        transform: rotate(90deg);\r\n      }\r\n      &:disabled {\r\n        cursor: default;\r\n      }\r\n    }\r\n    &__text {\r\n      color: rgb(104, 104, 112);\r\n      font-size: 14px;\r\n      font-weight: 500;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 12px;\r\n      &::before {\r\n        content: url(\"@/img/icon/info-grey.svg\");\r\n        height: 18px;\r\n      }\r\n    }\r\n    &__box {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n    &__loading {\r\n      color: #929292;\r\n    }\r\n  }\r\n}\r\n// loading\r\n.custom-loading .circular {\r\n  margin-right: 6px;\r\n  width: 25px;\r\n  height: 25px;\r\n  animation: loading-rotate 2s linear infinite;\r\n}\r\n.custom-loading .circular .path {\r\n  animation: loading-dash 1.5s ease-in-out infinite;\r\n  stroke-dasharray: 90, 150;\r\n  stroke-dashoffset: 0;\r\n  stroke-width: 2;\r\n  stroke: #929292;\r\n  stroke-linecap: round;\r\n}\r\n.order {\r\n  &__time {\r\n    border-radius: $border;\r\n    padding: 24px;\r\n    background-color: #fff;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__time-title {\r\n    color: $grey-dark;\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  &__time-text {\r\n    margin-bottom: 24px;\r\n    color: rgb(104, 104, 112);\r\n    font-size: 14px;\r\n  }\r\n\r\n  &__time-selects {\r\n    display: flex;\r\n    gap: 8px;\r\n  }\r\n\r\n  &__time-select {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 4px;\r\n    flex: 1;\r\n  }\r\n\r\n  &__time-select-title {\r\n    color: rgb(158, 158, 158);\r\n    font-size: 14px;\r\n  }\r\n}\r\n.order-dialog {\r\n  &__check {\r\n    margin-top: 12px;\r\n    display: flex;\r\n    gap: 12px;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n  }\r\n\r\n  &__check-img {\r\n  }\r\n\r\n  &__check-address {\r\n    color: $grey-dark;\r\n  }\r\n\r\n  &__check-green {\r\n    color: rgb(0, 204, 45);\r\n  }\r\n  &__check-red {\r\n    color: red;\r\n  }\r\n}\r\n.order {\r\n  &__payment {\r\n    border-radius: $border;\r\n    background-color: #fff;\r\n    padding: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__payment-title {\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    color: $grey-dark;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  &__payment-text {\r\n    color: rgb(104, 104, 112);\r\n    margin-bottom: 24px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  &__payment-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n  }\r\n\r\n  &__payment-label {\r\n    display: flex;\r\n    gap: 16px;\r\n    font-size: 16px;\r\n    color: $grey-dark;\r\n  }\r\n\r\n  &__payment-radio {\r\n    appearance: none;\r\n    min-width: 24px;\r\n    height: 24px;\r\n    border: 1px solid rgb(158, 158, 158);\r\n    border-radius: 50%;\r\n    position: relative;\r\n    cursor: pointer;\r\n    &::before {\r\n      content: \"\";\r\n      width: 14px;\r\n      height: 14px;\r\n      background-color: transparent;\r\n      border-radius: 50%;\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n      transition: $transition;\r\n    }\r\n    &:checked {\r\n      border: 2px solid rgb(255, 102, 51);\r\n      &::before {\r\n        background-color: rgb(255, 102, 51);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__payment-change {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  &__payment-change-input {\r\n    max-width: 205px;\r\n  }\r\n}\r\n.order {\r\n  &__comment {\r\n    background-color: #fff;\r\n    border-radius: $border;\r\n    padding: 24px;\r\n  }\r\n\r\n  &__comment-title {\r\n    color: $grey-dark;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  &__comment-inputs {\r\n    display: flex;\r\n    gap: 12px;\r\n    margin-bottom: 16px;\r\n  }\r\n  &__comment-textarea {\r\n    margin-bottom: 24px;\r\n    height: 96px;\r\n  }\r\n}\r\n.order-right {\r\n  width: 778px;\r\n  &__drawer {\r\n  }\r\n  .basket-list {\r\n    gap: 20px;\r\n    padding: 0 0 0 16px;\r\n    margin-right: 0;\r\n    overflow-y: hidden;\r\n  }\r\n}\r\n.order-added {\r\n  margin-top: 64px;\r\n}\r\n.order {\r\n  &__total {\r\n    margin-top: 64px;\r\n  }\r\n\r\n  &__total-promokod {\r\n    display: flex;\r\n    margin-bottom: 16px;\r\n    gap: 12px;\r\n  }\r\n\r\n  &__total-promokod-btn {\r\n    background-color: #fff;\r\n    border-radius: $border;\r\n    height: 56px;\r\n    padding: 0 24px;\r\n    color: rgb(0, 204, 45);\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    &:disabled {\r\n      filter: brightness(0.8);\r\n      cursor: default;\r\n    }\r\n  }\r\n\r\n  &__total-box {\r\n    background-color: #fff;\r\n    border-radius: $border;\r\n    padding: 16px 24px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  &__total-left {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  &__total-text {\r\n    margin-bottom: 8px;\r\n    color: rgb(104, 104, 112);\r\n    font-size: 14px;\r\n  }\r\n\r\n  &__total-btn {\r\n    background-color: rgb(0, 204, 45);\r\n    border-radius: $border;\r\n    height: 56px;\r\n    padding: 0 24px;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    &-box {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 5px;\r\n    }\r\n    &:disabled {\r\n      background-color: rgb(197, 197, 197);\r\n      cursor: default;\r\n    }\r\n  }\r\n\r\n  &__total-warning {\r\n    margin-top: 12px;\r\n    color: rgb(255, 102, 51);\r\n    font-size: 16px;\r\n  }\r\n  &__total-price {\r\n    color: $grey-dark;\r\n    font-size: 32px;\r\n    font-weight: 700;\r\n    line-height: 80%;\r\n    span {\r\n      color: #686870;\r\n      font-size: 21px;\r\n      font-weight: 700;\r\n      margin-left: 8px;\r\n    }\r\n  }\r\n  &__total-novalid {\r\n    margin-bottom: 12px;\r\n    color: rgb(244, 72, 55);\r\n    font-size: 16px;\r\n  }\r\n}\r\n.order {\r\n  &__total-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  &__total-item {\r\n    background-color: #fff;\r\n    border-radius: 24px;\r\n    padding: 12px 34px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n\r\n  &__total-list-left {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 16px;\r\n  }\r\n\r\n  &__total-imgwrapper {\r\n    height: 87px;\r\n    width: 107px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  &__total-img {\r\n    object-fit: cover;\r\n  }\r\n\r\n  &__total-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    gap: 4px;\r\n  }\r\n\r\n  &__total-list-title {\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    line-height: 1.3;\r\n    color: $grey-dark;\r\n  }\r\n\r\n  &__total-list-weight {\r\n    color: rgb(255, 102, 51);\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n  }\r\n\r\n  &__total-list-right {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n\r\n  &__total-count {\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: rgb(158, 158, 158);\r\n  }\r\n\r\n  &__total-free {\r\n    color: rgb(0, 204, 45);\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n  }\r\n\r\n  &__total-list-btn {\r\n    width: 32px;\r\n    height: 32px;\r\n    background-color: rgb(204, 245, 213);\r\n    border-radius: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    left: 0;\r\n    transform: translateX(-50%);\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n.order {\r\n  &__person-inputs {\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n  // inputs\r\n  .el-form-item {\r\n    flex-direction: column;\r\n    flex-grow: 1;\r\n    margin-bottom: 0;\r\n  }\r\n  .el-form-item__label {\r\n    justify-content: flex-start;\r\n    color: rgb(158, 158, 158);\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    margin-bottom: 4px;\r\n    padding: 0;\r\n    line-height: 1.5;\r\n    height: auto;\r\n  }\r\n  .el-input {\r\n    height: 48px;\r\n    width: 100%;\r\n    background: var(---, #f5f5f7);\r\n    border-radius: $border;\r\n    color: $grey-dark;\r\n    font-weight: 400;\r\n  }\r\n  .el-input__wrapper {\r\n    flex-grow: 1;\r\n    padding: 12px 16px;\r\n    background-color: transparent;\r\n    border-radius: $border;\r\n    cursor: text;\r\n    transition: none;\r\n    transform: none;\r\n    box-shadow: none;\r\n    &:hover,\r\n    &.is-focus {\r\n      box-shadow: none;\r\n    }\r\n  }\r\n  .el-input__prefix-inner > :last-child {\r\n    margin-right: 16px;\r\n  }\r\n  .el-input__inner {\r\n    --el-input-inner-height: 100%;\r\n    width: 100%;\r\n    color: $grey-dark;\r\n    font-size: 16px;\r\n    height: 100%;\r\n    line-height: 1.5;\r\n  }\r\n  .el-input {\r\n    --el-input-placeholder-color: #8f8f8f;\r\n  }\r\n  &__delivery {\r\n    .el-button {\r\n      line-height: 1.5;\r\n      height: auto;\r\n      cursor: pointer;\r\n      color: rgb(255, 102, 51);\r\n      transition: $transition;\r\n      font-weight: 500;\r\n      background-color: transparent;\r\n      border: none;\r\n      border-color: none;\r\n      padding: 0;\r\n      font-size: 16px;\r\n      border-radius: 0;\r\n      span {\r\n        display: flex;\r\n        gap: 13px;\r\n      }\r\n    }\r\n  }\r\n  .el-dialog {\r\n    margin: auto;\r\n    background: #fff;\r\n    border-radius: $border;\r\n    box-shadow: none;\r\n    width: 1100px;\r\n    padding: 32px;\r\n  }\r\n  .el-dialog__header {\r\n    padding: 0;\r\n    padding-bottom: 0;\r\n    margin-right: 0;\r\n    margin-bottom: 12px;\r\n    height: min-content;\r\n    span {\r\n      font-size: 32px;\r\n      font-weight: 700;\r\n      color: $grey-dark;\r\n      line-height: 1.3;\r\n      display: block;\r\n    }\r\n  }\r\n  .el-dialog__headerbtn {\r\n    position: absolute;\r\n    top: 32px;\r\n    right: 32px;\r\n    padding: 0;\r\n    width: 32px;\r\n    height: 32px;\r\n    background: rgb(245, 245, 247);\r\n    cursor: pointer;\r\n    font-size: 0;\r\n    border-radius: 8px;\r\n    &::after {\r\n      content: url(\"@/img/icon/close.svg\");\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n  .el-dialog__body {\r\n    padding: 0;\r\n    color: inherit;\r\n    font-size: inherit;\r\n  }\r\n  .el-form-item.is-required:not(.is-no-asterisk).asterisk-left\r\n    > .el-form-item__label:before {\r\n    content: \"*\";\r\n    color: var(--el-color-danger);\r\n    margin-right: 0;\r\n    margin-left: 5px;\r\n    order: 1;\r\n  }\r\n  .el-autocomplete {\r\n    width: 100%;\r\n  }\r\n  // select\r\n  .el-select__wrapper.is-hovering:not(.is-focused) {\r\n    box-shadow: none;\r\n  }\r\n  .el-select__wrapper {\r\n    font-size: 16px;\r\n    padding: 12px 16px;\r\n    gap: 6px;\r\n    min-height: 48px;\r\n    line-height: inherit;\r\n    border-radius: $border;\r\n    background-color: rgb(245, 245, 247);\r\n    box-shadow: none;\r\n  }\r\n  .el-select__suffix {\r\n    i {\r\n      svg {\r\n        display: none;\r\n      }\r\n      &::before {\r\n        content: url(\"@/img/icon/arrow-down-mini.svg\");\r\n        height: 20px;\r\n      }\r\n    }\r\n  }\r\n  .el-select__placeholder {\r\n    color: $grey-dark;\r\n    font-size: 16px;\r\n  }\r\n}\r\n.order-select {\r\n  &.el-popper.is-light {\r\n    background: #fff;\r\n    border: 1px solid #bdbdbd;\r\n  }\r\n  &.el-select-dropdown {\r\n    border-radius: $border;\r\n    overflow: hidden;\r\n  }\r\n  &.el-select__popper.el-popper {\r\n    box-shadow: none;\r\n  }\r\n  .el-select-dropdown__list {\r\n    padding: 0;\r\n  }\r\n  .el-select-dropdown__item.is-selected {\r\n    color: $grey-dark;\r\n    font-weight: 700;\r\n  }\r\n  .el-select-dropdown__item.is-hovering {\r\n    background-color: #a1cafa88;\r\n  }\r\n  .el-select-dropdown__item {\r\n    font-size: 16px;\r\n    padding: 5px 10px;\r\n    color: $grey-dark;\r\n    height: auto;\r\n    line-height: 1.5;\r\n  }\r\n}\r\n// textarea\r\n.el-textarea__inner {\r\n  padding: 12px 16px;\r\n  line-height: 1.5;\r\n  color: $grey-dark;\r\n  background-color: rgb(245, 245, 247);\r\n  box-shadow: none;\r\n  border-radius: $border;\r\n  font-size: 16px;\r\n  height: 100%;\r\n}\r\n.el-textarea__inner:hover {\r\n  box-shadow: none;\r\n}\r\n.el-textarea {\r\n  --el-input-placeholder-color: #8f8f8f;\r\n}\r\n\r\n// корзина\r\n.order-right {\r\n  .basket__item {\r\n    background-color: #fff;\r\n    padding: 12px 34px;\r\n    height: 111px;\r\n    border-radius: 24px;\r\n  }\r\n  .basket-remove {\r\n    border-radius: 8px;\r\n    background: rgb(245, 245, 247);\r\n    width: 32px;\r\n    height: 32px;\r\n    svg {\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n    &:hover {\r\n      background-color: rgb(255, 102, 51);\r\n    }\r\n  }\r\n  .basket__left {\r\n    gap: 16px;\r\n    align-items: center;\r\n    height: 100%;\r\n  }\r\n  .basket__imgwrapper {\r\n    height: auto;\r\n    width: 107px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .basket__item-title {\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    margin-bottom: 4px;\r\n    line-height: 1.45;\r\n  }\r\n  .basket__weight {\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 1.5;\r\n  }\r\n  .basket__right {\r\n    gap: 34px;\r\n  }\r\n  .basket__btn {\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 4px;\r\n    background: rgb(245, 245, 247);\r\n  }\r\n  .basket-count {\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n.order__total {\r\n  .el-input {\r\n    height: 56px;\r\n    width: 214px;\r\n    background: #fff;\r\n    border-radius: 12px;\r\n    color: #1d1d1f;\r\n    font-weight: 400;\r\n  }\r\n  .el-input__wrapper {\r\n    padding: 12px 24px;\r\n  }\r\n  .el-input {\r\n    --el-input-placeholder-color: rgb(158, 158, 158);\r\n  }\r\n  .el-input__inner {\r\n    font-size: 18px;\r\n    font-weight: 400;\r\n  }\r\n  .el-form-item {\r\n    flex-grow: 0;\r\n  }\r\n  .el-form-item__content {\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAuvBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,MAAM,EAAEC,GAAG,EAAEC,QAAO,QAAS,KAAK;AAC3C,OAAO,KAAKC,IAAG,MAAO,YAAY;AAClC,OAAOC,OAAM,MAAO,qBAAqB;AACzC,SAASC,UAAU,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,QAAO,QAAS,MAAM;AACnE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,IAAIC,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;IAE5B,IAAIC,KAAI,GAAI,IAAID,IAAI,CAAC,CAAC;IACtB,IAAIE,KAAI,GAAI,IAAIF,IAAI,CAAC,CAAC;IACtB,IAAIG,KAAI,GAAI,IAAIH,IAAI,CAAC,CAAC;IACtB,IAAII,KAAI,GAAI,IAAIJ,IAAI,CAAC,CAAC;IACtB,IAAIK,KAAI,GAAI,IAAIL,IAAI,CAAC,CAAC;IACtBC,KAAK,CAACK,OAAO,CAACP,WAAW,CAACQ,OAAO,CAAC,CAAC,CAAC;IACpCL,KAAK,CAACI,OAAO,CAACP,WAAW,CAACQ,OAAO,CAAC,IAAI,CAAC,CAAC;IACxCJ,KAAK,CAACG,OAAO,CAACP,WAAW,CAACQ,OAAO,CAAC,IAAI,CAAC,CAAC;IACxCH,KAAK,CAACE,OAAO,CAACP,WAAW,CAACQ,OAAO,CAAC,IAAI,CAAC,CAAC;IACxCF,KAAK,CAACC,OAAO,CAACP,WAAW,CAACQ,OAAO,CAAC,IAAI,CAAC,CAAC;IAExC,IAAIC,MAAK,GAAIP,KAAK,CAACQ,QAAQ,CAAC,IAAI,CAAC;IACjC,IAAIC,MAAK,GAAIR,KAAK,CAACO,QAAQ,CAAC,IAAI,CAAC;IACjC,IAAIE,MAAK,GAAIR,KAAK,CAACM,QAAQ,CAAC,IAAI,CAAC;IACjC,IAAIG,MAAK,GAAIR,KAAK,CAACK,QAAQ,CAAC,IAAI,CAAC;IACjC,IAAII,MAAK,GAAIR,KAAK,CAACI,QAAQ,CAAC,IAAI,CAAC;IAEjCR,KAAI,GAAIA,KAAI,GAAI,EAAC,GAAI,GAAE,GAAIA,KAAK,CAACM,OAAO,CAAC,IAAIN,KAAK,CAACM,OAAO,CAAC,CAAC;IAC5DL,KAAI,GAAIA,KAAI,GAAI,EAAC,GAAI,GAAE,GAAIA,KAAK,CAACK,OAAO,CAAC,IAAIL,KAAK,CAACK,OAAO,CAAC,CAAC;IAC5DJ,KAAI,GAAIA,KAAI,GAAI,EAAC,GAAI,GAAE,GAAIA,KAAK,CAACI,OAAO,CAAC,IAAIJ,KAAK,CAACI,OAAO,CAAC,CAAC;IAC5DH,KAAI,GAAIA,KAAI,GAAI,EAAC,GAAI,GAAE,GAAIA,KAAK,CAACG,OAAO,CAAC,IAAIH,KAAK,CAACG,OAAO,CAAC,CAAC;IAC5DF,KAAI,GAAIA,KAAI,GAAI,EAAC,GAAI,GAAE,GAAIA,KAAK,CAACE,OAAO,CAAC,IAAIF,KAAK,CAACE,OAAO,CAAC,CAAC;IAE5DC,MAAK,GAAIA,MAAK,GAAI,EAAC,GAAI,GAAE,GAAIA,MAAK,GAAIA,MAAM;IAC5CE,MAAK,GAAIA,MAAK,GAAI,EAAC,GAAI,GAAE,GAAIA,MAAK,GAAIA,MAAM;IAC5CC,MAAK,GAAIA,MAAK,GAAI,EAAC,GAAI,GAAE,GAAIA,MAAK,GAAIA,MAAM;IAC5CC,MAAK,GAAIA,MAAK,GAAI,EAAC,GAAI,GAAE,GAAIA,MAAK,GAAIA,MAAM;IAC5CC,MAAK,GAAIA,MAAK,GAAI,EAAC,GAAI,GAAE,GAAIA,MAAK,GAAIA,MAAM;IAE5C,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,KAAK;MACpBC,GAAG,EAAE,OAAO;MACZC,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE,mBAAmB;QAAEC,IAAI,EAAE;MAAkB,CAAC,CAAC;MAC/DC,kBAAkB,EAAE,KAAK;MACzBC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,CACV;QACEC,KAAK,EAAG,GAAEvB,KAAM,IAAGO,MAAO,EAAC;QAC3BiB,KAAK,EAAE;MACT,CAAC,EACD;QACED,KAAK,EAAG,GAAEtB,KAAM,IAAGQ,MAAO,EAAC;QAC3Be,KAAK,EAAE;MACT,CAAC,EACD;QACED,KAAK,EAAG,GAAErB,KAAM,IAAGQ,MAAO,EAAC;QAC3Bc,KAAK,EAAG,GAAEtB,KAAM,IAAGQ,MAAO;MAC5B,CAAC,EACD;QACEa,KAAK,EAAG,GAAEpB,KAAM,IAAGQ,MAAO,EAAC;QAC3Ba,KAAK,EAAG,GAAErB,KAAM,IAAGQ,MAAO;MAC5B,CAAC,EACD;QACEY,KAAK,EAAG,GAAEnB,KAAM,IAAGQ,MAAO,EAAC;QAC3BY,KAAK,EAAG,GAAEpB,KAAM,IAAGQ,MAAO;MAC5B,CAAC,CACF;MACDa,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE;MACdC,GAAG,EAAE,EAAE;MACPC,IAAI,EAAE,EAAE;MACRC,GAAG,EAAE;;;;;;;;;OASJ;MACDC,eAAe,EAAE,mBAAmB;MACpCC,aAAa,EAAE,0BAA0B;MACzCC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAE,KAAK;MACjBC,eAAe,EAAE,KAAK;MACtBC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,CAAC,KAAK,CAAC;MAChBC,YAAY,EAAE,CAAC,qBAAqB,CAAC;MACrCC,YAAY,EAAE,CAAC,qBAAqB,CAAC;MACrCC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,MAAM;MAClBC,UAAU,EAAE,MAAM;MAClBC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,GAAG,CAACH,KAAK;MAClCI,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAG3D,UAAU,CAAC;MACZ4D,YAAY,EAAE;IAChB,CAAC,CAAC;IACF,MAAMC,kBAAkBA,CAAC/B,KAAK,EAAEgC,EAAE,EAAE;MAClC,IAAI;QACF,IAAI,CAACC,eAAc,GAAI,KAAK;QAC5B,IAAIjC,KAAK,EAAE;UACT,MAAM;YAAE1B;UAAK,IAAI,MAAMV,KAAK,CAACsE,GAAG,CAC7B,8FAA6F,IAAI,CAACd,UAAW,KAAIpB,KAAM,SAAQ,IAAI,CAACmC,IAAK,0FAC5I,CAAC;UACD,IAAI7D,IAAI,CAAC8D,OAAO,EAAE;YAChB,IAAI,CAACT,MAAK,GAAIrD,IAAI,CAAC8D,OAAO,CAACV,GAAG,CAAEW,IAAI,KAAM;cACxCC,OAAO,EAAED,IAAI,CAACE,KAAK,CAACC,IAAI;cACxBC,KAAK,EAAEJ,IAAI,CAACC,OAAO,CAACI,SAAS,CAACC,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAG,IAAK,OAAO,IACzDR,IAAI,CAACC,OAAO,CAACI,SAAS,CAACC,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAG,IAAK,OAAO,CAAC,CAAClD,IAAG,GAC3D;YACN,CAAC,CAAC,CAAC;;YAEH;YACAqC,EAAE,CAAC,IAAI,CAACL,MAAM,CAAC;UACjB,OAAO;YACL;YACAK,EAAE,CAAC,EAAE,CAAC;UACR;QACF;MACF,EAAE,OAAOc,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACDG,mBAAmBA,CAACZ,IAAI,EAAE;MACxB;MACA,IAAI,CAACa,IAAI,CAACZ,OAAM,GAAID,IAAI,CAACC,OAAO;MAChC,IAAI,CAACY,IAAI,CAACT,KAAI,GAAIJ,IAAI,CAACI,KAAK;;MAE5B;MACA,IAAI,CAACR,eAAc,GAAI,IAAI;IAC7B,CAAC;IACD,MAAMkB,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAM;UAAE7E;QAAK,IAAI,MAAMV,KAAK,CAACsE,GAAG,CAAE,4CAA2C,CAAC;QAE9E,IAAI,CAACI,OAAM,GAAIhE,IAAI;;QAEnB;QACA,IAAI,IAAI,CAACgE,OAAO,CAACc,MAAK,GAAI,CAAC,EAAE;UAC3B,IAAI,CAACjC,YAAW,GAAI,IAAI,CAACmB,OAAO,CAAC,CAAC,CAAC,CAACe,EAAE;QACxC;MACF,EAAE,OAAOP,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACD,MAAMQ,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAM;UAAEhF;QAAK,IAAI,MAAMV,KAAK,CAACsE,GAAG,CAC7B,sDAAqD,IAAI,CAACb,UAAW,EACxE,CAAC;QAED,IAAI,CAACvB,WAAU,GAAIxB,IAAI;MACzB,EAAE,OAAOwE,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACD,MAAMS,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,IAAI,CAAC7C,aAAY,GAAI,IAAI;QAEzB,MAAM;UAAEpC;QAAK,IAAI,MAAMV,KAAK,CAACsE,GAAG,CAC7B,0DACH,CAAC;QAED,IAAI,CAACsB,QAAO,GAAIlF,IAAI,CAACoD,GAAG,CAAE+B,GAAG,KAAM;UACjC,GAAGA,GAAG;UACNC,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;QACT,CAAC,CAAC,CAAC;MACL,EAAE,OAAOb,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,UAAU;QACR,IAAI,CAACpC,aAAY,GAAI,KAAK;MAC5B;IACF,CAAC;IACDkD,aAAaA,CAACvD,GAAG,EAAEC,IAAI,EAAE;MACvB,IAAI,CAACD,GAAE,GAAIA,GAAG;MACd,IAAI,CAACC,IAAG,GAAIA,IAAI;;MAEhB;MACA,IAAI,CAACkB,MAAM,CAACqC,MAAM,CAAC,sBAAsB,EAAE,KAAK,CAAC;IACnD,CAAC;IACD,MAAMC,aAAaA,CAAA,EAAG;MACpB,MAAMlG,KAAK,CAACmG,MAAM,CACf,8CAA6C,IAAI,CAAC5C,YAAa,EAClE,CAAC;MAED,IAAI6C,KAAI,GAAI,IAAI,CAAC1B,OAAO,CAAC2B,SAAS,CAAE5B,IAAI,IAAKA,IAAI,CAACgB,EAAC,IAAK,IAAI,CAAClC,YAAY,CAAC;MAC1E,IAAI6C,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAAC1B,OAAO,CAAC4B,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC/B;;MAEA;MACA,IAAI,IAAI,CAAC1B,OAAO,CAACc,MAAK,GAAI,CAAC,EAAE;QAC3B,IAAI,CAACjC,YAAW,GAAI,IAAI,CAACmB,OAAO,CAAC,CAAC,CAAC,CAACe,EAAE;MACxC;IACF,CAAC;IACDc,UAAUA,CAACC,OAAO,EAAE;MAClBA,OAAO,CAACC,QAAQ,CAAEC,KAAK,IAAK;QAC1B,IAAIA,KAAK,EAAE;UACT,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;YAC5B,IAAI,CAAC/E,UAAS,GAAI,KAAK;YACvB,IAAI,CAAC0D,YAAY,CAAC,CAAC;UACrB,CAAC,CAAC;QACJ,OAAO;UACL,OAAO,KAAK;QACd;MACF,CAAC,CAAC;IACJ,CAAC;IACD,MAAMoB,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,CAAC1E,kBAAiB,GAAI,IAAI;QAG9B,MAAM;UAAEvB;QAAK,IAAI,MAAMV,KAAK,CAAC6G,IAAI,CAAE,4CAA2C,EAAE;UAC9EnC,OAAO,EAAE,IAAI,CAACY,IAAI,CAACZ,OAAO;UAC1BG,KAAK,EAAE,IAAI,CAACS,IAAI,CAACT,KAAK;UACtBnD,KAAK,EAAE,IAAI,CAAC4D,IAAI,CAAC5D,KAAK;UACtBoF,KAAK,EAAE,IAAI,CAACxB,IAAI,CAACwB,KAAK;UACtBC,SAAS,EAAE,IAAI,CAACzB,IAAI,CAACyB,SAAS;UAC9BC,IAAI,EAAE,IAAI,CAACxD;QACb,CAAC,CAAC;QAEF,IAAI,CAAC8B,IAAI,CAACZ,OAAM,GAAI,EAAE;QACtB,IAAI,CAACY,IAAI,CAACT,KAAI,GAAI,EAAE;QACpB,IAAI,CAACS,IAAI,CAAC5D,KAAI,GAAI,EAAE;QACpB,IAAI,CAAC4D,IAAI,CAACwB,KAAI,GAAI,EAAE;QACpB,IAAI,CAACxB,IAAI,CAACyB,SAAQ,GAAI,EAAE;MAC1B,EAAE,OAAO7B,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,UAAU;QACR,IAAI,CAACjD,kBAAiB,GAAI,KAAK;MACjC;IACF,CAAC;IACDgF,WAAWA,CAACvF,KAAK,EAAE0C,EAAE,EAAE;MACrB,MAAMI,OAAM,GAAI,IAAI,CAACtC,WAAW,CAACgF,MAAM,CAAEC,OAAO,IAC9CA,OAAO,CAACzC,OAAO,CAAC0C,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3F,KAAK,CAAC0F,WAAW,CAAC,CAAC,CAC5D,CAAC;MACDhD,EAAE,CAACI,OAAO,CAAC;IACb,CAAC;IACD8C,YAAYA,CAAC7C,IAAI,EAAE;MACjB;MACA,IAAI,CAAC8C,oBAAmB,GAAI,IAAI;MAChC,IAAI,CAACjC,IAAI,CAACkC,UAAS,GAAI/C,IAAI,CAACC,OAAO;IACrC,CAAC;IACD,MAAM+C,UAAUA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;MACxB,MAAM,IAAI,CAACA,YAAY,CAACjB,QAAQ,CAAC,CAACC,KAAK,EAAEiB,MAAM,KAAK;QAClD,IAAIjB,KAAK,EAAE;UACT,IAAI,CAAC3D,UAAS,GAAI,IAAI;QACxB;MACF,CAAC,CAAC;MACF,IAAI,IAAI,CAACnB,GAAE,KAAM,OAAO,EAAE;QACxB,MAAM,IAAI,CAACgG,YAAY,CAACnB,QAAQ,CAAC,CAACC,KAAK,EAAEiB,MAAM,KAAK;UAClD,IAAIjB,KAAK,EAAE;YACT,IAAI,CAAC1D,UAAS,GAAI,IAAI;UACxB;QACF,CAAC,CAAC;MACJ;MACA,IAAI,IAAI,CAACpB,GAAE,KAAM,OAAM,KAAM,IAAI,CAACC,UAAS,IAAK,IAAI,CAAC6C,OAAO,CAACc,MAAK,KAAM,CAAC,CAAC,EAAE;QAC1E,MAAM,IAAI,CAACqC,YAAY,CAACpB,QAAQ,CAAC,CAACC,KAAK,EAAEiB,MAAM,KAAK;UAClD,IAAIjB,KAAK,EAAE;YACT,IAAI,CAACzD,UAAS,GAAI,IAAI;UACxB;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IACD6E,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACxF,WAAU,GAAI,EAAE;MACrB,IAAI,IAAI,CAACC,SAAQ,KAAM,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC,CAACC,KAAK,EAAE;QAC/C,IAAIzB,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;QAC5B,IAAImH,KAAI,GAAIpH,WAAW,CAACqH,QAAQ,CAAC,CAAC;QAClC,IAAIC,OAAM,GAAItH,WAAW,CAACuH,UAAU,CAAC,CAAC;QAEtC,IAAI,CAAC5F,WAAW,CAAC6F,IAAI,CAAC;UAAE/F,KAAK,EAAG,GAAE2F,KAAM,IAAGE,OAAQ,EAAC;UAAE5F,KAAK,EAAE;QAAY,CAAC,CAAC;QAE3E,IAAI4F,OAAM,GAAI,EAAE,EAAE;UAChB,IAAI,CAAC3F,WAAW,CAAC6F,IAAI,CAAC;YAAE/F,KAAK,EAAG,GAAE2F,KAAI,GAAI,CAAE,KAAI;YAAE1F,KAAK,EAAG,GAAE0F,KAAI,GAAI,CAAE;UAAK,CAAC,CAAC;UAC7E,KAAK,IAAIK,CAAA,GAAIL,KAAI,GAAI,CAAC,EAAEK,CAAA,GAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;YACnC,IAAI,CAAC9F,WAAW,CAAC6F,IAAI,CAAC;cAAE/F,KAAK,EAAG,GAAEgG,CAAE,KAAI;cAAE/F,KAAK,EAAG,GAAE+F,CAAE;YAAK,CAAC,CAAC;YAC7D,IAAI,CAAC9F,WAAW,CAAC6F,IAAI,CAAC;cAAE/F,KAAK,EAAG,GAAEgG,CAAE,KAAI;cAAE/F,KAAK,EAAG,GAAE+F,CAAE;YAAK,CAAC,CAAC;UAC/D;QACF,OAAO;UACL,KAAK,IAAIA,CAAA,GAAIL,KAAI,GAAI,CAAC,EAAEK,CAAA,GAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;YACnC,IAAI,CAAC9F,WAAW,CAAC6F,IAAI,CAAC;cAAE/F,KAAK,EAAG,GAAEgG,CAAE,KAAI;cAAE/F,KAAK,EAAG,GAAE+F,CAAE;YAAK,CAAC,CAAC;YAC7D,IAAI,CAAC9F,WAAW,CAAC6F,IAAI,CAAC;cAAE/F,KAAK,EAAG,GAAEgG,CAAE,KAAI;cAAE/F,KAAK,EAAG,GAAE+F,CAAE;YAAK,CAAC,CAAC;UAC/D;QACF;MACF,OAAO;QACL,KAAK,IAAIA,CAAA,GAAI,EAAE,EAAEA,CAAA,GAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;UAC5B,IAAI,CAAC9F,WAAW,CAAC6F,IAAI,CAAC;YAAE/F,KAAK,EAAG,GAAEgG,CAAE,KAAI;YAAE/F,KAAK,EAAG,GAAE+F,CAAE;UAAK,CAAC,CAAC;UAC7D,IAAI,CAAC9F,WAAW,CAAC6F,IAAI,CAAC;YAAE/F,KAAK,EAAG,GAAEgG,CAAE,KAAI;YAAE/F,KAAK,EAAG,GAAE+F,CAAE;UAAK,CAAC,CAAC;QAC/D;MACF;MACA,IAAI,CAAC5F,UAAS,GAAI,IAAI,CAACF,WAAW,CAAC,CAAC,CAAC,CAACF,KAAK;IAC7C,CAAC;IACDiG,SAASA,CAAA,EAAG;MACV,IAAI,CAACZ,UAAU,CAAC,CAAC,CAACb,IAAI,CAAC,MAAM;QAC3B,IAAI,IAAI,CAAChF,GAAE,KAAM,OAAO,EAAE;UACxB;UACA,IAAI,IAAI,CAACmB,UAAS,IAAK,IAAI,CAACC,UAAU,EAAE;YACtC,IAAI,CAACsF,WAAW,CAAC,CAAC;UACpB;QACF,OAAO,IACL,IAAI,CAAC1G,GAAE,KAAM,OAAM,KAClB,IAAI,CAACC,UAAS,IAAK,IAAI,CAAC6C,OAAO,CAACc,MAAK,KAAM,CAAC,GAC7C;UACA;UACA,IAAI,IAAI,CAACzC,UAAS,IAAK,IAAI,CAACE,UAAU,EAAE;YACtC,IAAI,CAACqF,WAAW,CAAC,CAAC;UACpB;QACF,OAAO;UACL;UACA,IAAI,IAAI,CAACvF,UAAU,EAAE;YACnB,IAAI,CAACuF,WAAW,CAAC,CAAC;UACpB;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IACD,MAAMA,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,CAACpF,eAAc,GAAI,IAAI;QAE3B,MAAMqF,IAAG,GAAI;UACXxG,IAAI,EAAE,IAAI,CAACuD,IAAI,CAACvD,IAAI;UACpByG,GAAG,EAAE,IAAI,CAAClD,IAAI,CAACkD,GAAG;UAClBC,GAAG,EAAE,IAAI,CAAClG,SAAS;UACnBmG,IAAI,EAAE,IAAI,CAAClG,UAAU;UACrBmG,OAAO,EAAE,IAAI,CAAC/G,GAAE,KAAM,OAAM,GAAI,IAAI,CAACgB,eAAc,GAAI,IAAI,CAACC,aAAa;UACzE+F,KAAK,EAAE,IAAI,CAACC,IAAI;UAChBC,UAAU,EAAE,IAAI,CAACA,UAAU;UAC3B1F,OAAO,EAAE,IAAI,CAACA,OAAO;UACrBa,OAAO,EAAE,IAAI,CAACrC,GAAE,KAAM,OAAM,GAAI,UAAS,GAAI,WAAW;UACxD8C,OAAO,EAAE,EAAE;UACXqE,OAAO,EAAE;QACX,CAAC;;QAED;QACA,IACG,IAAI,CAACnG,eAAc,KAAM,mBAAkB,IAAK,IAAI,CAAChB,GAAE,KAAM,OAAO,IACpE,IAAI,CAACiB,aAAY,KAAM,0BAAyB,IAAK,IAAI,CAACjB,GAAE,KAAM,OAAO,EAC1E;UACA2G,IAAI,CAACS,MAAK,GAAI,IAAI,CAAC1D,IAAI,CAAC0D,MAAK,GAAI,IAAI,CAAC1D,IAAI,CAAC0D,MAAK,GAAI,WAAW;QACjE;QAEA,IAAI,IAAI,CAAC1D,IAAI,CAAC2D,QAAQ,EAAE;UACtBV,IAAI,CAACW,aAAY,GAAI,IAAI,CAAC5D,IAAI,CAAC2D,QAAQ;QACzC;QACA,IAAI,IAAI,CAAC3D,IAAI,CAAC6D,QAAQ,EAAE;UACtBZ,IAAI,CAACa,aAAY,GAAI,IAAI,CAAC9D,IAAI,CAAC6D,QAAQ;QACzC;QACA,IAAI,IAAI,CAAC7D,IAAI,CAAC+D,IAAI,EAAE;UAClBd,IAAI,CAACc,IAAG,GAAI,IAAI,CAAC/D,IAAI,CAAC+D,IAAI;QAC5B;QACA,IAAI,IAAI,CAACC,WAAW,CAAC9D,MAAK,GAAI,CAAC,EAAE;UAC/B+C,IAAI,CAACe,WAAU,GAAI,IAAI,CAACA,WAAW;QACrC;QAEA,IAAI,IAAI,CAAC1H,GAAE,KAAM,OAAM,IAAK,CAAC,IAAI,CAACC,UAAS,IAAK,IAAI,CAAC6C,OAAO,CAACc,MAAK,GAAI,CAAC,EAAE;UACvE,MAAMzB,MAAK,GAAI,IAAI,CAACW,OAAO,CAACK,IAAI,CAAEN,IAAI,IAAK;YACzC,OAAOA,IAAI,CAACgB,EAAC,KAAM,IAAI,CAAClC,YAAY;UACtC,CAAC,CAAC;UACFgF,IAAI,CAAC7D,OAAM,GAAIX,MAAM;UACrBwE,IAAI,CAACQ,OAAM,GAAI,IAAI,CAAC1F,YAAY;QAClC;QAEA,IAAI,IAAI,CAACzB,GAAE,KAAM,OAAM,KAAM,IAAI,CAACC,UAAS,IAAK,IAAI,CAAC6C,OAAO,CAACc,MAAK,KAAM,CAAC,CAAC,EAAE;UAC1E,MAAMzB,MAAK,GAAI;YACbiD,IAAI,EAAE,IAAI,CAACxD,UAAU;YACrBkB,OAAO,EAAE,IAAI,CAACY,IAAI,CAACZ,OAAO;YAC1BG,KAAK,EAAE,IAAI,CAACS,IAAI,CAACT,KAAK;YACtBnD,KAAK,EAAE,IAAI,CAAC4D,IAAI,CAAC5D,KAAK;YACtBoF,KAAK,EAAE,IAAI,CAACxB,IAAI,CAACwB,KAAK;YACtBC,SAAS,EAAE,IAAI,CAACzB,IAAI,CAACyB;UACvB,CAAC;UACDwB,IAAI,CAAC7D,OAAM,GAAIX,MAAM;UACrBwE,IAAI,CAACQ,OAAM,GAAI,IAAI,CAACzF,YAAY;QAClC;QAEA,IAAI,IAAI,CAAC1B,GAAE,KAAM,OAAO,EAAE;UACxB,MAAMmC,MAAK,GAAI;YACbiD,IAAI,EAAE,IAAI,CAACvD,UAAU;YACrBiB,OAAO,EAAE,IAAI,CAACY,IAAI,CAACkC;UACrB,CAAC;UACDe,IAAI,CAAC7D,OAAM,GAAIX,MAAM;QACvB;QAEA,MAAM;UAAErD;QAAK,IAAI,MAAMV,KAAK,CAAC6G,IAAI,CAC9B,2CAA0C,EAC3C0B,IACF,CAAC;QAED,IAAI,CAACM,IAAG,GAAI,EAAE;QACd,IAAI,CAAC1F,OAAM,GAAIzC,IAAI,CAAC+E,EAAE;;QAEtB;QACA,IAAI,CAAC8D,YAAY,CAACpB,IAAI,CAAC,IAAI,CAAChF,OAAO,CAAC;QACpCqG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,YAAY,CAAC,CAAC;MAClE,EAAE,OAAOrE,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,UAAU;QACR,IAAI,CAAChC,eAAc,GAAI,KAAK;QAC5B,IAAI,CAACc,SAAQ,GAAI,IAAI;MACvB;IACF,CAAC;IACD,MAAM4F,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAM;UAAElJ;QAAK,IAAI,MAAMV,KAAK,CAACsE,GAAG,CAC7B,gDACC,IAAI,CAACiF,YAAY,CAAC,IAAI,CAACA,YAAY,CAAC/D,MAAK,GAAI,CAAC,CAC/C,EACH,CAAC;QAED,IAAI,CAAC9B,YAAW,GAAIhD,IAAI,CAAC,CAAC,CAAC;QAC3B,IAAI,CAACmI,IAAG,GAAI,IAAI,CAACnF,YAAY,CAACkF,KAAK;MACrC,EAAE,OAAO1D,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACD2E,aAAaA,CAAA,EAAG;MACd,IAAI,CAACD,UAAU,CAAC,CAAC,CAAChD,IAAI,CAAC,MAAM;QAC3B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAI,CAAChB,QAAO,GAAI,IAAI,CAACkE,iBAAiB,CAAC,IAAI,CAAClE,QAAQ,CAAC;QACrD;QACA;QACA;;QAEA;QACA,IAAI,CAACN,IAAI,CAACvD,IAAG,GAAI,IAAI,CAAC2B,YAAY,CAAC3B,IAAI;QACvC,IAAI,CAACuD,IAAI,CAACkD,GAAE,GAAI,IAAI,CAAC9E,YAAY,CAAC8E,GAAG;QACrC,IAAI,CAAClD,IAAI,CAAC0D,MAAK,GACb,IAAI,CAACtF,YAAY,CAACsF,MAAK,KAAM,WAAU,GAAI,IAAI,CAACtF,YAAY,CAACsF,MAAK,GAAI,EAAE;QAC1E,IAAI,CAAC5F,OAAM,GAAI,IAAI,CAACM,YAAY,CAACN,OAAO;QAExC,IAAI,IAAI,CAACM,YAAY,CAACO,OAAM,KAAM,UAAU,EAAE;UAC5C,IAAI,CAACrC,GAAE,GAAI,OAAO;UAClB,IAAI,CAACgB,eAAc,GAAI,IAAI,CAACc,YAAY,CAACiF,OAAO;UAEhD,IAAI,IAAI,CAACjF,YAAY,CAACgB,OAAO,CAACe,EAAE,EAAE;YAChC;YACA,IAAI,IAAI,CAACf,OAAO,CAACc,MAAK,GAAI,CAAC,EAAE;cAC3B,MAAMzB,MAAK,GAAI,IAAI,CAACW,OAAO,CAACK,IAAI,CAAEN,IAAI,IAAK;gBACzC,OAAOA,IAAI,CAACgB,EAAC,KAAM,IAAI,CAAC/B,YAAY,CAACgB,OAAO,CAACe,EAAE;cACjD,CAAC,CAAC;cAEF,IAAI1B,MAAK,KAAMgG,SAAS,EAAE;gBACxB;gBACA,IAAI,CAACxG,YAAW,GAAI,IAAI,CAACG,YAAY,CAACgB,OAAO,CAACe,EAAE;gBAEhD,IAAI,CAACpC,YAAW,GAAI,IAAI,CAACK,YAAY,CAACqF,OAAO;cAC/C,OAAO;gBACL;gBACA,IAAI,CAAClH,UAAS,GAAI,IAAI;gBAEtB,IAAI,CAAC2B,UAAS,GAAI,IAAI,CAACE,YAAY,CAACgB,OAAO,CAACsC,IAAI;gBAChD,IAAI,CAAC1B,IAAI,CAACZ,OAAM,GAAI,IAAI,CAAChB,YAAY,CAACgB,OAAO,CAACA,OAAO;gBACrD,IAAI,CAACY,IAAI,CAACT,KAAI,GAAI,IAAI,CAACnB,YAAY,CAACgB,OAAO,CAACG,KAAK;gBACjD,IAAI,CAACS,IAAI,CAAC5D,KAAI,GAAI,IAAI,CAACgC,YAAY,CAACgB,OAAO,CAAChD,KAAK;gBACjD,IAAI,CAAC4D,IAAI,CAACwB,KAAI,GAAI,IAAI,CAACpD,YAAY,CAACgB,OAAO,CAACoC,KAAK;gBACjD,IAAI,CAACxB,IAAI,CAACyB,SAAQ,GAAI,IAAI,CAACrD,YAAY,CAACgB,OAAO,CAACqC,SAAS;gBAEzD,IAAI,CAACzD,YAAW,GAAI,IAAI,CAACI,YAAY,CAACqF,OAAO;cAC/C;YACF,OAAO;cACL;cACA,IAAI,CAAClH,UAAS,GAAI,IAAI;cAEtB,IAAI,CAAC2B,UAAS,GAAI,IAAI,CAACE,YAAY,CAACgB,OAAO,CAACsC,IAAI;cAChD,IAAI,CAAC1B,IAAI,CAACZ,OAAM,GAAI,IAAI,CAAChB,YAAY,CAACgB,OAAO,CAACA,OAAO;cACrD,IAAI,CAACY,IAAI,CAACT,KAAI,GAAI,IAAI,CAACnB,YAAY,CAACgB,OAAO,CAACG,KAAK;cACjD,IAAI,CAACS,IAAI,CAAC5D,KAAI,GAAI,IAAI,CAACgC,YAAY,CAACgB,OAAO,CAAChD,KAAK;cACjD,IAAI,CAAC4D,IAAI,CAACwB,KAAI,GAAI,IAAI,CAACpD,YAAY,CAACgB,OAAO,CAACoC,KAAK;cACjD,IAAI,CAACxB,IAAI,CAACyB,SAAQ,GAAI,IAAI,CAACrD,YAAY,CAACgB,OAAO,CAACqC,SAAS;cAEzD,IAAI,CAACzD,YAAW,GAAI,IAAI,CAACI,YAAY,CAACqF,OAAO;YAC/C;UACF,OAAO;YACL;YACA,IAAI,CAAClH,UAAS,GAAI,IAAI;YAEtB,IAAI,CAAC2B,UAAS,GAAI,IAAI,CAACE,YAAY,CAACgB,OAAO,CAACsC,IAAI;YAChD,IAAI,CAAC1B,IAAI,CAACZ,OAAM,GAAI,IAAI,CAAChB,YAAY,CAACgB,OAAO,CAACA,OAAO;YACrD,IAAI,CAACY,IAAI,CAACT,KAAI,GAAI,IAAI,CAACnB,YAAY,CAACgB,OAAO,CAACG,KAAK;YACjD,IAAI,CAACS,IAAI,CAAC5D,KAAI,GAAI,IAAI,CAACgC,YAAY,CAACgB,OAAO,CAAChD,KAAK;YACjD,IAAI,CAAC4D,IAAI,CAACwB,KAAI,GAAI,IAAI,CAACpD,YAAY,CAACgB,OAAO,CAACoC,KAAK;YACjD,IAAI,CAACxB,IAAI,CAACyB,SAAQ,GAAI,IAAI,CAACrD,YAAY,CAACgB,OAAO,CAACqC,SAAS;YAEzD,IAAI,CAACzD,YAAW,GAAI,IAAI,CAACI,YAAY,CAACqF,OAAO;UAC/C;QACF;QACA,IAAI,IAAI,CAACrF,YAAY,CAACO,OAAM,KAAM,WAAW,EAAE;UAC7C,IAAI,CAACrC,GAAE,GAAI,OAAO;UAClB,IAAI,CAACiB,aAAY,GAAI,IAAI,CAACa,YAAY,CAACiF,OAAO;UAE9C,IAAI,CAAClF,UAAS,GAAI,IAAI,CAACC,YAAY,CAACgB,OAAO,CAACsC,IAAI;UAChD,IAAI,CAAC1B,IAAI,CAACkC,UAAS,GAAI,IAAI,CAAC9D,YAAY,CAACgB,OAAO,CAACA,OAAO;UACxD,IAAI,CAACgB,eAAe,CAAC,CAAC;QACxB;QACA,IAAI,IAAI,CAAChC,YAAY,CAACwF,aAAa,EAAE;UACnC,IAAI,CAAC5D,IAAI,CAAC2D,QAAO,GAAI,IAAI,CAACvF,YAAY,CAACwF,aAAa;QACtD;QACA,IAAI,IAAI,CAACxF,YAAY,CAAC0F,aAAa,EAAE;UACnC,IAAI,CAAC9D,IAAI,CAAC6D,QAAO,GAAI,IAAI,CAACzF,YAAY,CAAC0F,aAAa;QACtD;QACA,IAAI,IAAI,CAAC1F,YAAY,CAAC2F,IAAI,EAAE;UAC1B,IAAI,CAAC/D,IAAI,CAAC+D,IAAG,GAAI,IAAI,CAAC3F,YAAY,CAAC2F,IAAI;QACzC;MACF,CAAC,CAAC;IACJ,CAAC;IACDS,iBAAiBA,CAAClB,KAAK,EAAE;MACvB,OAAOA,KAAK,CAAC9E,GAAG,CAAEW,IAAI,KAAM;QAC1B,GAAGA,IAAI;QACPqB,OAAO,EAAE,IAAI,CAAC+C,IAAI,CAACmB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACxE,EAAC,KAAMhB,IAAI,CAACgB,EAAE;MAC/D,CAAC,CAAC,CAAC;IACL,CAAC;IACDyE,aAAaA,CAACzF,IAAI,EAAE;MAClB,KAAK,IAAIC,OAAM,IAAK,IAAI,CAACA,OAAO,EAAE;QAChC,IACEA,OAAO,CAACA,OAAM,KAAMD,IAAI,CAACC,OAAM,IAC/BA,OAAO,CAACG,KAAI,KAAMJ,IAAI,CAACI,KAAI,IAC3BH,OAAO,CAAChD,KAAI,KAAM+C,IAAI,CAAC/C,KAAI,IAC3BgD,OAAO,CAACoC,KAAI,KAAMrC,IAAI,CAACqC,KAAI,IAC3BpC,OAAO,CAACqC,SAAQ,KAAMtC,IAAI,CAACsC,SAAQ,IACnCrC,OAAO,CAACsC,IAAG,KAAMvC,IAAI,CAACuC,IAAG,EACzB;UACA,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd;EACF,CAAC;EACDmD,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC5E,YAAY,CAAC,CAAC;IACnB;IACA,IAAI,CAAChD,SAAQ,GAAI,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC,CAACC,KAAK;IACzC;IACA,IAAI,CAAC0F,mBAAmB,CAAC,CAAC;IAC1B;IACA,IAAI,CAACrF,GAAE,GAAI,IAAI,CAACkB,KAAK,CAAC,CAAC,CAAC;IACxB,IAAI,CAACjB,IAAG,GAAI,IAAI,CAACiB,KAAK,CAAC,CAAC,CAAC;IACzB;IACA,IAAI,CAACgC,YAAY,CAAC,CAAC,CAACiB,IAAI,CAAC,MAAM;MAC7B,IAAI,CAAChB,QAAO,GAAI,IAAI,CAACA,QAAQ,CAAC9B,GAAG,CAAEW,IAAI,KAAM;QAC3C,GAAGA,IAAI;QACPqB,OAAO,EAAE,IAAI,CAAC+C,IAAI,CAACmB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACxE,EAAC,KAAMhB,IAAI,CAACgB,EAAE;MAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;;IAEF;IACA;;IAEA;IACA,IAAI,IAAI,CAAC2E,MAAM,CAACC,KAAK,CAACC,MAAM,EAAE;MAC5B,IAAI,CAACT,aAAa,CAAC,CAAC;IACtB;EACF,CAAC;EACD1J,QAAQ,EAAE;IACR,GAAGK,QAAQ,CAAC;MACV+J,gBAAgB,EAAG1G,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACyG,gBAAgB;MACvDC,aAAa,EAAG3G,KAAK,IAAKA,KAAK,CAACC,GAAG,CAAC0G,aAAa;MACjDC,aAAa,EAAG5G,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACY,OAAO;MAC3CgG,oBAAoB,EAAG7G,KAAK,IAAKA,KAAK,CAACC,GAAG,CAAC6G,OAAO;MAClDC,cAAc,EAAG/G,KAAK,IAAKA,KAAK,CAACC,GAAG,CAAC8G;IACvC,CAAC,CAAC;IACFC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAChC,IAAI,CAACrD,MAAK,KAAM,CAAC;IAC/B,CAAC;IACDsF,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACV,MAAM,CAACC,KAAK,CAACC,MAAK,KAAM,MAAM;IAC5C;EACF,CAAC;EACDS,KAAK,EAAE;IACLD,YAAYA,CAAC1I,KAAK,EAAE;MAClB;MACA,IAAIA,KAAK,EAAE;QACT,IAAI,CAACyH,aAAa,CAAC,CAAC;MACtB;IACF,CAAC;IACDgB,SAASA,CAACzI,KAAK,EAAE;MACf,IAAIA,KAAK,EAAE;QACT,IAAI,CAAC,IAAI,CAAC4B,SAAS,EAAE;UACnB;UACA,IAAI,CAACgH,OAAO,CAAC7C,IAAI,CAAC;YAAEnG,IAAI,EAAE;UAAkB,CAAC,CAAC;QAChD,OAAO;UACL,IAAI,CAACgJ,OAAO,CAAC7C,IAAI,CAAC;YAAEnG,IAAI,EAAE;UAAoB,CAAC,CAAC;QAClD;MACF;IACF;EACF,CAAC;EACDiJ,KAAKA,CAACC,KAAK,EAAE;IACX,MAAM;MAAExG,OAAO;MAAEH;IAAK,IAAItE,MAAM,CAAC,SAAS,CAAC;IAC3C,MAAM;MAAE4I,IAAI;MAAEsC,SAAS;MAAEC,cAAc;MAAEtC,UAAU;MAAES;IAAa,IAAItJ,MAAM,CAAC,MAAM,CAAC;IACpF,MAAM;MACJoL,KAAK;MACLC,KAAK;MACLC,IAAI;MACJC,MAAM;MACNC,MAAM;MACNC,MAAM;MACNC,SAAS;MACTC,SAAS;MACTC,OAAO;MACPC,WAAW;MACXlG;IACF,IAAI3F,MAAM,CAAC,OAAO,CAAC;IACnB,MAAMqF,IAAG,GAAIpF,GAAG,CAAC;MACf6B,IAAI,EAAE,EAAE;MACRyG,GAAG,EAAE,EAAE;MACP9D,OAAO,EAAE,EAAE;MACXG,KAAK,EAAE,EAAE;MACTnD,KAAK,EAAE,EAAE;MACToF,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbS,UAAU,EAAE,EAAE;MACdyB,QAAQ,EAAE,EAAE;MACZE,QAAQ,EAAE,EAAE;MACZE,IAAI,EAAE,EAAE;MACRL,MAAM,EAAE,EAAE;MACV+C,IAAI,EAAE;IACR,CAAC,CAAC;IACF,MAAMlE,YAAW,GAAI3H,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAM0H,YAAW,GAAI1H,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMwH,YAAW,GAAIxH,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAM8L,YAAW,GAAI9L,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAM+L,YAAW,GAAI/L,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMgM,YAAW,GAAIhM,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMiM,YAAW,GAAIjM,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMkM,YAAW,GAAIlM,GAAG,CAAC,CAAC,CAAC,CAAC;IAE5B,MAAM6L,IAAG,GAAI7L,GAAG,CAAC,CAAC;IAClB,MAAMmM,SAAQ,GAAInM,GAAG,CAAC,CAAC;IACvB,MAAMoM,WAAU,GAAIpM,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMoJ,WAAU,GAAIpJ,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMqM,WAAU,GAAIrM,GAAG,CAAC,KAAK,CAAC;IAE9B,MAAMsM,KAAI,GAAI/L,QAAQ,CAAC,CAAC;IACxB,IAAIgM,UAAS,GAAItM,QAAQ,CAAC,MAAMqM,KAAK,CAAC3I,KAAK,CAACC,GAAG,CAAC2I,UAAU,CAAC;IAC3D,IAAIlC,gBAAe,GAAIpK,QAAQ,CAAC,MAAMqM,KAAK,CAAC3I,KAAK,CAACC,GAAG,CAACyG,gBAAgB,CAAC;IACvE,IAAIlG,eAAc,GAAInE,GAAG,CAAC,KAAK,CAAC;IAChC,IAAIqH,oBAAmB,GAAIrH,GAAG,CAAC,KAAK,CAAC;;IAErC;IACA,MAAMwM,WAAU,GAAIA,CAACC,IAAI,EAAEvK,KAAK,EAAEwK,QAAQ,KAAK;MAC7C,IAAI,CAACC,MAAM,CAACC,SAAS,CAAC1K,KAAK,KAAKA,KAAK,EAAE;QACrCwK,QAAQ,CAAC,IAAIG,KAAK,CAAC,gBAAgB,CAAC,CAAC;MACvC,OAAO;QACL,IAAI3K,KAAI,IAAK,KAAKA,KAAK,EAAE;UACvBwK,QAAQ,CAAC,IAAIG,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACzC,OAAO;UACLH,QAAQ,CAAC,CAAC;QACZ;MACF;IACF,CAAC;;IAED;IACA,MAAMI,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFV,WAAW,CAAClK,KAAI,GAAI,IAAI;QAExB,MAAM;UAAE1B;QAAK,IAAI,MAAMV,KAAK,CAACsE,GAAG,CAAE,yCAAwC,CAAC;QAE3EyH,IAAI,CAAC3J,KAAI,GAAI1B,IAAI,CAAC,CAAC,CAAC,CAACqL,IAAI;MAC3B,EAAE,OAAO7G,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,UAAU;QACRoH,WAAW,CAAClK,KAAI,GAAI,KAAK;MAC3B;IACF,CAAC;;IAED;IACA,MAAM6K,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFV,WAAW,CAACnK,KAAI,GAAI,IAAI;QAExB,MAAM;UAAE1B;QAAK,IAAI,MAAMV,KAAK,CAACsE,GAAG,CAC7B,gEACH,CAAC;QAEDgF,WAAW,CAAClH,KAAI,GAAI1B,IAAI,CAACoD,GAAG,CAAE+B,GAAG,KAAM;UACrC,GAAGA,GAAG;UACNE,KAAK,EAAE;QACT,CAAC,CAAC,CAAC;MACL,EAAE,OAAOb,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,UAAU;QACRqH,WAAW,CAACnK,KAAI,GAAI,KAAK;MAC3B;IACF,CAAC;IAED,MAAM8K,SAAQ,GAAIA,CAAA,KAAM;MACtBF,SAAS,CAAC,CAAC,CAACpG,IAAI,CAAC,MAAM;QACrB,IAAImF,IAAI,CAAC3J,KAAI,KAAMkD,IAAI,CAAClD,KAAK,CAAC2J,IAAI,EAAE;UAClCM,SAAS,CAACjK,KAAI,GAAI,IAAI;UACtB6K,SAAS,CAAC,CAAC;QACb,OAAO;UACLZ,SAAS,CAACjK,KAAI,GAAI,KAAK;QACzB;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAM+K,UAAS,GAAIA,CAAA,KAAM;MACvB7D,WAAW,CAAClH,KAAI,GAAI,EAAE;MACtBiK,SAAS,CAACjK,KAAI,GAAI,EAAE;MACpBkD,IAAI,CAAClD,KAAK,CAAC2J,IAAG,GAAI,EAAE;IACtB,CAAC;;IAED;IACA,MAAMqB,QAAO,GAAIA,CAACT,IAAI,EAAEvK,KAAK,EAAEwK,QAAQ,KAAK;MAC1C,IAAIS,QAAO,GAAI,KAAK;MACpB,IAAI3I,OAAM,GAAK,GAAEwG,KAAK,CAAC1H,UAAW,KAAIpB,KAAM,EAAC;MAC7CoK,KAAK,CAACc,QAAQ,CAAC,qBAAqB,EAAE5I,OAAO,CAAC,CAACkC,IAAI,CAAC,MAAM;QACxD4F,KAAI,CACDc,QAAQ,CAAC,kBAAkB,EAAE;UAC5B7K,GAAG,EAAEgK,UAAU,CAACrK,KAAK,CAAC,CAAC,CAAC;UACxBM,IAAI,EAAE+J,UAAU,CAACrK,KAAK,CAAC,CAAC;QAC1B,CAAC,EACAwE,IAAI,CAAC,MAAM;UACVyG,QAAO,GAAI9C,gBAAgB,CAACnI,KAAK;UACjC,IAAIA,KAAI,IAAK,CAACiL,QAAQ,EAAE;YACtBT,QAAQ,CAAC,IAAIG,KAAK,CAAC,6CAA6C,CAAC,CAAC;UACpE,OAAO;YACLH,QAAQ,CAAC,CAAC;UACZ;QACF,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,MAAMW,WAAU,GAAIA,CAACZ,IAAI,EAAEvK,KAAK,EAAEwK,QAAQ,KAAK;MAC7C,IAAI,CAACvI,eAAe,CAACjC,KAAK,EAAE;QAC1BwK,QAAQ,CAAC,IAAIG,KAAK,CAAC,kBAAkB,CAAC,CAAC;MACzC,OAAO;QACLH,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;;IAED;IACA,MAAMY,eAAc,GAAIA,CAACb,IAAI,EAAEvK,KAAK,EAAEwK,QAAQ,KAAK;MACjD,IAAI,CAACrF,oBAAoB,CAACnF,KAAK,EAAE;QAC/BwK,QAAQ,CAAC,IAAIG,KAAK,CAAC,kBAAkB,CAAC,CAAC;MACzC,OAAO;QACLH,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IAED,MAAMa,KAAI,GAAIvN,GAAG,CAAC;MAChBwE,OAAO,EAAE,CACP;QAAEgJ,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAO,CAAC,EAChE;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,mBAAmB;QAAEC,OAAO,EAAE;MAAO,CAAC,EACzD;QAAEE,SAAS,EAAEV,QAAQ;QAAEQ,OAAO,EAAE;MAAS,CAAC,EAC1C;QAAEE,SAAS,EAAEP,WAAW;QAAEK,OAAO,EAAE;MAAS,CAAC,CAC9C;MACDpG,UAAU,EAAE,CACV;QAAEkG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAO,CAAC,EAChE;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,mBAAmB;QAAEC,OAAO,EAAE;MAAO,CAAC,EACzD;QAAEE,SAAS,EAAEN,eAAe;QAAEI,OAAO,EAAE;MAAS,CAAC,CAClD;MACD7L,IAAI,EAAE,CACJ;QAAE2L,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAO,CAAC,EAChE;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,mBAAmB;QAAEC,OAAO,EAAE;MAAO,CAAC,CAC1D;MACDpF,GAAG,EAAE,CACH;QAAEkF,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAO,CAAC,EAChE;QAAEC,GAAG,EAAE,EAAE;QAAEF,OAAO,EAAE,mBAAmB;QAAEC,OAAO,EAAE;MAAO,CAAC,CAC3D;MACDG,MAAM,EAAE,CAAC;QAAED,SAAS,EAAEpB,WAAW;QAAEkB,OAAO,EAAE;MAAO,CAAC;IACtD,CAAC,CAAC;IAEF,MAAMI,cAAa,GAAKvJ,IAAI,IAAK;MAC/B,IAAI,CAACA,IAAI,CAACqB,OAAO,EAAE;QACjBqF,SAAS,CAAC1G,IAAI,CAAC;MACjB,OAAO;QACL2G,cAAc,CAAC3G,IAAI,CAAC;MACtB;IACF,CAAC;IAED,OAAO;MACLC,OAAO;MACPY,IAAI;MACJuC,YAAY;MACZD,YAAY;MACZF,YAAY;MACZsE,YAAY;MACZC,YAAY;MACZC,YAAY;MACZC,YAAY;MACZC,YAAY;MACZqB,KAAK;MACL5E,IAAI;MACJmF,cAAc;MACdpI,QAAQ;MACRkD,UAAU;MACVoE,SAAS;MACTb,SAAS;MACTC,WAAW;MACXhD,WAAW;MACX6D,UAAU;MACVZ,WAAW;MACXhD,YAAY;MACZ8B,KAAK;MACLC,KAAK;MACLC,IAAI;MACJC,MAAM;MACNC,MAAM;MACNC,MAAM;MACNC,SAAS;MACTC,SAAS;MACTC,OAAO;MACPC,WAAW;MACXvH,IAAI;MACJF,eAAe;MACfkD;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}