{"ast":null,"code":"export default {\n  data() {\n    return {\n      formattedDate: \"\",\n      formattedOptions: \"\"\n    };\n  },\n  props: {\n    address: String,\n    input: Number,\n    apartment: Number,\n    floor: Number,\n    day: String,\n    year: Number,\n    time: String,\n    payment: String,\n    totalPrice: Number,\n    change: String,\n    regularSticks: Number,\n    animals: э,\n    options: Array,\n    note: String\n  },\n  methods: {\n    dateFormat(dayDate, yearDate, timeDate) {\n      const [day, month] = dayDate.split(\".\");\n      const [hours, minutes] = timeDate.split(\":\");\n      const date = new Date(yearDate, month - 1, day, hours, minutes);\n      const formattedTime = date.toLocaleTimeString(\"ru-RU\", {\n        hour: \"numeric\",\n        minute: \"2-digit\"\n      });\n      const months = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\n      this.formattedDate = [`${date.getDate()} ${months[date.getMonth()]}`, `${formattedTime}`];\n    },\n    optionFormat(animals, optionsDoor) {\n      if (animals.length > 0) {\n        const dog = animals.find(item => item === \"dog\") ? \"У меня есть собака.\" : \"\";\n        const cat = animals.find(item => item === \"cat\") ? \"У меня есть кошка.\" : \"\";\n        this.formattedOptions = `${dog ? dog + \" \" : \"\"}${cat ? cat + \" \" : \"\"}`;\n      }\n      if (optionsDoor.length > 0) {\n        this.formattedOptions += optionsDoor.join(\". \") + \".\";\n      }\n    }\n  },\n  mounted() {\n    // this.dateFormat(this.order.day, this.order.year, this.order.time);\n    this.optionFormat(this.animals, this.options);\n  }\n};","map":{"version":3,"names":["data","formattedDate","formattedOptions","props","address","String","input","Number","apartment","floor","day","year","time","payment","totalPrice","change","regularSticks","animals","э","options","Array","note","methods","dateFormat","dayDate","yearDate","timeDate","month","split","hours","minutes","date","Date","formattedTime","toLocaleTimeString","hour","minute","months","getDate","getMonth","optionFormat","optionsDoor","length","dog","find","item","cat","join","mounted"],"sources":["C:\\gitPages\\rol-shop\\src\\components\\history\\InfoDelivery.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h3 class=\"success__top-title\">Информация о доставке</h3>\r\n    <ul class=\"success__list\">\r\n      <li class=\"success__list-item\">\r\n        <p class=\"success__list-name\">Адрес:</p>\r\n        <p class=\"success__list-value\">\r\n          {{ address }}{{ input ? \", подъезд \" + input : \"\"\r\n          }}{{ apartment ? \", кв \" + apartment : \"\" }}{{ floor ? \", этаж \" + floor : \"\" }}\r\n        </p>\r\n      </li>\r\n      <li class=\"success__list-item\">\r\n        <p class=\"success__list-name\">Время:</p>\r\n        <p class=\"success__list-value\">{{ formattedDate[0] }} {{ formattedDate[1] }}</p>\r\n      </li>\r\n      <li class=\"success__list-item\">\r\n        <p class=\"success__list-name\">Способ оплаты:</p>\r\n        <p class=\"success__list-value\">{{ payment }}</p>\r\n      </li>\r\n      <li class=\"success__list-item\">\r\n        <p class=\"success__list-name\">Сумма к оплате:</p>\r\n        <p class=\"success__list-value\">{{ totalPrice }} грн</p>\r\n      </li>\r\n      <li v-if=\"Number.isInteger(change)\" class=\"success__list-item\">\r\n        <p class=\"success__list-name\">Сдача с</p>\r\n        <p class=\"success__list-value\">{{ change }} грн</p>\r\n      </li>\r\n      <li v-if=\"regularSticks\" class=\"success__list-item\">\r\n        <p class=\"success__list-name\">Кол-во человек:</p>\r\n        <p class=\"success__list-value\">{{ regularSticks }}</p>\r\n      </li>\r\n    </ul>\r\n    <div v-if=\"note || formattedOptions\" class=\"success__options\">\r\n      <p class=\"success__options-title\">Примечание:</p>\r\n      <p class=\"success__options-text\">\r\n        {{ note ? note + \". \" : \"\" }}{{ formattedOptions }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formattedDate: \"\",\r\n      formattedOptions: \"\",\r\n    };\r\n  },\r\n  props: {\r\n    address: String,\r\n    input: Number,\r\n    apartment: Number,\r\n    floor: Number,\r\n    day: String,\r\n    year: Number,\r\n    time: String,\r\n    payment: String,\r\n    totalPrice: Number,\r\n    change: String,\r\n    regularSticks: Number,\r\n    animals: э,\r\n    options: Array,\r\n    note: String\r\n  },\r\n  methods: {\r\n    dateFormat(dayDate, yearDate, timeDate) {\r\n      const [day, month] = dayDate.split(\".\");\r\n      const [hours, minutes] = timeDate.split(\":\");\r\n      const date = new Date(yearDate, month - 1, day, hours, minutes);\r\n      const formattedTime = date.toLocaleTimeString(\"ru-RU\", {\r\n        hour: \"numeric\",\r\n        minute: \"2-digit\",\r\n      });\r\n      const months = [\r\n        \"января\",\r\n        \"февраля\",\r\n        \"марта\",\r\n        \"апреля\",\r\n        \"мая\",\r\n        \"июня\",\r\n        \"июля\",\r\n        \"августа\",\r\n        \"сентября\",\r\n        \"октября\",\r\n        \"ноября\",\r\n        \"декабря\",\r\n      ];\r\n      this.formattedDate = [\r\n        `${date.getDate()} ${months[date.getMonth()]}`,\r\n        `${formattedTime}`,\r\n      ];\r\n    },\r\n    optionFormat(animals, optionsDoor) {\r\n      if (animals.length > 0) {\r\n        const dog = animals.find((item) => item === \"dog\") ? \"У меня есть собака.\" : \"\";\r\n        const cat = animals.find((item) => item === \"cat\") ? \"У меня есть кошка.\" : \"\";\r\n        this.formattedOptions = `${dog ? dog + \" \" : \"\"}${cat ? cat + \" \" : \"\"}`;\r\n      }\r\n      if (optionsDoor.length > 0) {\r\n        this.formattedOptions += optionsDoor.join(\". \") + \".\";\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // this.dateFormat(this.order.day, this.order.year, this.order.time);\r\n    this.optionFormat(this.animals, this.options);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"],"mappings":"AA0CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLC,OAAO,EAAEC,MAAM;IACfC,KAAK,EAAEC,MAAM;IACbC,SAAS,EAAED,MAAM;IACjBE,KAAK,EAAEF,MAAM;IACbG,GAAG,EAAEL,MAAM;IACXM,IAAI,EAAEJ,MAAM;IACZK,IAAI,EAAEP,MAAM;IACZQ,OAAO,EAAER,MAAM;IACfS,UAAU,EAAEP,MAAM;IAClBQ,MAAM,EAAEV,MAAM;IACdW,aAAa,EAAET,MAAM;IACrBU,OAAO,EAAEC,CAAC;IACVC,OAAO,EAAEC,KAAK;IACdC,IAAI,EAAEhB;EACR,CAAC;EACDiB,OAAO,EAAE;IACPC,UAAUA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MACtC,MAAM,CAAChB,GAAG,EAAEiB,KAAK,IAAIH,OAAO,CAACI,KAAK,CAAC,GAAG,CAAC;MACvC,MAAM,CAACC,KAAK,EAAEC,OAAO,IAAIJ,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;MAC5C,MAAMG,IAAG,GAAI,IAAIC,IAAI,CAACP,QAAQ,EAAEE,KAAI,GAAI,CAAC,EAAEjB,GAAG,EAAEmB,KAAK,EAAEC,OAAO,CAAC;MAC/D,MAAMG,aAAY,GAAIF,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;QACrDC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMC,MAAK,GAAI,CACb,QAAQ,EACR,SAAS,EACT,OAAO,EACP,QAAQ,EACR,KAAK,EACL,MAAM,EACN,MAAM,EACN,SAAS,EACT,UAAU,EACV,SAAS,EACT,QAAQ,EACR,SAAS,CACV;MACD,IAAI,CAACpC,aAAY,GAAI,CAClB,GAAE8B,IAAI,CAACO,OAAO,CAAC,CAAC,IAAID,MAAM,CAACN,IAAI,CAACQ,QAAQ,CAAC,CAAC,CAAE,EAAC,EAC7C,GAAEN,aAAc,EAAC,CACnB;IACH,CAAC;IACDO,YAAYA,CAACvB,OAAO,EAAEwB,WAAW,EAAE;MACjC,IAAIxB,OAAO,CAACyB,MAAK,GAAI,CAAC,EAAE;QACtB,MAAMC,GAAE,GAAI1B,OAAO,CAAC2B,IAAI,CAAEC,IAAI,IAAKA,IAAG,KAAM,KAAK,IAAI,qBAAoB,GAAI,EAAE;QAC/E,MAAMC,GAAE,GAAI7B,OAAO,CAAC2B,IAAI,CAAEC,IAAI,IAAKA,IAAG,KAAM,KAAK,IAAI,oBAAmB,GAAI,EAAE;QAC9E,IAAI,CAAC3C,gBAAe,GAAK,GAAEyC,GAAE,GAAIA,GAAE,GAAI,GAAE,GAAI,EAAG,GAAEG,GAAE,GAAIA,GAAE,GAAI,GAAE,GAAI,EAAG,EAAC;MAC1E;MACA,IAAIL,WAAW,CAACC,MAAK,GAAI,CAAC,EAAE;QAC1B,IAAI,CAACxC,gBAAe,IAAKuC,WAAW,CAACM,IAAI,CAAC,IAAI,IAAI,GAAG;MACvD;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACR,YAAY,CAAC,IAAI,CAACvB,OAAO,EAAE,IAAI,CAACE,OAAO,CAAC;EAC/C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}