{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/img/icon/search.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-e20f8328\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"destination\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"destination-title\"\n}, \"Добавление адреса доставки\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"destination__inner\"\n};\nconst _hoisted_5 = {\n  class: \"destination__form\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"destination__form-title\"\n}, [/*#__PURE__*/_createTextVNode(\" Введите адрес \"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"или выберите на карте \")], -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"address\"\n};\nconst _hoisted_9 = {\n  class: \"destination__list\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"destination__list-title\"\n}, \"Номер дома\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"destination__list-title\"\n}, \"Подъезд\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"destination__list-title\"\n}, \"Этаж\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"destination__list-title\"\n}, \"Квартира\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"custom-loading\"\n}, [/*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"circular\",\n  viewBox: \"-10, -10, 50, 50\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  class: \"path\",\n  d: \"\\r\\n                          M 30 15\\r\\n                          L 28 17\\r\\n                          M 25.61 25.61\\r\\n                          A 15 15, 0, 0, 1, 15 30\\r\\n                          A 15 15, 0, 1, 1, 27.99 7.5\\r\\n                          L 15 15\\r\\n                        \",\n  style: {\n    \"stroke-width\": \"4px\",\n    \"fill\": \"rgba(0, 0, 0, 0)\"\n  }\n})])], -1 /* HOISTED */));\nconst _hoisted_15 = {\n  class: \"destination__map\"\n};\nexport function render(_ctx, _cache) {\n  const _component_Crumbs = _resolveComponent(\"Crumbs\");\n  const _component_el_autocomplete = _resolveComponent(\"el-autocomplete\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_Map = _resolveComponent(\"Map\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Crumbs, {\n    paths: _ctx.paths,\n    class: \"crumbs\"\n  }, null, 8 /* PROPS */, [\"paths\"]), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createVNode(_component_el_form, {\n    ref: \"ruleFormRef\",\n    model: _ctx.form\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      prop: \"address\",\n      rules: _ctx.rules.address\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_autocomplete, {\n        modelValue: _ctx.form.address,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.form.address = $event),\n        \"fetch-suggestions\": _ctx.fetchAddressSelect,\n        \"trigger-on-focus\": false,\n        placeholder: \"Введите адрес\",\n        onSelect: _ctx.handleSelect,\n        debounce: 1000,\n        clearable: \"\",\n        \"fit-input-width\": \"\",\n        \"popper-class\": \"my-autocomplete\",\n        class: \"destination__form-search\"\n      }, {\n        prefix: _withCtx(() => [_hoisted_7]),\n        default: _withCtx(({\n          item\n        }) => [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(item.address), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"fetch-suggestions\", \"onSelect\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"rules\"]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_form_item, {\n      prop: \"house\"\n    }, {\n      default: _withCtx(() => [_hoisted_10, _createVNode(_component_el_input, {\n        class: \"destination__list-input\",\n        placeholder: \"Номер\",\n        modelValue: _ctx.form.house,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.form.house = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"input\"\n    }, {\n      default: _withCtx(() => [_hoisted_11, _createVNode(_component_el_input, {\n        class: \"destination__list-input\",\n        placeholder: \"Номер\",\n        modelValue: _ctx.form.input,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.form.input = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"floor\"\n    }, {\n      default: _withCtx(() => [_hoisted_12, _createVNode(_component_el_input, {\n        class: \"destination__list-input\",\n        placeholder: \"Номер\",\n        modelValue: _ctx.form.floor,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.form.floor = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"apartment\"\n    }, {\n      default: _withCtx(() => [_hoisted_13, _createVNode(_component_el_input, {\n        class: \"destination__list-input\",\n        placeholder: \"Номер\",\n        modelValue: _ctx.form.apartment,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.form.apartment = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        class: \"destination__btn\",\n        color: \"#00cc2d\",\n        onClick: _cache[5] || (_cache[5] = $event => _ctx.sumbitForm(_ctx.ruleFormRef)),\n        loading: _ctx.loading || _ctx.loadingDeliveryCheck || _ctx.loadingAddress || _ctx.loadingGeocoder,\n        disabled: _ctx.loading || _ctx.loadingDeliveryCheck || _ctx.loadingAddress || _ctx.loadingGeocoder\n      }, {\n        loading: _withCtx(() => [_hoisted_14]),\n        default: _withCtx(() => [_createTextVNode(\" \" + _toDisplayString(_ctx.loadingDeliveryCheck || _ctx.loadingAddress ? \"Проверка адреса\" : _ctx.loading ? \"Идет отправка\" : \"Сохранить адрес\"), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\", \"disabled\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]), _createElementVNode(\"div\", _hoisted_15, [_createVNode(_component_Map, {\n    geocoderCoord: _ctx.geocoderCoord,\n    ref: \"Map\"\n  }, null, 8 /* PROPS */, [\"geocoderCoord\"])])])])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","_createTextVNode","src","alt","viewBox","d","style","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_Crumbs","paths","_ctx","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_component_el_form","ref","model","form","default","_withCtx","_component_el_form_item","prop","rules","address","_component_el_autocomplete","modelValue","_cache","$event","fetchAddressSelect","placeholder","onSelect","handleSelect","debounce","clearable","prefix","_hoisted_7","item","_hoisted_8","_toDisplayString","_","_hoisted_9","_hoisted_10","_component_el_input","house","_hoisted_11","input","_hoisted_12","floor","_hoisted_13","apartment","_component_el_button","color","onClick","sumbitForm","ruleFormRef","loading","loadingDeliveryCheck","loadingAddress","loadingGeocoder","disabled","_hoisted_14","_hoisted_15","_component_Map","geocoderCoord"],"sources":["C:\\gitPages\\rol-shop\\src\\pages\\AddressMap.vue"],"sourcesContent":["<template>\r\n  <div class=\"destination\">\r\n    <div class=\"container\">\r\n      <Crumbs :paths=\"paths\" class=\"crumbs\" />\r\n\r\n      <h1 class=\"destination-title\">Добавление адреса доставки</h1>\r\n      <div class=\"destination__inner\">\r\n        <div class=\"destination__form\">\r\n          <h6 class=\"destination__form-title\">\r\n            Введите адрес <br />или выберите на карте\r\n          </h6>\r\n          <el-form ref=\"ruleFormRef\" :model=\"form\">\r\n            <el-form-item prop=\"address\" :rules=\"rules.address\">\r\n              <el-autocomplete\r\n                v-model=\"form.address\"\r\n                :fetch-suggestions=\"fetchAddressSelect\"\r\n                :trigger-on-focus=\"false\"\r\n                placeholder=\"Введите адрес\"\r\n                @select=\"handleSelect\"\r\n                :debounce=\"1000\"\r\n                clearable\r\n                fit-input-width\r\n                popper-class=\"my-autocomplete\"\r\n                class=\"destination__form-search\"\r\n              >\r\n                <template #prefix>\r\n                  <img src=\"@/img/icon/search.svg\" alt=\"\" />\r\n                </template>\r\n                <template #default=\"{ item }\">\r\n                  <div class=\"address\">{{ item.address }}</div>\r\n                </template>\r\n              </el-autocomplete>\r\n            </el-form-item>\r\n            <div class=\"destination__list\">\r\n              <el-form-item prop=\"house\">\r\n                <p class=\"destination__list-title\">Номер дома</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.house\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item prop=\"input\">\r\n                <p class=\"destination__list-title\">Подъезд</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.input\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item prop=\"floor\">\r\n                <p class=\"destination__list-title\">Этаж</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.floor\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item prop=\"apartment\">\r\n                <p class=\"destination__list-title\">Квартира</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.apartment\"\r\n                />\r\n              </el-form-item>\r\n            </div>\r\n            <el-form-item>\r\n              <el-button\r\n                class=\"destination__btn\"\r\n                color=\"#00cc2d\"\r\n                @click=\"sumbitForm(ruleFormRef)\"\r\n                :loading=\"\r\n                  loading || loadingDeliveryCheck || loadingAddress || loadingGeocoder\r\n                \"\r\n                :disabled=\"\r\n                  loading || loadingDeliveryCheck || loadingAddress || loadingGeocoder\r\n                \"\r\n              >\r\n                <template #loading>\r\n                  <div class=\"custom-loading\">\r\n                    <svg class=\"circular\" viewBox=\"-10, -10, 50, 50\">\r\n                      <path\r\n                        class=\"path\"\r\n                        d=\"\r\n                          M 30 15\r\n                          L 28 17\r\n                          M 25.61 25.61\r\n                          A 15 15, 0, 0, 1, 15 30\r\n                          A 15 15, 0, 1, 1, 27.99 7.5\r\n                          L 15 15\r\n                        \"\r\n                        style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </template>\r\n                {{\r\n                  loadingDeliveryCheck || loadingAddress\r\n                    ? \"Проверка адреса\"\r\n                    : loading\r\n                    ? \"Идет отправка\"\r\n                    : \"Сохранить адрес\"\r\n                }}\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n\r\n        <div class=\"destination__map\">\r\n          <Map :geocoderCoord=\"geocoderCoord\" ref=\"Map\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, inject } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { useStore, mapState, mapMutations } from \"vuex\";\r\nimport { ElNotification } from \"element-plus\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      paths: [\r\n        { name: \"Профиль\", path: \"/rol-shop/profile\" },\r\n        { name: \"Адрес доставки\", path: \"/rol-shop/profile/address\" },\r\n        { name: \"Добавление адреса доставки\", path: \"/rol-shop/map\" },\r\n      ],\r\n      result: [],\r\n      rules: {\r\n        address: [\r\n          { required: true, message: \"Нужно заполнить!\", trigger: \"blur\" },\r\n          { min: 5, message: \"Слишком короткий!\", trigger: \"blur\" },\r\n          { validator: this.checkGeo, trigger: \"submit\" },\r\n          { validator: this.checkSelect, trigger: \"submit\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapMutations({\r\n      setPaths: \"crumbs/setPaths\",\r\n    }),\r\n    async fetchAddressSelect(value, cb) {\r\n      try {\r\n        this.checkFromSelect = false;\r\n        if (value) {\r\n          const { data } = await axios.get(\r\n            `https://suggest-maps.yandex.ru/v1/suggest?apikey=00748542-2e0b-439d-864b-98b4baac2c5f&text=${value}&bbox=${this.area}&lang=ru_RU&strict_bounds=1&print_address=1`\r\n          );\r\n          this.result = data.results.map((item) => ({\r\n            address: item.address.formatted_address,\r\n            house: item.address.component.find((pl) => pl.kind == \"HOUSE\")\r\n              ? item.address.component.find((pl) => pl.kind == \"HOUSE\").name\r\n              : \"\",\r\n            city: item.address.component.find((pl) => pl.kind == \"LOCALITY\")\r\n              ? item.address.component.find((pl) => pl.kind == \"LOCALITY\").name\r\n              : \"\",\r\n            miniAddress: item.address.component.filter((item) =>\r\n              [\"HOUSE\", \"STREET\", \"VEGETATION\", \"DISTRICT\", \"METRO\"].includes(\r\n                item.kind[0]\r\n              )\r\n            ),\r\n          }));\r\n          // возвращение данных\r\n          cb(this.result);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    async fetchAddress() {\r\n      let apiRes = null;\r\n      try {\r\n        const { data } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/address`);\r\n\r\n        this.address = data;\r\n      } catch (err) {\r\n        apiRes = err.response.status;\r\n      } finally {\r\n        if (apiRes == 404) {\r\n          this.$router.push(\"/rol-shop/404\");\r\n        }\r\n      }\r\n    },\r\n    async postAddress() {\r\n      let apiRes = null;\r\n      try {\r\n        this.loading = true;\r\n        let joinAddress = this.miniAddress.map((item) => item.name).join(\", \");\r\n\r\n        if (\r\n          !this.repeatAddress(\r\n            joinAddress,\r\n            this.form.house,\r\n            this.form.input,\r\n            this.form.floor,\r\n            this.form.apartment,\r\n            this.city\r\n          )\r\n        ) {\r\n          const { data } = await axios.post(\r\n            `https://c2ff7a8de0a119c8.mokky.dev/address`,\r\n            {\r\n              address: joinAddress,\r\n              house: this.form.house,\r\n              input: this.form.input,\r\n              floor: this.form.floor,\r\n              apartment: this.form.apartment,\r\n              city: this.city,\r\n            }\r\n          );\r\n        } else {\r\n          // notif\r\n          this.openNotif();\r\n        }\r\n\r\n        this.form.address = \"\";\r\n        this.form.house = \"\";\r\n        this.form.input = \"\";\r\n        this.form.floor = \"\";\r\n        this.form.apartment = \"\";\r\n      } catch (err) {\r\n        apiRes = err.response.status;\r\n      } finally {\r\n        this.loading = false;\r\n        this.fetchAddress();\r\n        if (apiRes == 404) {\r\n          this.$router.push(\"/rol-shop/404\");\r\n        }\r\n        // notif\r\n        this.openNotif(\"Ошибка\", );\r\n      }\r\n    },\r\n    handleSelect(item) {\r\n      // заполнение полей\r\n      this.form.address = item.address;\r\n      this.form.house = item.house;\r\n\r\n      // сохранение города\r\n      this.city = item.city;\r\n\r\n      // сохранение адреса без города\r\n      this.miniAddress = item.miniAddress;\r\n\r\n      // перемещение по карте\r\n      this.$refs.Map.moveMap(item.address);\r\n\r\n      // проверка что адрес был выбран из списка или карты\r\n      this.checkFromSelect = true;\r\n    },\r\n    sumbitForm(forName) {\r\n      forName.validate((valid) => {\r\n        if (valid) {\r\n          this.postAddress();\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    repeatAddress(address, house, input, floor, apartment, city) {\r\n      for (let item of this.address) {\r\n        if (\r\n          item.address === address &&\r\n          item.house === house &&\r\n          item.input === input &&\r\n          item.floor === floor &&\r\n          item.apartment === apartment &&\r\n          item.city === city\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    openNotif(title, message) {\r\n      ElNotification.success({\r\n        title: ,\r\n        message: \"Ваш адрес успешно сохранен!\",\r\n        showClose: false,\r\n      });\r\n    },\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next((vm) => {\r\n      vm.setPaths(vm.paths);\r\n    });\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      loadingDeliveryCheck: (state) => state.map.loading,\r\n      loadingAddress: (state) => state.map.loadingAddress,\r\n    }),\r\n  },\r\n  mounted() {\r\n    this.fetchAddress();\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    var arrayCoord = computed(() => store.state.map.arrayCoord);\r\n    var deliveryPossible = computed(() => store.state.map.deliveryPossible);\r\n    const { area, address } = inject(\"address\");\r\n    const form = ref({\r\n      address: \"\",\r\n      house: \"\",\r\n      input: \"\",\r\n      floor: \"\",\r\n      apartment: \"\",\r\n    });\r\n    const ruleFormRef = ref();\r\n    const loadingGeocoder = ref(false);\r\n    var checkFromSelect = ref(false);\r\n    const city = ref();\r\n    const miniAddress = ref();\r\n\r\n    const geocoderCoord = async (lat, long) => {\r\n      try {\r\n        loadingGeocoder.value = true;\r\n\r\n        form.value.address = \"\";\r\n        form.value.house = \"\";\r\n\r\n        const { data } = await axios.get(\r\n          `https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${lat},${long}&format=json&lang=ru_RU`\r\n        );\r\n\r\n        const path =\r\n          data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty\r\n            .GeocoderMetaData;\r\n\r\n        // заполнение полей адреса и дом\r\n        if (path.kind == \"house\") {\r\n          form.value.house = path.Address.Components.find(\r\n            (item) => item.kind == \"house\"\r\n          ).name;\r\n        }\r\n        const filteredArray = path.Address.Components.filter((item) =>\r\n          [\r\n            \"street\",\r\n            \"metro\",\r\n            \"district\",\r\n            \"area\",\r\n            \"province\",\r\n            \"railway_station\",\r\n            \"station\",\r\n            \"vegetation\",\r\n            \"other\",\r\n            \"house\",\r\n          ].includes(item.kind)\r\n        );\r\n        const names = filteredArray.map((item) => item.name).join(\", \");\r\n        // адрес с карты в инпут\r\n        form.value.address = names;\r\n\r\n        // город\r\n        let isCity = path.Address.Components.filter((item) => item.kind === \"locality\");\r\n        if (isCity.length > 0) {\r\n          city.value = isCity[0].name;\r\n        }\r\n\r\n        // адрес без города\r\n        let isAddress = path.Address.Components.filter((item) =>\r\n          [\r\n            \"street\",\r\n            \"metro\",\r\n            \"district\",\r\n            \"railway_station\",\r\n            \"station\",\r\n            \"vegetation\",\r\n            \"house\",\r\n          ].includes(item.kind)\r\n        );\r\n        if (isAddress.length > 0) {\r\n          miniAddress.value = isAddress;\r\n        }\r\n\r\n        // проверка что адрес был выбран из списка или карты\r\n        checkFromSelect.value = true;\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        loadingGeocoder.value = false;\r\n      }\r\n    };\r\n\r\n    // проверка адреса на доступность для доставки\r\n    const checkGeo = (rule, value, callback) => {\r\n      let possible = false;\r\n      store.dispatch(\"map/geocoderAddress\", value).then(() => {\r\n        store\r\n          .dispatch(\"map/checkAddress\", {\r\n            lat: arrayCoord.value[0],\r\n            long: arrayCoord.value[1],\r\n          })\r\n          .then(() => {\r\n            possible = deliveryPossible.value;\r\n            if (value && !possible) {\r\n              callback(new Error(\"Доставка по этому адресу не осуществляется!\"));\r\n            } else {\r\n              callback();\r\n            }\r\n          });\r\n      });\r\n    };\r\n\r\n    // проверка что адрес был выбран из списка или карты\r\n    const checkSelect = (rule, value, callback) => {\r\n      if (!checkFromSelect.value) {\r\n        callback(new Error(\"Адрес не выбран!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      geocoderCoord,\r\n      form,\r\n      ruleFormRef,\r\n      checkGeo,\r\n      checkSelect,\r\n      loadingGeocoder,\r\n      checkFromSelect,\r\n      city,\r\n      miniAddress,\r\n      area,\r\n      address,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.crumbs {\r\n  margin-bottom: 32px;\r\n}\r\n.destination-title {\r\n  color: var(--grey-dark);\r\n  font-size: 48px;\r\n  font-weight: 700;\r\n  line-height: 133%;\r\n  margin-bottom: 24px;\r\n}\r\n.destination {\r\n  margin-bottom: 64px;\r\n  &__inner {\r\n    display: flex;\r\n    gap: 24px;\r\n  }\r\n\r\n  &__form {\r\n    height: fit-content;\r\n    min-width: 379px;\r\n    max-width: 379px;\r\n    border-radius: $border;\r\n    background-color: var(--white);\r\n    padding: 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 24px;\r\n  }\r\n\r\n  &__form-title {\r\n    color: var(--grey-dark);\r\n    text-align: center;\r\n    font-weight: 500;\r\n  }\r\n\r\n  &__list {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    row-gap: 24px;\r\n    column-gap: 12px;\r\n    margin-top: 24px;\r\n  }\r\n\r\n  &__list-item {\r\n  }\r\n\r\n  &__list-title {\r\n    color: #9e9e9e;\r\n    font-size: 14px;\r\n    line-height: 142%;\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  &__map {\r\n    // flex-grow: 1;\r\n    width: 100%;\r\n    height: 540px;\r\n    border-radius: $border;\r\n    overflow: hidden;\r\n  }\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n.ymaps-2-1-79-map-copyrights-promo {\r\n  display: none;\r\n}\r\n.icon-marker {\r\n  cursor: pointer;\r\n\r\n  width: 57px;\r\n  height: 57px;\r\n  border-radius: 50%;\r\n\r\n  position: relative;\r\n  transform: translate(-50%, -90%);\r\n  &::after {\r\n    content: url(\"@/img/icon/location.svg\");\r\n  }\r\n}\r\n// inputs\r\n.destination__list-input {\r\n  height: 48px;\r\n  width: 100%;\r\n  background: var(--grey-light);\r\n  border-radius: $border;\r\n  color: var(--grey-dark);\r\n  font-weight: 400;\r\n  &::placeholder {\r\n    color: #8f8f8f;\r\n  }\r\n}\r\n// btn\r\n.destination__btn {\r\n  height: 56px;\r\n  padding: 16px 24px;\r\n  color: var(--white);\r\n  font-weight: 500;\r\n  text-align: center;\r\n  border-radius: $border;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  margin-top: 16px;\r\n  transition: $transition;\r\n}\r\n\r\n.el-button {\r\n  --el-button-disabled-bg-color: rgb(185, 185, 185);\r\n}\r\n.el-button.is-disabled,\r\n.el-button.is-disabled:focus,\r\n.el-button.is-disabled:hover {\r\n  background-color: rgb(185, 185, 185);\r\n  border-color: rgb(185, 185, 185);\r\n}\r\n\r\n.destination {\r\n  .el-form-item__content {\r\n    line-height: inherit;\r\n    position: relative;\r\n    font-size: inherit;\r\n  }\r\n\r\n  // autocomplete\r\n  .el-autocomplete {\r\n    width: 100%;\r\n  }\r\n  .el-input {\r\n    height: 48px;\r\n    width: 100%;\r\n    background: var(--grey-light);\r\n    border-radius: $border;\r\n    color: var(--grey-dark);\r\n    font-weight: 400;\r\n  }\r\n  .el-input__wrapper {\r\n    flex-grow: 1;\r\n    padding: 1px 18px;\r\n    background-color: transparent;\r\n    border-radius: $border;\r\n    cursor: text;\r\n    transition: none;\r\n    transform: none;\r\n    box-shadow: none;\r\n    &:hover,\r\n    &.is-focus {\r\n      box-shadow: none;\r\n    }\r\n  }\r\n  .el-input__prefix-inner > :last-child {\r\n    margin-right: 16px;\r\n  }\r\n  .el-input__inner {\r\n    --el-input-inner-height: 100%;\r\n    width: 100%;\r\n    color: var(--grey-dark);\r\n    font-size: 16px;\r\n    height: 100%;\r\n    line-height: 1.5;\r\n  }\r\n  .el-input {\r\n    --el-input-placeholder-color: #8f8f8f;\r\n  }\r\n\r\n  // form\r\n  .el-form-item {\r\n    display: flex;\r\n    --font-size: 14px;\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  // loading\r\n  .el-button .custom-loading .circular {\r\n    margin-right: 6px;\r\n    width: 25px;\r\n    height: 25px;\r\n    animation: loading-rotate 2s linear infinite;\r\n  }\r\n  .el-button .custom-loading .circular .path {\r\n    animation: loading-dash 1.5s ease-in-out infinite;\r\n    stroke-dasharray: 90, 150;\r\n    stroke-dashoffset: 0;\r\n    stroke-width: 2;\r\n    stroke: var(--el-button-text-color);\r\n    stroke-linecap: round;\r\n  }\r\n}\r\n\r\n// dropdown\r\n.el-popper.is-light {\r\n  background: var(--grey-light);\r\n  border: 1px solid #bdbdbd;\r\n}\r\n.el-autocomplete__popper.el-popper {\r\n  box-shadow: none;\r\n}\r\n.el-popper {\r\n  border-radius: $border;\r\n  padding: 0px;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  overflow-wrap: normal;\r\n}\r\n.el-autocomplete-suggestion {\r\n  border-radius: $border;\r\n}\r\n// dropdown контейнер\r\n.el-autocomplete-suggestion__wrap {\r\n  max-height: 280px;\r\n  padding: 0;\r\n  border-radius: $border;\r\n}\r\n.el-autocomplete-suggestion li {\r\n  padding: 10px 20px;\r\n  line-height: 1.5;\r\n  cursor: pointer;\r\n  color: var(--grey-dark);\r\n  font-size: 16px;\r\n  transition: $transition;\r\n  white-space: break-spaces;\r\n  &:not(:last-child) {\r\n    border-bottom: 1px solid #bdbdbd;\r\n  }\r\n  &:hover {\r\n    background-color: #e6e4e4;\r\n  }\r\n}\r\n// очистка поля\r\n.el-input .el-input__clear,\r\n.el-input .el-input__password {\r\n  color: var(--el-input-icon-color);\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n// стрелка\r\n.el-popper__arrow::before {\r\n  width: 10px;\r\n  height: 10px;\r\n  transform: rotate(45deg);\r\n  background: var(--grey-light);\r\n}\r\n.el-popper.is-light .el-popper__arrow::before {\r\n  border: 1px solid #bdbdbd;\r\n  background: var(--grey-light);\r\n}\r\n.el-popper[data-popper-placement^=\"bottom\"] > .el-popper__arrow::before {\r\n  border-top-left-radius: 2px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}