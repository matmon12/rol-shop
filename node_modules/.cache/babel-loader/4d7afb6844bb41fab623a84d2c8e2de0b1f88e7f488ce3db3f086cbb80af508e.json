{"ast":null,"code":"import { ref } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      paths: [{\n        name: \"Адрес доставки\",\n        path: \"/rol-shop/address\"\n      }, {\n        name: \"Добавление адреса доставки\",\n        path: \"/rol-shop/map\"\n      }],\n      result: [],\n      area: \"22.702357,46.966060,39.940511,52.517961\",\n      rules: {\n        address: [{\n          required: true,\n          message: \"Нужно заполнить!\",\n          trigger: \"blur\"\n        }, {\n          min: 5,\n          message: \"Слишком короткий!\",\n          trigger: \"blur\"\n        }],\n        other: [{\n          required: true,\n          message: \"Нужно заполнить!\",\n          trigger: \"blur\"\n        }, {\n          min: 1,\n          max: 5,\n          message: \"Неправильный номер!\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    async fetchAddress(value, cb) {\n      try {\n        if (value) {\n          const {\n            data\n          } = await axios.get(`https://suggest-maps.yandex.ru/v1/suggest?apikey=00748542-2e0b-439d-864b-98b4baac2c5f&text=${value}&bbox=${this.area}&lang=ru_RU&strict_bounds=1&print_address=1`);\n          this.result = data.results.map(item => ({\n            address: item.address.formatted_address,\n            house: item.address.component.find(pl => pl.kind == \"HOUSE\") ? item.address.component.find(pl => pl.kind == \"HOUSE\").name : \"\"\n          }));\n          // возвращение данных\n          cb(this.result);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    handleSelect(item) {\n      // заполнение полей\n      this.form.address = item.address;\n      this.form.house = item.house;\n      this.geocoderAddress(item.address);\n    },\n    sumbitForm(forName) {\n      forName.validate(valid => {\n        if (valid) {\n          alert(\"sumbit\");\n        } else {\n          return false;\n        }\n      });\n    }\n  },\n  mounted() {\n    this.initMap();\n  },\n  setup() {\n    const coord = ref([30.523745, 50.418901]);\n    const zoom = ref(16);\n    const form = ref({\n      address: \"\",\n      house: \"\",\n      input: \"\",\n      floor: \"\",\n      apartment: \"\"\n    });\n    const ruleFormRef = ref();\n    let map, marker;\n    const polygonCoord1 = ref([[30.525609135265174, 50.41581452769492], [30.526797353858758, 50.41704674162194], [30.526598870391656, 50.41866108161345], [30.52590149604774, 50.41975098688669], [30.522425353164497, 50.421245281434295], [30.520730197067063, 50.420923121020905], [30.519861161346252, 50.42113218281552], [30.518546878928944, 50.421085915120884], [30.516867816085664, 50.4219307217831], [30.516213357085984, 50.42147833226991], [30.514341175193604, 50.42149889552497], [30.514306306476406, 50.42091969376908], [30.513816803331178, 50.42012285131241], [30.514151408905786, 50.419628459485686], [30.514855153496086, 50.419490937093364], [30.511780252317603, 50.41692709917943], [30.511058193268894, 50.416591145423126], [30.513336457415182, 50.415518278488875], [30.512651687358204, 50.41437855989807], [30.514337052344967, 50.412067352083284], [30.517937897914575, 50.4115187660733], [30.521717249984505, 50.411127021711366], [30.524810301794076, 50.41173932782978], [30.52592295371987, 50.413128909469826], [30.525609135265174, 50.41581452769492]]);\n    const polygonCoord2 = ref([[30.5098794981063, 50.42628119920888], [30.51226666412955, 50.42715846727746], [30.515678433996502, 50.427624509288435], [30.519663852782916, 50.42687216158533], [30.521460589013188, 50.4251054368052], [30.523487651409056, 50.42316198375982], [30.522434850236454, 50.421248960895035], [30.520720293229566, 50.420928888987], [30.519875737450686, 50.42112499152181], [30.51855433089325, 50.421092218566464], [30.516854434264705, 50.421924601598306], [30.516223597234163, 50.42147820963046], [30.514348058325066, 50.421503913674094], [30.514144210439984, 50.421891186574015], [30.5143856092513, 50.42240012001261], [30.513015000444693, 50.422764252515826], [30.510881303173356, 50.42282294184412], [30.50966711301253, 50.42317672311909], [30.509595183950726, 50.42445807423617], [30.5098794981063, 50.42628119920888]]);\n    const polygonCoord3 = ref([[30.53565310831554, 50.42189449360963], [30.5346124950368, 50.42341715413044], [30.532402522446606, 50.42341918895238], [30.53107248205133, 50.42301200861088], [30.531845628799886, 50.422115385518396], [30.530302017511836, 50.42210424723551], [30.529532223524566, 50.422356143130784], [30.529237180532984, 50.42143423186331], [30.527660041632206, 50.42115319955797], [30.52844324666457, 50.42007703597716], [30.528512984098914, 50.41931959400213], [30.52893409091424, 50.41809086697714], [30.52965962845278, 50.41718858049145], [30.529550328435437, 50.416257570671156], [30.52876611757469, 50.4151750826024], [30.535583789976325, 50.415936340165416], [30.53519461821206, 50.41676940341607], [30.536759561443716, 50.4170076980345], [30.540460276467726, 50.41663327851576], [30.54059901792002, 50.417931489990465], [30.540084033789153, 50.42026211044566], [30.53836742001964, 50.42146850397636], [30.537101417364596, 50.42168784493982], [30.53565310831554, 50.42189449360963]]);\n    const initMap = async () => {\n      await ymaps3.ready;\n      const {\n        YMap,\n        YMapDefaultSchemeLayer,\n        YMapDefaultFeaturesLayer,\n        YMapMarker,\n        YMapFeature,\n        YMapListener,\n        YMapControls,\n        YMapControlButton\n      } = ymaps3;\n      map = new YMap(document.getElementById(\"map\"), {\n        location: {\n          center: coord.value,\n          zoom: zoom.value\n        }\n      });\n\n      // стили\n      const layer = new YMapDefaultSchemeLayer({\n        customization: [{\n          tags: {\n            any: [\"traffic_light\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"entrance\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"road\"],\n            none: [\"road_1\", \"road_2\", \"road_3\", \"road_4\", \"road_5\", \"road_6\", \"road_7\"]\n          },\n          elements: \"label.icon\",\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"building\", \"address\", \"fence\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"transit\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }]\n      });\n      map.addChild(layer);\n      map.addChild(new YMapDefaultFeaturesLayer());\n\n      // маркер\n      const markerElement = document.createElement(\"div\");\n      markerElement.className = \"icon-marker\";\n      marker = new YMapMarker({\n        coordinates: coord.value\n      }, markerElement);\n      map.addChild(marker);\n\n      // полигоны\n      const polygon1 = new YMapFeature({\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [polygonCoord1.value]\n        },\n        style: {\n          stroke: [{\n            color: \"#ffc700\",\n            width: 2\n          }],\n          fill: \"#ffc80059\"\n        }\n      });\n      const polygon2 = new YMapFeature({\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [polygonCoord2.value]\n        },\n        style: {\n          stroke: [{\n            color: \"#55b20b\",\n            width: 2\n          }],\n          fill: \"#56b20b50\"\n        }\n      });\n      const polygon3 = new YMapFeature({\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [polygonCoord3.value]\n        },\n        style: {\n          stroke: [{\n            color: \"#f44837\",\n            width: 2\n          }],\n          fill: \"#f4473752\"\n        }\n      });\n      map.addChild(polygon1);\n      map.addChild(polygon2);\n      map.addChild(polygon3);\n\n      // обработка клика / перемещение по карте по клику\n      function changeMapPosition(location, camera) {\n        map.update({\n          location: {\n            ...location,\n            duration: 1000\n          },\n          camera\n        });\n      }\n      const click = (object, event) => {\n        changeMapPosition({\n          center: [event.coordinates[0], event.coordinates[1]],\n          zoom: zoom.value\n        }, {\n          tilt: Math.PI / 180\n        });\n        coord.value = [event.coordinates[0], event.coordinates[1]];\n        marker.update({\n          coordinates: coord.value\n        });\n        // геокодер\n        geocoderCoord(event.coordinates[0], event.coordinates[1]);\n      };\n      const mapListener = new YMapListener({\n        onClick: click\n      });\n      map.addChild(mapListener);\n    };\n    const geocoderCoord = async (lat, long) => {\n      try {\n        form.value.address = \"\";\n        form.value.house = \"\";\n        const {\n          data\n        } = await axios.get(`https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${lat},${long}&format=json&lang=ru_RU`);\n        const path = data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData;\n\n        // заполнение полей адреса и дом\n        if (path.kind == \"house\") {\n          form.value.house = path.Address.Components.find(item => item.kind == \"house\").name;\n        }\n        const filteredArray = path.Address.Components.filter(item => [\"street\", \"metro\", \"district\", \"area\", \"province\", \"railway_station\", \"station\", \"vegetation\", \"other\", \"house\"].includes(item.kind));\n        const names = filteredArray.map(item => item.name).join(\", \");\n        form.value.address = names;\n        // адрес с карты в инпут\n        form.value.name = form.value.address;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const geocoderAddress = async item => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${item}&format=json&lang=ru_RU`);\n        const address = data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;\n        const arrayCoord = address.split(\" \");\n\n        // перемещение по карте\n        map.update({\n          location: {\n            ...{\n              center: [arrayCoord[0], arrayCoord[1]],\n              zoom: zoom.value\n            },\n            duration: 1000\n          },\n          tilt: Math.PI / 180\n        });\n        coord.value = [arrayCoord[0], arrayCoord[1]];\n        marker.update({\n          coordinates: coord.value\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    return {\n      initMap,\n      map,\n      marker,\n      coord,\n      zoom,\n      geocoderAddress,\n      form,\n      ruleFormRef\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","data","paths","name","path","result","area","rules","address","required","message","trigger","min","other","max","methods","fetchAddress","value","cb","get","results","map","item","formatted_address","house","component","find","pl","kind","err","console","log","handleSelect","form","geocoderAddress","sumbitForm","forName","validate","valid","alert","mounted","initMap","setup","coord","zoom","input","floor","apartment","ruleFormRef","marker","polygonCoord1","polygonCoord2","polygonCoord3","ymaps3","ready","YMap","YMapDefaultSchemeLayer","YMapDefaultFeaturesLayer","YMapMarker","YMapFeature","YMapListener","YMapControls","YMapControlButton","document","getElementById","location","center","layer","customization","tags","any","stylers","visibility","none","elements","addChild","markerElement","createElement","className","coordinates","polygon1","geometry","type","style","stroke","color","width","fill","polygon2","polygon3","changeMapPosition","camera","update","duration","click","object","event","tilt","Math","PI","geocoderCoord","mapListener","onClick","lat","long","response","GeoObjectCollection","featureMember","GeoObject","metaDataProperty","GeocoderMetaData","Address","Components","filteredArray","filter","includes","names","join","Point","pos","arrayCoord","split"],"sources":["C:\\gitPages\\rol-shop\\src\\pages\\AddressMap.vue"],"sourcesContent":["<template>\r\n  <div class=\"destination\">\r\n    <div class=\"container\">\r\n      <Crumbs :paths=\"paths\" class=\"crumbs\" />\r\n\r\n      <h1 class=\"destination-title\">Добавление адреса доставки</h1>\r\n      <div class=\"destination__inner\">\r\n        <div class=\"destination__form\">\r\n          <h6 class=\"destination__form-title\">\r\n            Введите адрес <br />или выберите на карте\r\n          </h6>\r\n          <el-form ref=\"ruleFormRef\" :model=\"form\">\r\n            <el-form-item prop=\"address\" :rules=\"rules.address\">\r\n              <el-autocomplete\r\n                v-model=\"form.address\"\r\n                :fetch-suggestions=\"fetchAddress\"\r\n                :trigger-on-focus=\"false\"\r\n                placeholder=\"Введите адрес\"\r\n                @select=\"handleSelect\"\r\n                @change=\"cha\"\r\n                :debounce=\"1000\"\r\n                clearable\r\n                fit-input-width\r\n                popper-class=\"my-autocomplete\"\r\n                class=\"destination__form-search\"\r\n              >\r\n                <template #prefix>\r\n                  <img src=\"@/img/icon/search.svg\" alt=\"\" />\r\n                </template>\r\n                <template #default=\"{ item }\">\r\n                  <div class=\"address\">{{ item.address }}</div>\r\n                </template>\r\n              </el-autocomplete>\r\n            </el-form-item>\r\n            <div class=\"destination__list\">\r\n              <el-form-item prop=\"house\" :rules=\"rules.other\">\r\n                <p class=\"destination__list-title\">Номер дома</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.house\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item prop=\"input\" :rules=\"rules.other\">\r\n                <p class=\"destination__list-title\">Подъезд</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.input\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item prop=\"floor\" :rules=\"rules.other\">\r\n                <p class=\"destination__list-title\">Этаж</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.floor\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item prop=\"apartment\" :rules=\"rules.other\">\r\n                <p class=\"destination__list-title\">Квартира</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.apartment\"\r\n                />\r\n              </el-form-item>\r\n            </div>\r\n            <el-form-item>\r\n              <el-button class=\"destination__btn\" @click=\"sumbitForm(ruleFormRef)\">\r\n                Сохранить адрес\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n\r\n        <div class=\"destination__map\">\r\n          <div id=\"map\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      paths: [\r\n        { name: \"Адрес доставки\", path: \"/rol-shop/address\" },\r\n        { name: \"Добавление адреса доставки\", path: \"/rol-shop/map\" },\r\n      ],\r\n      result: [],\r\n      area: \"22.702357,46.966060,39.940511,52.517961\",\r\n      rules: {\r\n        address: [\r\n          { required: true, message: \"Нужно заполнить!\", trigger: \"blur\" },\r\n          { min: 5, message: \"Слишком короткий!\", trigger: \"blur\" },\r\n        ],\r\n        other: [\r\n          { required: true, message: \"Нужно заполнить!\", trigger: \"blur\" },\r\n          { min: 1, max: 5, message: \"Неправильный номер!\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchAddress(value, cb) {\r\n      try {\r\n        if (value) {\r\n          const { data } = await axios.get(\r\n            `https://suggest-maps.yandex.ru/v1/suggest?apikey=00748542-2e0b-439d-864b-98b4baac2c5f&text=${value}&bbox=${this.area}&lang=ru_RU&strict_bounds=1&print_address=1`\r\n          );\r\n          this.result = data.results.map((item) => ({\r\n            address: item.address.formatted_address,\r\n            house: item.address.component.find((pl) => pl.kind == \"HOUSE\")\r\n              ? item.address.component.find((pl) => pl.kind == \"HOUSE\").name\r\n              : \"\",\r\n          }));\r\n          // возвращение данных\r\n          cb(this.result);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    handleSelect(item) {\r\n      // заполнение полей\r\n      this.form.address = item.address;\r\n      this.form.house = item.house;\r\n\r\n      this.geocoderAddress(item.address);\r\n    },\r\n    sumbitForm(forName) {\r\n      forName.validate((valid) => {\r\n        if (valid) {\r\n          alert(\"sumbit\");\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  setup() {\r\n    const coord = ref([30.523745, 50.418901]);\r\n    const zoom = ref(16);\r\n    const form = ref({\r\n      address: \"\",\r\n      house: \"\",\r\n      input: \"\",\r\n      floor: \"\",\r\n      apartment: \"\",\r\n    });\r\n    const ruleFormRef = ref();\r\n    let map, marker;\r\n    const polygonCoord1 = ref([\r\n      [30.525609135265174, 50.41581452769492],\r\n      [30.526797353858758, 50.41704674162194],\r\n      [30.526598870391656, 50.41866108161345],\r\n      [30.52590149604774, 50.41975098688669],\r\n      [30.522425353164497, 50.421245281434295],\r\n      [30.520730197067063, 50.420923121020905],\r\n      [30.519861161346252, 50.42113218281552],\r\n      [30.518546878928944, 50.421085915120884],\r\n      [30.516867816085664, 50.4219307217831],\r\n      [30.516213357085984, 50.42147833226991],\r\n      [30.514341175193604, 50.42149889552497],\r\n      [30.514306306476406, 50.42091969376908],\r\n      [30.513816803331178, 50.42012285131241],\r\n      [30.514151408905786, 50.419628459485686],\r\n      [30.514855153496086, 50.419490937093364],\r\n      [30.511780252317603, 50.41692709917943],\r\n      [30.511058193268894, 50.416591145423126],\r\n      [30.513336457415182, 50.415518278488875],\r\n      [30.512651687358204, 50.41437855989807],\r\n      [30.514337052344967, 50.412067352083284],\r\n      [30.517937897914575, 50.4115187660733],\r\n      [30.521717249984505, 50.411127021711366],\r\n      [30.524810301794076, 50.41173932782978],\r\n      [30.52592295371987, 50.413128909469826],\r\n      [30.525609135265174, 50.41581452769492],\r\n    ]);\r\n    const polygonCoord2 = ref([\r\n      [30.5098794981063, 50.42628119920888],\r\n      [30.51226666412955, 50.42715846727746],\r\n      [30.515678433996502, 50.427624509288435],\r\n      [30.519663852782916, 50.42687216158533],\r\n      [30.521460589013188, 50.4251054368052],\r\n      [30.523487651409056, 50.42316198375982],\r\n      [30.522434850236454, 50.421248960895035],\r\n      [30.520720293229566, 50.420928888987],\r\n      [30.519875737450686, 50.42112499152181],\r\n      [30.51855433089325, 50.421092218566464],\r\n      [30.516854434264705, 50.421924601598306],\r\n      [30.516223597234163, 50.42147820963046],\r\n      [30.514348058325066, 50.421503913674094],\r\n      [30.514144210439984, 50.421891186574015],\r\n      [30.5143856092513, 50.42240012001261],\r\n      [30.513015000444693, 50.422764252515826],\r\n      [30.510881303173356, 50.42282294184412],\r\n      [30.50966711301253, 50.42317672311909],\r\n      [30.509595183950726, 50.42445807423617],\r\n      [30.5098794981063, 50.42628119920888],\r\n    ]);\r\n    const polygonCoord3 = ref([\r\n      [30.53565310831554, 50.42189449360963],\r\n      [30.5346124950368, 50.42341715413044],\r\n      [30.532402522446606, 50.42341918895238],\r\n      [30.53107248205133, 50.42301200861088],\r\n      [30.531845628799886, 50.422115385518396],\r\n      [30.530302017511836, 50.42210424723551],\r\n      [30.529532223524566, 50.422356143130784],\r\n      [30.529237180532984, 50.42143423186331],\r\n      [30.527660041632206, 50.42115319955797],\r\n      [30.52844324666457, 50.42007703597716],\r\n      [30.528512984098914, 50.41931959400213],\r\n      [30.52893409091424, 50.41809086697714],\r\n      [30.52965962845278, 50.41718858049145],\r\n      [30.529550328435437, 50.416257570671156],\r\n      [30.52876611757469, 50.4151750826024],\r\n      [30.535583789976325, 50.415936340165416],\r\n      [30.53519461821206, 50.41676940341607],\r\n      [30.536759561443716, 50.4170076980345],\r\n      [30.540460276467726, 50.41663327851576],\r\n      [30.54059901792002, 50.417931489990465],\r\n      [30.540084033789153, 50.42026211044566],\r\n      [30.53836742001964, 50.42146850397636],\r\n      [30.537101417364596, 50.42168784493982],\r\n      [30.53565310831554, 50.42189449360963],\r\n    ]);\r\n\r\n    const initMap = async () => {\r\n      await ymaps3.ready;\r\n      const {\r\n        YMap,\r\n        YMapDefaultSchemeLayer,\r\n        YMapDefaultFeaturesLayer,\r\n        YMapMarker,\r\n        YMapFeature,\r\n        YMapListener,\r\n        YMapControls,\r\n        YMapControlButton,\r\n      } = ymaps3;\r\n      map = new YMap(document.getElementById(\"map\"), {\r\n        location: {\r\n          center: coord.value,\r\n          zoom: zoom.value,\r\n        },\r\n      });\r\n\r\n      // стили\r\n      const layer = new YMapDefaultSchemeLayer({\r\n        customization: [\r\n          {\r\n            tags: {\r\n              any: [\"traffic_light\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"entrance\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"road\"],\r\n              none: [\r\n                \"road_1\",\r\n                \"road_2\",\r\n                \"road_3\",\r\n                \"road_4\",\r\n                \"road_5\",\r\n                \"road_6\",\r\n                \"road_7\",\r\n              ],\r\n            },\r\n            elements: \"label.icon\",\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"building\", \"address\", \"fence\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"transit\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n        ],\r\n      });\r\n      map.addChild(layer);\r\n      map.addChild(new YMapDefaultFeaturesLayer());\r\n\r\n      // маркер\r\n      const markerElement = document.createElement(\"div\");\r\n      markerElement.className = \"icon-marker\";\r\n      marker = new YMapMarker({ coordinates: coord.value }, markerElement);\r\n      map.addChild(marker);\r\n\r\n      // полигоны\r\n      const polygon1 = new YMapFeature({\r\n        geometry: {\r\n          type: \"Polygon\",\r\n          coordinates: [polygonCoord1.value],\r\n        },\r\n        style: {\r\n          stroke: [{ color: \"#ffc700\", width: 2 }],\r\n          fill: \"#ffc80059\",\r\n        },\r\n      });\r\n      const polygon2 = new YMapFeature({\r\n        geometry: {\r\n          type: \"Polygon\",\r\n          coordinates: [polygonCoord2.value],\r\n        },\r\n        style: {\r\n          stroke: [{ color: \"#55b20b\", width: 2 }],\r\n          fill: \"#56b20b50\",\r\n        },\r\n      });\r\n      const polygon3 = new YMapFeature({\r\n        geometry: {\r\n          type: \"Polygon\",\r\n          coordinates: [polygonCoord3.value],\r\n        },\r\n        style: {\r\n          stroke: [{ color: \"#f44837\", width: 2 }],\r\n          fill: \"#f4473752\",\r\n        },\r\n      });\r\n      map.addChild(polygon1);\r\n      map.addChild(polygon2);\r\n      map.addChild(polygon3);\r\n\r\n      // обработка клика / перемещение по карте по клику\r\n      function changeMapPosition(location, camera) {\r\n        map.update({ location: { ...location, duration: 1000 }, camera });\r\n      }\r\n      const click = (object, event) => {\r\n        changeMapPosition(\r\n          {\r\n            center: [event.coordinates[0], event.coordinates[1]],\r\n            zoom: zoom.value,\r\n          },\r\n          { tilt: Math.PI / 180 }\r\n        );\r\n        coord.value = [event.coordinates[0], event.coordinates[1]];\r\n        marker.update({ coordinates: coord.value });\r\n        // геокодер\r\n        geocoderCoord(event.coordinates[0], event.coordinates[1]);\r\n      };\r\n      const mapListener = new YMapListener({\r\n        onClick: click,\r\n      });\r\n      map.addChild(mapListener);\r\n    };\r\n\r\n    const geocoderCoord = async (lat, long) => {\r\n      try {\r\n        form.value.address = \"\";\r\n        form.value.house = \"\";\r\n\r\n        const { data } = await axios.get(\r\n          `https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${lat},${long}&format=json&lang=ru_RU`\r\n        );\r\n\r\n        const path =\r\n          data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty\r\n            .GeocoderMetaData;\r\n\r\n        // заполнение полей адреса и дом\r\n        if (path.kind == \"house\") {\r\n          form.value.house = path.Address.Components.find(\r\n            (item) => item.kind == \"house\"\r\n          ).name;\r\n        }\r\n        const filteredArray = path.Address.Components.filter((item) =>\r\n          [\r\n            \"street\",\r\n            \"metro\",\r\n            \"district\",\r\n            \"area\",\r\n            \"province\",\r\n            \"railway_station\",\r\n            \"station\",\r\n            \"vegetation\",\r\n            \"other\",\r\n            \"house\",\r\n          ].includes(item.kind)\r\n        );\r\n        const names = filteredArray.map((item) => item.name).join(\", \");\r\n        form.value.address = names;\r\n        // адрес с карты в инпут\r\n        form.value.name = form.value.address;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    const geocoderAddress = async (item) => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${item}&format=json&lang=ru_RU`\r\n        );\r\n\r\n        const address =\r\n          data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;\r\n\r\n        const arrayCoord = address.split(\" \");\r\n\r\n        // перемещение по карте\r\n        map.update({\r\n          location: {\r\n            ...{\r\n              center: [arrayCoord[0], arrayCoord[1]],\r\n              zoom: zoom.value,\r\n            },\r\n            duration: 1000,\r\n          },\r\n          tilt: Math.PI / 180,\r\n        });\r\n        coord.value = [arrayCoord[0], arrayCoord[1]];\r\n        marker.update({ coordinates: coord.value });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    return {\r\n      initMap,\r\n      map,\r\n      marker,\r\n      coord,\r\n      zoom,\r\n      geocoderAddress,\r\n      form,\r\n      ruleFormRef,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.crumbs {\r\n  margin-bottom: 32px;\r\n}\r\n.destination-title {\r\n  color: $grey-dark;\r\n  font-size: 48px;\r\n  font-weight: 700;\r\n  line-height: 133%;\r\n  margin-bottom: 24px;\r\n}\r\n.destination {\r\n  margin-bottom: 64px;\r\n  &__inner {\r\n    display: flex;\r\n    gap: 24px;\r\n  }\r\n\r\n  &__form {\r\n    height: fit-content;\r\n    min-width: 379px;\r\n    max-width: 379px;\r\n    border-radius: $border;\r\n    background-color: #fff;\r\n    padding: 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 24px;\r\n  }\r\n\r\n  &__form-title {\r\n    color: $grey-dark;\r\n    text-align: center;\r\n    font-weight: 500;\r\n  }\r\n\r\n  &__list {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    row-gap: 24px;\r\n    column-gap: 12px;\r\n    margin-top: 24px;\r\n  }\r\n\r\n  &__list-item {\r\n  }\r\n\r\n  &__list-title {\r\n    color: #9e9e9e;\r\n    font-size: 14px;\r\n    line-height: 142%;\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  &__btn {\r\n    max-width: 100%;\r\n    height: 56px;\r\n  }\r\n  &__map {\r\n    // flex-grow: 1;\r\n    width: 100%;\r\n    height: 540px;\r\n    border-radius: $border;\r\n    overflow: hidden;\r\n  }\r\n}\r\n#map {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n.ymaps-2-1-79-map-copyrights-promo {\r\n  display: none;\r\n}\r\n.icon-marker {\r\n  cursor: pointer;\r\n\r\n  width: 57px;\r\n  height: 57px;\r\n  border-radius: 50%;\r\n\r\n  position: relative;\r\n  transform: translate(-50%, -90%);\r\n  &::after {\r\n    content: url(\"@/img/icon/location.svg\");\r\n  }\r\n}\r\n// inputs\r\n.destination__list-input {\r\n  height: 48px;\r\n  width: 100%;\r\n  background: var(---, #f5f5f7);\r\n  border-radius: $border;\r\n  color: $grey-dark;\r\n  font-weight: 400;\r\n  &::placeholder {\r\n    color: #8f8f8f;\r\n  }\r\n}\r\n\r\n// autocomplete\r\n.el-autocomplete {\r\n  width: 100%;\r\n}\r\n.el-input {\r\n  height: 48px;\r\n  width: 100%;\r\n  background: var(---, #f5f5f7);\r\n  border-radius: $border;\r\n  color: $grey-dark;\r\n  font-weight: 400;\r\n}\r\n.el-input__wrapper {\r\n  flex-grow: 1;\r\n  padding: 1px 18px;\r\n  background-color: transparent;\r\n  border-radius: $border;\r\n  cursor: text;\r\n  transition: none;\r\n  transform: none;\r\n  box-shadow: none;\r\n  &:hover,\r\n  &.is-focus {\r\n    box-shadow: none;\r\n  }\r\n}\r\n.el-input__prefix-inner > :last-child {\r\n  margin-right: 16px;\r\n}\r\n.el-input__inner {\r\n  --el-input-inner-height: 100%;\r\n  width: 100%;\r\n  color: $grey-dark;\r\n  font-size: 16px;\r\n  height: 100%;\r\n  line-height: 1.5;\r\n}\r\n.el-input {\r\n  --el-input-placeholder-color: #8f8f8f;\r\n}\r\n// dropdown\r\n.el-popper.is-light {\r\n  background: #f5f5f7;\r\n  border: 1px solid #bdbdbd;\r\n}\r\n.el-autocomplete__popper.el-popper {\r\n  box-shadow: none;\r\n}\r\n.el-popper {\r\n  border-radius: $border;\r\n  padding: 0px;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  overflow-wrap: normal;\r\n}\r\n.el-autocomplete-suggestion {\r\n  border-radius: $border;\r\n}\r\n// dropdown контейнер\r\n.el-autocomplete-suggestion__wrap {\r\n  max-height: 280px;\r\n  padding: 0;\r\n  border-radius: $border;\r\n}\r\n.el-autocomplete-suggestion li {\r\n  padding: 10px 20px;\r\n  line-height: 1.5;\r\n  cursor: pointer;\r\n  color: $grey-dark;\r\n  font-size: 16px;\r\n  transition: $transition;\r\n  white-space: break-spaces;\r\n  &:not(:last-child) {\r\n    border-bottom: 1px solid #bdbdbd;\r\n  }\r\n  &:hover {\r\n    background-color: #e6e4e4;\r\n  }\r\n}\r\n// стрелка\r\n.el-popper__arrow::before {\r\n  width: 10px;\r\n  height: 10px;\r\n  transform: rotate(45deg);\r\n  background: #f5f5f7;\r\n}\r\n.el-popper.is-light .el-popper__arrow::before {\r\n  border: 1px solid #bdbdbd;\r\n  background: #f5f5f7;\r\n}\r\n.el-popper[data-popper-placement^=\"bottom\"] > .el-popper__arrow::before {\r\n  border-top-left-radius: 2px;\r\n}\r\n// очистка поля\r\n.el-input .el-input__clear,\r\n.el-input .el-input__password {\r\n  color: var(--el-input-icon-color);\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n// form\r\n.el-form-item {\r\n  display: flex;\r\n  --font-size: 14px;\r\n  margin-bottom: 0px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}