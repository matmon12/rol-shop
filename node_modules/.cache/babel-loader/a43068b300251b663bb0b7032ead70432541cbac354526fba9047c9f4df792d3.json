{"ast":null,"code":"export default {\n  data() {\n    return {\n      input: \"\",\n      dialogVisible: false,\n      paths: [{\n        name: \"Оформление заказа\",\n        path: \"/rol-shop/order\"\n      }]\n    };\n  },\n  methods: {\n    async geocoderCoord(lat, long) {\n      try {\n        const {\n          data\n        } = await axios.get(`https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${lat},${long}&format=json&lang=ru_RU`);\n        const path = data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","input","dialogVisible","paths","name","path","methods","geocoderCoord","lat","long","axios","get","response","GeoObjectCollection","featureMember","GeoObject","metaDataProperty","GeocoderMetaData","err","console","log"],"sources":["C:\\gitPages\\rol-shop\\src\\pages\\OrderPlacing.vue"],"sourcesContent":["<template>\r\n  <div class=\"order\">\r\n    <div class=\"container\">\r\n      <div class=\"order__inner\">\r\n        <Category class=\"category-pages\" />\r\n        <Crumbs :paths=\"paths\" class=\"crumbs\" />\r\n\r\n        <h1 class=\"order-title\"></h1>\r\n        <el-form>\r\n          <div class=\"order-wrapper\">\r\n            <div class=\"order-left\">\r\n              <div class=\"order__person\">\r\n                <h4 class=\"order__person-title\"></h4>\r\n                <div class=\"order__person-inputs\">\r\n                  <el-form-item label=\"Activity name\" prop=\"name\">\r\n                    <el-input />\r\n                  </el-form-item>\r\n                  <el-form-item label=\"Activity name\" prop=\"name\">\r\n                    <el-input v-model=\"input\" v-mask=\"['+7 (###) ###-##-##']\" />\r\n                  </el-form-item>\r\n                </div>\r\n              </div>\r\n              <div class=\"order__delivery\">\r\n                <div class=\"order__delivery-head\">\r\n                  <h4 class=\"order__delivery-title\"></h4>\r\n                  <el-button plain @click=\"dialogVisible = true\">\r\n                    dialogVisible\r\n                    <img src=\"@/img/icon/info.svg\" alt=\"\" />\r\n                  </el-button>\r\n                  <el-dialog v-model=\"dialogVisible\" title=\"Зона доставки\" align-center>\r\n                    <p class=\"order-dialog__text\"></p>\r\n                    <ul class=\"order-dialog__list\">\r\n                      <li class=\"order-dialog__list-item\">\r\n                        <img src=\"@/img/icon/circle-1.svg\" alt=\"zone\">\r\n                        <p class=\"order-dialog__list-text\"> — Бесплатная доставка</p>\r\n                      </li>\r\n                      <li class=\"order-dialog__list-item\">\r\n                        <img src=\"@/img/icon/circle-2.svg\" alt=\"zone\">\r\n                        <p class=\"order-dialog__list-text\"> — Платная доставка</p>\r\n                      </li>\r\n                      <li class=\"order-dialog__list-item\">\r\n                        <img src=\"@/img/icon/circle-3.svg\" alt=\"zone\">\r\n                        <p class=\"order-dialog__list-text\"> — Доставку не делаем</p>\r\n                      </li>\r\n                    </ul>\r\n                    <div class=\"destination__map\">\r\n                      <Map :geocoderCoord=\"geocoderCoord\" ref=\"Map\"/>\r\n                    </div>\r\n                    <app-button></app-button>\r\n                  </el-dialog>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      input: \"\",\r\n      dialogVisible: false,\r\n      paths: [{ name: \"Оформление заказа\", path: \"/rol-shop/order\" }],\r\n    };\r\n  },\r\n  methods: {\r\n    async geocoderCoord(lat, long) {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${lat},${long}&format=json&lang=ru_RU`\r\n        );\r\n\r\n        const path =\r\n          data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty\r\n            .GeocoderMetaData;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.crumbs {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.destination__map {\r\n  // flex-grow: 1;\r\n  width: 500px;\r\n  height: 658px;\r\n  border-radius: $border;\r\n  overflow: hidden;\r\n}\r\n.order {\r\n  &__inner {\r\n    position: relative;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA6DA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,KAAK;MACpBC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE,mBAAmB;QAAEC,IAAI,EAAE;MAAkB,CAAC;IAChE,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAACC,GAAG,EAAEC,IAAI,EAAE;MAC7B,IAAI;QACF,MAAM;UAAET;QAAK,IAAI,MAAMU,KAAK,CAACC,GAAG,CAC7B,2FAA0FH,GAAI,IAAGC,IAAK,yBACzG,CAAC;QAED,MAAMJ,IAAG,GACPL,IAAI,CAACY,QAAQ,CAACC,mBAAmB,CAACC,aAAa,CAAC,CAAC,CAAC,CAACC,SAAS,CAACC,gBAAe,CACzEC,gBAAgB;MACvB,EAAE,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}