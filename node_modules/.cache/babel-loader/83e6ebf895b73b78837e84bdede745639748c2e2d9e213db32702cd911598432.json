{"ast":null,"code":"import axios from \"axios\";\nimport { inject, ref } from \"vue\";\nimport Crumbs from \"@/components/Crumbs.vue\";\nimport Menu from \"@/components/Menu.vue\";\nimport FavoriteList from \"@/components/FavoriteList.vue\";\nimport { mapActions, mapMutations } from \"vuex\";\nexport default {\n  data() {\n    return {\n      paths: [{\n        name: \"Избранное\",\n        path: \"/rol-shop/favorites\"\n      }],\n      limit: 6,\n      isAllLoading: false\n    };\n  },\n  components: {\n    Crumbs,\n    Menu,\n    FavoriteList\n  },\n  methods: {\n    ...mapActions({\n      addToFavorite: \"favorite/addToFavorite\"\n    }),\n    check(item) {\n      this.addToFavorite(item);\n      this.favorites.splice(this.favorites.indexOf(item), 1);\n    },\n    async fetchFavorites() {\n      try {\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/favorites`);\n        this.favorites = data.map(obj => obj.item);\n        this.favorites.map((obj, index) => obj.favoriteId = data[index].id);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    onLoadMoreFavorites() {\n      this.isAllLoading = !this.isAllLoading;\n    },\n    load() {\n      this.fetchFavorites().then(() => {\n        // включение кнопки для карточек\n        this.favorites = this.favorites.map(item => ({\n          ...item,\n          isAdded: this.cart.some(cartItem => cartItem.id === item.id)\n        }));\n      });\n    }\n  },\n  mounted() {\n    this.load();\n  },\n  setup() {\n    const {\n      favorites\n    } = inject(\"items\");\n    const {\n      cart,\n      addToCart,\n      removeFromCart\n    } = inject(\"cart\");\n    const onClickAddPlus = item => {\n      if (!item.isAdded) {\n        addToCart(item);\n      } else {\n        removeFromCart(item);\n        // карточка favorites\n        favorites.value.forEach(pl => {\n          if (pl.id === item.id) {\n            pl.isAdded = false;\n            pl.count = 1;\n          }\n        });\n      }\n    };\n    return {\n      onClickAddPlus,\n      cart,\n      favorites\n    };\n  }\n};","map":{"version":3,"names":["axios","inject","ref","Crumbs","Menu","FavoriteList","mapActions","mapMutations","data","paths","name","path","limit","isAllLoading","components","methods","addToFavorite","check","item","favorites","splice","indexOf","fetchFavorites","get","map","obj","index","favoriteId","id","err","console","log","onLoadMoreFavorites","load","then","isAdded","cart","some","cartItem","mounted","setup","addToCart","removeFromCart","onClickAddPlus","value","forEach","pl","count"],"sources":["C:\\gitPages\\rol-shop\\src\\pages\\Favorites.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"favorites\">\r\n      <div class=\"container\">\r\n        <Crumbs :paths=\"paths\" class=\"crumbs\" />\r\n        <div class=\"favorites__inner\">\r\n          <Menu />\r\n\r\n          <div class=\"favorites-wrapper\">\r\n            <FavoriteList\r\n              :items=\"favorites\"\r\n              :check=\"isAllLoading\"\r\n              @add-to-favorite=\"(item) => check(item)\"\r\n              @add-to-cart=\"(item) => onClickAddPlus(item)\"\r\n              @load-more-favorites=\"onLoadMoreFavorites()\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { inject, ref } from \"vue\";\r\nimport Crumbs from \"@/components/Crumbs.vue\";\r\nimport Menu from \"@/components/Menu.vue\";\r\nimport FavoriteList from \"@/components/FavoriteList.vue\";\r\nimport { mapActions, mapMutations } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      paths: [{ name: \"Избранное\", path: \"/rol-shop/favorites\" }],\r\n      limit: 6,\r\n      isAllLoading: false,\r\n    };\r\n  },\r\n  components: {\r\n    Crumbs,\r\n    Menu,\r\n    FavoriteList,\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      addToFavorite: \"favorite/addToFavorite\",\r\n    }),\r\n    check(item) {\r\n      this.addToFavorite(item);\r\n      this.favorites.splice(this.favorites.indexOf(item), 1);\r\n    },\r\n    async fetchFavorites() {\r\n      try {\r\n        const { data } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/favorites`);\r\n\r\n        this.favorites = data.map((obj) => obj.item);\r\n        this.favorites.map((obj, index) => (obj.favoriteId = data[index].id));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    onLoadMoreFavorites() {\r\n      this.isAllLoading = !this.isAllLoading;\r\n    },\r\n    load() {\r\n      this.fetchFavorites().then(() => {\r\n        // включение кнопки для карточек\r\n        this.favorites = this.favorites.map((item) => ({\r\n          ...item,\r\n          isAdded: this.cart.some((cartItem) => cartItem.id === item.id),\r\n        }));\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.load();\r\n  },\r\n  setup() {\r\n    const { favorites } = inject(\"items\");\r\n    const { cart, addToCart, removeFromCart } = inject(\"cart\");\r\n    const onClickAddPlus = (item) => {\r\n      if (!item.isAdded) {\r\n        addToCart(item);\r\n      } else {\r\n        removeFromCart(item);\r\n        // карточка favorites\r\n        favorites.value.forEach((pl) => {\r\n          if (pl.id === item.id) {\r\n            pl.isAdded = false;\r\n            pl.count = 1;\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    return {\r\n      onClickAddPlus,\r\n      cart,\r\n      favorites,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.crumbs {\r\n  margin-bottom: 32px;\r\n}\r\n.favorites {\r\n  padding-bottom: 64px;\r\n  &__inner {\r\n    display: flex;\r\n    gap: 76px;\r\n  }\r\n  &-wrapper {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAwBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,MAAM,EAAEC,GAAE,QAAS,KAAK;AACjC,OAAOC,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,IAAG,MAAO,uBAAuB;AACxC,OAAOC,YAAW,MAAO,+BAA+B;AACxD,SAASC,UAAU,EAAEC,YAAW,QAAS,MAAM;AAC/C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE,WAAW;QAAEC,IAAI,EAAE;MAAsB,CAAC,CAAC;MAC3DC,KAAK,EAAE,CAAC;MACRC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,UAAU,EAAE;IACVX,MAAM;IACNC,IAAI;IACJC;EACF,CAAC;EACDU,OAAO,EAAE;IACP,GAAGT,UAAU,CAAC;MACZU,aAAa,EAAE;IACjB,CAAC,CAAC;IACFC,KAAKA,CAACC,IAAI,EAAE;MACV,IAAI,CAACF,aAAa,CAACE,IAAI,CAAC;MACxB,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,IAAI,CAACD,SAAS,CAACE,OAAO,CAACH,IAAI,CAAC,EAAE,CAAC,CAAC;IACxD,CAAC;IACD,MAAMI,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAM;UAAEd;QAAK,IAAI,MAAMR,KAAK,CAACuB,GAAG,CAAE,8CAA6C,CAAC;QAEhF,IAAI,CAACJ,SAAQ,GAAIX,IAAI,CAACgB,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACP,IAAI,CAAC;QAC5C,IAAI,CAACC,SAAS,CAACK,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAMD,GAAG,CAACE,UAAS,GAAInB,IAAI,CAACkB,KAAK,CAAC,CAACE,EAAG,CAAC;MACvE,EAAE,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACDG,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACnB,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC,CAAC;IACDoB,IAAIA,CAAA,EAAG;MACL,IAAI,CAACX,cAAc,CAAC,CAAC,CAACY,IAAI,CAAC,MAAM;QAC/B;QACA,IAAI,CAACf,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACK,GAAG,CAAEN,IAAI,KAAM;UAC7C,GAAGA,IAAI;UACPiB,OAAO,EAAE,IAAI,CAACC,IAAI,CAACC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACV,EAAC,KAAMV,IAAI,CAACU,EAAE;QAC/D,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACJ;EACF,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,IAAI,CAAC,CAAC;EACb,CAAC;EACDO,KAAKA,CAAA,EAAG;IACN,MAAM;MAAErB;IAAU,IAAIlB,MAAM,CAAC,OAAO,CAAC;IACrC,MAAM;MAAEmC,IAAI;MAAEK,SAAS;MAAEC;IAAe,IAAIzC,MAAM,CAAC,MAAM,CAAC;IAC1D,MAAM0C,cAAa,GAAKzB,IAAI,IAAK;MAC/B,IAAI,CAACA,IAAI,CAACiB,OAAO,EAAE;QACjBM,SAAS,CAACvB,IAAI,CAAC;MACjB,OAAO;QACLwB,cAAc,CAACxB,IAAI,CAAC;QACpB;QACAC,SAAS,CAACyB,KAAK,CAACC,OAAO,CAAEC,EAAE,IAAK;UAC9B,IAAIA,EAAE,CAAClB,EAAC,KAAMV,IAAI,CAACU,EAAE,EAAE;YACrBkB,EAAE,CAACX,OAAM,GAAI,KAAK;YAClBW,EAAE,CAACC,KAAI,GAAI,CAAC;UACd;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IAED,OAAO;MACLJ,cAAc;MACdP,IAAI;MACJjB;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}