{"ast":null,"code":"export default dateModule = {\n  state: () => ({\n    formattedDate: \"\"\n  }),\n  actions: {\n    dateFormat(dayDate, yearDate, timeDate) {\n      const [day, month] = dayDate.split(\".\");\n      const [hours, minutes] = timeDate.split(\":\");\n      const date = new Date(yearDate, month - 1, day, hours, minutes);\n      const formattedTime = date.toLocaleTimeString(\"ru-RU\", {\n        hour: \"numeric\",\n        minute: \"2-digit\"\n      });\n      const months = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\n      this.formattedDate = [`${date.getDate()} ${months[date.getMonth()]}`, `${formattedTime}`];\n    }\n  },\n  namespaced: true\n};","map":{"version":3,"names":["dateModule","state","formattedDate","actions","dateFormat","dayDate","yearDate","timeDate","day","month","split","hours","minutes","date","Date","formattedTime","toLocaleTimeString","hour","minute","months","getDate","getMonth","namespaced"],"sources":["C:/gitPages/rol-shop/src/store/dateModule.js"],"sourcesContent":["export default dateModule = {\r\n  state: () => ({\r\n    formattedDate: \"\",\r\n  }),\r\n  actions: {\r\n    dateFormat(dayDate, yearDate, timeDate) {\r\n      const [day, month] = dayDate.split(\".\");\r\n      const [hours, minutes] = timeDate.split(\":\");\r\n      const date = new Date(yearDate, month - 1, day, hours, minutes);\r\n      const formattedTime = date.toLocaleTimeString(\"ru-RU\", {\r\n        hour: \"numeric\",\r\n        minute: \"2-digit\",\r\n      });\r\n      const months = [\r\n        \"января\",\r\n        \"февраля\",\r\n        \"марта\",\r\n        \"апреля\",\r\n        \"мая\",\r\n        \"июня\",\r\n        \"июля\",\r\n        \"августа\",\r\n        \"сентября\",\r\n        \"октября\",\r\n        \"ноября\",\r\n        \"декабря\",\r\n      ];\r\n      this.formattedDate = [\r\n        `${date.getDate()} ${months[date.getMonth()]}`,\r\n        `${formattedTime}`,\r\n      ];\r\n    },\r\n  },\r\n  namespaced: true,\r\n};\r\n"],"mappings":"AAAA,eAAeA,UAAU,GAAG;EAC1BC,KAAK,EAAEA,CAAA,MAAO;IACZC,aAAa,EAAE;EACjB,CAAC,CAAC;EACFC,OAAO,EAAE;IACPC,UAAUA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MACtC,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGJ,OAAO,CAACK,KAAK,CAAC,GAAG,CAAC;MACvC,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;MAC5C,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAACR,QAAQ,EAAEG,KAAK,GAAG,CAAC,EAAED,GAAG,EAAEG,KAAK,EAAEC,OAAO,CAAC;MAC/D,MAAMG,aAAa,GAAGF,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;QACrDC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMC,MAAM,GAAG,CACb,QAAQ,EACR,SAAS,EACT,OAAO,EACP,QAAQ,EACR,KAAK,EACL,MAAM,EACN,MAAM,EACN,SAAS,EACT,UAAU,EACV,SAAS,EACT,QAAQ,EACR,SAAS,CACV;MACD,IAAI,CAACjB,aAAa,GAAG,CAClB,GAAEW,IAAI,CAACO,OAAO,CAAC,CAAE,IAAGD,MAAM,CAACN,IAAI,CAACQ,QAAQ,CAAC,CAAC,CAAE,EAAC,EAC7C,GAAEN,aAAc,EAAC,CACnB;IACH;EACF,CAAC;EACDO,UAAU,EAAE;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}