{"ast":null,"code":"import { ref, inject, computed } from \"vue\";\nimport axios from \"axios\";\nimport { useStore, mapState } from \"vuex\";\nexport default {\n  props: {\n    geocoderCoord: Function\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {},\n  setup(props) {\n    const store = useStore();\n    // из store vuex\n    const polygonCoord1 = store.state.map.polygonCoord1;\n    const polygonCoord2 = store.state.map.polygonCoord2;\n    const polygonCoord3 = store.state.map.polygonCoord3;\n    var coord = store.state.map.coord;\n    const zoom = ref(16);\n    let map, marker;\n    const initMap = async () => {\n      await ymaps3.ready;\n      const {\n        YMap,\n        YMapDefaultSchemeLayer,\n        YMapDefaultFeaturesLayer,\n        YMapMarker,\n        YMapFeature,\n        YMapListener,\n        YMapControls,\n        YMapControlButton\n      } = ymaps3;\n      map = new YMap(document.getElementById(\"map\"), {\n        location: {\n          center: coord,\n          zoom: zoom.value\n        }\n      });\n      console.log(ymaps3);\n      // стили\n      const layer = new YMapDefaultSchemeLayer({\n        customization: [{\n          tags: {\n            any: [\"traffic_light\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"entrance\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"road\"],\n            none: [\"road_1\", \"road_2\", \"road_3\", \"road_4\", \"road_5\", \"road_6\", \"road_7\"]\n          },\n          elements: \"label.icon\",\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"building\", \"address\", \"fence\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"transit\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }]\n      });\n      map.addChild(layer);\n      map.addChild(new YMapDefaultFeaturesLayer());\n\n      // маркер\n      const markerElement = document.createElement(\"div\");\n      markerElement.className = \"icon-marker\";\n      marker = new YMapMarker({\n        coordinates: coord\n      }, markerElement);\n      map.addChild(marker);\n\n      // полигоны\n      const polygon1 = new YMapFeature({\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [polygonCoord1]\n        },\n        style: {\n          stroke: [{\n            color: \"#ffc700\",\n            width: 2\n          }],\n          fill: \"#ffc80059\"\n        }\n      });\n      const polygon2 = new YMapFeature({\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [polygonCoord2]\n        },\n        style: {\n          stroke: [{\n            color: \"#55b20b\",\n            width: 2\n          }],\n          fill: \"#56b20b50\"\n        }\n      });\n      const polygon3 = new YMapFeature({\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [polygonCoord3]\n        },\n        style: {\n          stroke: [{\n            color: \"#f44837\",\n            width: 2\n          }],\n          fill: \"#f4473752\"\n        }\n      });\n      map.addChild(polygon1);\n      map.addChild(polygon2);\n      map.addChild(polygon3);\n\n      // обработка клика / перемещение по карте по клику\n      function changeMapPosition(location, camera) {\n        map.update({\n          location: {\n            ...location,\n            duration: 1000\n          },\n          camera\n        });\n      }\n      const click = (object, event) => {\n        changeMapPosition({\n          center: [event.coordinates[0], event.coordinates[1]],\n          zoom: zoom.value\n        }, {\n          tilt: Math.PI / 180\n        });\n        coord = [event.coordinates[0], event.coordinates[1]];\n        marker.update({\n          coordinates: coord\n        });\n        // геокодер\n        props.geocoderCoord(event.coordinates[0], event.coordinates[1]);\n      };\n      const mapListener = new YMapListener({\n        onClick: click\n      });\n      map.addChild(mapListener);\n    };\n    const moveMap = item => {\n      // преобразование адреса в координаты\n      store.dispatch(\"map/geocoderAddress\", item);\n      map.update({\n        location: {\n          ...{\n            center: [arrayCoord[0], arrayCoord[1]],\n            zoom: zoom.value\n          },\n          duration: 1000\n        },\n        tilt: Math.PI / 180\n      });\n      coord = [arrayCoord[0], arrayCoord[1]];\n      marker.update({\n        coordinates: coord\n      });\n    };\n    return {\n      initMap,\n      map,\n      marker,\n      coord,\n      zoom,\n      moveMap\n    };\n  }\n};","map":{"version":3,"names":["ref","inject","computed","axios","useStore","mapState","props","geocoderCoord","Function","mounted","initMap","methods","setup","store","polygonCoord1","state","map","polygonCoord2","polygonCoord3","coord","zoom","marker","ymaps3","ready","YMap","YMapDefaultSchemeLayer","YMapDefaultFeaturesLayer","YMapMarker","YMapFeature","YMapListener","YMapControls","YMapControlButton","document","getElementById","location","center","value","console","log","layer","customization","tags","any","stylers","visibility","none","elements","addChild","markerElement","createElement","className","coordinates","polygon1","geometry","type","style","stroke","color","width","fill","polygon2","polygon3","changeMapPosition","camera","update","duration","click","object","event","tilt","Math","PI","mapListener","onClick","moveMap","item","dispatch","arrayCoord"],"sources":["C:\\gitPages\\rol-shop\\src\\components\\Map.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, inject, computed } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { useStore, mapState } from \"vuex\";\r\n\r\nexport default {\r\n  props: {\r\n    geocoderCoord: Function,\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {},\r\n  setup(props) {\r\n    const store = useStore();\r\n    // из store vuex\r\n    const polygonCoord1 = store.state.map.polygonCoord1;\r\n    const polygonCoord2 = store.state.map.polygonCoord2;\r\n    const polygonCoord3 = store.state.map.polygonCoord3;\r\n    var coord = store.state.map.coord;\r\n\r\n    const zoom = ref(16);\r\n    let map, marker;\r\n\r\n    const initMap = async () => {\r\n      await ymaps3.ready;\r\n      const {\r\n        YMap,\r\n        YMapDefaultSchemeLayer,\r\n        YMapDefaultFeaturesLayer,\r\n        YMapMarker,\r\n        YMapFeature,\r\n        YMapListener,\r\n        YMapControls,\r\n        YMapControlButton,\r\n      } = ymaps3;\r\n      map = new YMap(document.getElementById(\"map\"), {\r\n        location: {\r\n          center: coord,\r\n          zoom: zoom.value,\r\n        },\r\n      });\r\n\r\n      console.log(ymaps3);\r\n      // стили\r\n      const layer = new YMapDefaultSchemeLayer({\r\n        customization: [\r\n          {\r\n            tags: {\r\n              any: [\"traffic_light\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"entrance\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"road\"],\r\n              none: [\r\n                \"road_1\",\r\n                \"road_2\",\r\n                \"road_3\",\r\n                \"road_4\",\r\n                \"road_5\",\r\n                \"road_6\",\r\n                \"road_7\",\r\n              ],\r\n            },\r\n            elements: \"label.icon\",\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"building\", \"address\", \"fence\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"transit\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n        ],\r\n      });\r\n      map.addChild(layer);\r\n      map.addChild(new YMapDefaultFeaturesLayer());\r\n\r\n      // маркер\r\n      const markerElement = document.createElement(\"div\");\r\n      markerElement.className = \"icon-marker\";\r\n      marker = new YMapMarker({ coordinates: coord }, markerElement);\r\n      map.addChild(marker);\r\n\r\n      // полигоны\r\n      const polygon1 = new YMapFeature({\r\n        geometry: {\r\n          type: \"Polygon\",\r\n          coordinates: [polygonCoord1],\r\n        },\r\n        style: {\r\n          stroke: [{ color: \"#ffc700\", width: 2 }],\r\n          fill: \"#ffc80059\",\r\n        },\r\n      });\r\n      const polygon2 = new YMapFeature({\r\n        geometry: {\r\n          type: \"Polygon\",\r\n          coordinates: [polygonCoord2],\r\n        },\r\n        style: {\r\n          stroke: [{ color: \"#55b20b\", width: 2 }],\r\n          fill: \"#56b20b50\",\r\n        },\r\n      });\r\n      const polygon3 = new YMapFeature({\r\n        geometry: {\r\n          type: \"Polygon\",\r\n          coordinates: [polygonCoord3],\r\n        },\r\n        style: {\r\n          stroke: [{ color: \"#f44837\", width: 2 }],\r\n          fill: \"#f4473752\",\r\n        },\r\n      });\r\n      map.addChild(polygon1);\r\n      map.addChild(polygon2);\r\n      map.addChild(polygon3);\r\n\r\n      // обработка клика / перемещение по карте по клику\r\n      function changeMapPosition(location, camera) {\r\n        map.update({ location: { ...location, duration: 1000 }, camera });\r\n      }\r\n      const click = (object, event) => {\r\n        changeMapPosition(\r\n          {\r\n            center: [event.coordinates[0], event.coordinates[1]],\r\n            zoom: zoom.value,\r\n          },\r\n          { tilt: Math.PI / 180 }\r\n        );\r\n        coord = [event.coordinates[0], event.coordinates[1]];\r\n        marker.update({ coordinates: coord });\r\n        // геокодер\r\n        props.geocoderCoord(event.coordinates[0], event.coordinates[1]);\r\n      };\r\n      const mapListener = new YMapListener({\r\n        onClick: click,\r\n      });\r\n      map.addChild(mapListener);\r\n    };\r\n\r\n    const moveMap = (item) => {\r\n      // преобразование адреса в координаты\r\n      store.dispatch(\"map/geocoderAddress\", item);\r\n\r\n      map.update({\r\n        location: {\r\n          ...{\r\n            center: [arrayCoord[0], arrayCoord[1]],\r\n            zoom: zoom.value,\r\n          },\r\n          duration: 1000,\r\n        },\r\n        tilt: Math.PI / 180,\r\n      });\r\n      coord = [arrayCoord[0], arrayCoord[1]];\r\n      marker.update({ coordinates: coord });\r\n    };\r\n\r\n    return {\r\n      initMap,\r\n      map,\r\n      marker,\r\n      coord,\r\n      zoom,\r\n      moveMap,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#map {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}