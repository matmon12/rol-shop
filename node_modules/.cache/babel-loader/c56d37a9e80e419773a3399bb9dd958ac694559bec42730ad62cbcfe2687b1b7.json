{"ast":null,"code":"import axios from \"axios\";\nimport { inject } from \"vue\";\nexport default {\n  data() {\n    return {\n      input: \"\",\n      dialogVisible: false,\n      tab: \"tab_1\",\n      paths: [{\n        name: \"Оформление заказа\",\n        path: \"/rol-shop/order\"\n      }]\n    };\n  },\n  methods: {\n    async fetchAddress() {\n      try {\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/address`);\n        this.address = data;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async geocoderCoord(lat, long) {\n      try {\n        const {\n          data\n        } = await axios.get(`https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${lat},${long}&format=json&lang=ru_RU`);\n        const path = data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  },\n  mounted() {\n    this.fetchAddress();\n  },\n  setup() {\n    const {\n      address\n    } = inject(\"address\");\n    return {\n      address\n    };\n  }\n};","map":{"version":3,"names":["axios","inject","data","input","dialogVisible","tab","paths","name","path","methods","fetchAddress","get","address","err","console","log","geocoderCoord","lat","long","response","GeoObjectCollection","featureMember","GeoObject","metaDataProperty","GeocoderMetaData","mounted","setup"],"sources":["C:\\gitPages\\rol-shop\\src\\pages\\OrderPlacing.vue"],"sourcesContent":["<template>\r\n  <div class=\"order\">\r\n    <div class=\"container\">\r\n      <div class=\"order__inner\">\r\n        <Category class=\"category-pages\" />\r\n        <Crumbs :paths=\"paths\" class=\"crumbs\" />\r\n\r\n        <h1 class=\"order-title\">Оформление заказа</h1>\r\n        <el-form>\r\n          <div class=\"order-wrapper\">\r\n            <div class=\"order-left\">\r\n              <div class=\"order__person\">\r\n                <h4 class=\"order__person-title\">Личные данные</h4>\r\n                <div class=\"order__person-inputs\">\r\n                  <el-form-item label=\"Имя\" prop=\"name\">\r\n                    <el-input placeholder=\"Ввод\" />\r\n                  </el-form-item>\r\n                  <el-form-item label=\"Телефон\" prop=\"tel\">\r\n                    <el-input\r\n                      v-model=\"input\"\r\n                      v-mask=\"['+7 (###) ###-##-##']\"\r\n                      placeholder=\"Ввод\"\r\n                    />\r\n                  </el-form-item>\r\n                </div>\r\n              </div>\r\n              <div class=\"order__delivery\">\r\n                <div class=\"order__delivery-head\">\r\n                  <h4 class=\"order__delivery-title\">Доставка</h4>\r\n                  <el-button plain @click=\"dialogVisible = true\">\r\n                    Зона доставки\r\n                    <img src=\"@/img/icon/info.svg\" alt=\"\" />\r\n                  </el-button>\r\n                  <el-dialog v-model=\"dialogVisible\" title=\"Зона доставки\" align-center>\r\n                    <p class=\"order-dialog__text\">\r\n                      Выберите место на карте, а мы проверим возможна ли доставка в эту\r\n                      зону\r\n                    </p>\r\n                    <ul class=\"order-dialog__list\">\r\n                      <li class=\"order-dialog__list-item\">\r\n                        <img src=\"@/img/icon/circle-1.svg\" alt=\"zone\" />\r\n                        <span>—</span>\r\n                        <p class=\"order-dialog__list-text\">Бесплатная доставка</p>\r\n                      </li>\r\n                      <li class=\"order-dialog__list-item\">\r\n                        <img src=\"@/img/icon/circle-2.svg\" alt=\"zone\" />\r\n                        <span>—</span>\r\n                        <p class=\"order-dialog__list-text\">Платная доставка</p>\r\n                      </li>\r\n                      <li class=\"order-dialog__list-item\">\r\n                        <img src=\"@/img/icon/circle-3.svg\" alt=\"zone\" />\r\n                        <span>—</span>\r\n                        <p class=\"order-dialog__list-text\">Доставку не делаем</p>\r\n                      </li>\r\n                    </ul>\r\n                    <div class=\"destination__map\">\r\n                      <Map :geocoderCoord=\"geocoderCoord\" ref=\"Map\" />\r\n                    </div>\r\n                    <app-button class=\"order-dialog__btn\">\r\n                      <img src=\"@/img/icon/location-white.svg\" alt=\"\" />\r\n                      Проверить адрес\r\n                    </app-button>\r\n                  </el-dialog>\r\n                </div>\r\n                <p class=\"order__delivery-text\">\r\n                  Зона бесплатной доставки уточняется у оператора\r\n                </p>\r\n                <div class=\"tabs-wrapper\">\r\n                  <div class=\"tabs order__tabs\">\r\n                    <div class=\"tab\" @click=\"tab = 'tab_1'\">Доставка</div>\r\n                    <div class=\"tab\" @click=\"tab = 'tab_2'\">Самовывоз</div>\r\n                  </div>\r\n                  <div class=\"tabs__content\">\r\n                    <div v-if=\"tab === 'tab_1'\" class=\"tab__content\">\r\n                      <p class=\"delivery__text\">Минимальная сумма заказа 400 грн</p>\r\n                      <ul class=\"address__list\" v-auto-animate>\r\n                        <label\r\n                          class=\"address__list-item\"\r\n                          v-for=\"(item, id) in address\"\r\n                          :key=\"id\"\r\n                        >\r\n                          <div class=\"address__info\">\r\n                            <p class=\"address__address\">{{ item.address }}</p>\r\n                            <p class=\"address__other\">\r\n                              Подьезд {{ item.input }}, этаж {{ item.floor }}, квартира\r\n                              {{ item.apartment }}\r\n                            </p>\r\n                          </div>\r\n\r\n                          <input type=\"radio\" name=\"address\" :checked=\"id === 0\" />\r\n                        </label>\r\n                      </ul>\r\n                      <div class=\"delivery__btns\">\r\n                        <button class=\"delivery__btn\">Добавить новый адрес</button>\r\n                        <button class=\"delivery__btn\">Удалить адрес</button>\r\n                      </div>\r\n                      <div class=\"delivery__other\">\r\n                        <label for=\"\" class=\"delivery__other-label\">\r\n                          <input class=\"delivery__other-check\" type=\"checkbox\" />\r\n                          Удалить адрес\r\n                        </label>\r\n                        <label for=\"\" class=\"delivery__other-label\">\r\n                          <input class=\"delivery__other-check\" type=\"checkbox\" />\r\n                          Удалить адрес\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <div v-if=\"tab === 'tab_2'\" class=\"tab__content\">sdfsfd</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { inject } from \"vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      input: \"\",\r\n      dialogVisible: false,\r\n      tab: \"tab_1\",\r\n      paths: [{ name: \"Оформление заказа\", path: \"/rol-shop/order\" }],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchAddress() {\r\n      try {\r\n        const { data } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/address`);\r\n\r\n        this.address = data;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    async geocoderCoord(lat, long) {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${lat},${long}&format=json&lang=ru_RU`\r\n        );\r\n\r\n        const path =\r\n          data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty\r\n            .GeocoderMetaData;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchAddress();\r\n  },\r\n  setup() {\r\n    const { address } = inject(\"address\");\r\n    return {\r\n      address,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.crumbs {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.destination__map {\r\n  // flex-grow: 1;\r\n  width: 100%;\r\n  height: 500px;\r\n  border-radius: $border;\r\n  overflow: hidden;\r\n}\r\n.order {\r\n  &__inner {\r\n    position: relative;\r\n  }\r\n}\r\n.order-title {\r\n  color: $grey-dark;\r\n  font-size: 48px;\r\n  font-weight: 700;\r\n  margin-bottom: 24px;\r\n  line-height: 1.4;\r\n}\r\n.order-wrapper {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.order-left {\r\n  width: 645px;\r\n}\r\n.order {\r\n  &__person {\r\n    background-color: #fff;\r\n    border-radius: $border;\r\n    padding: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__person-title {\r\n    color: $grey-dark;\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  &__person-inputs {\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n\r\n  &__delivery {\r\n    background-color: #fff;\r\n    border-radius: $border;\r\n    padding: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__delivery-head {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  &__delivery-title {\r\n    color: $grey-dark;\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    line-height: 1.4;\r\n  }\r\n}\r\n.order-dialog {\r\n  &__text {\r\n    font-weight: 400;\r\n    color: rgb(104, 104, 112);\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  &__list {\r\n    display: flex;\r\n    gap: 24px;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  &__list-item {\r\n    display: flex;\r\n    gap: 12px;\r\n    span {\r\n      color: $grey-dark;\r\n      font-size: 20px;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  &__list-text {\r\n    color: $grey-dark;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  &__btn {\r\n    margin-top: 24px;\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n  }\r\n}\r\n.address {\r\n  &__list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n  }\r\n\r\n  &__list-item {\r\n    width: 100%;\r\n    background-color: #fff;\r\n    border-radius: $border;\r\n    padding: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 16px;\r\n    &::before {\r\n      content: url(\"@/img/icon/location-grey.svg\");\r\n      height: 22px;\r\n    }\r\n  }\r\n\r\n  &__info {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  &__address {\r\n    color: $grey-dark;\r\n    font-weight: 500;\r\n  }\r\n\r\n  &__other {\r\n    color: rgb(104, 104, 112);\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n  }\r\n\r\n}\r\n.order {\r\n  &__delivery-text {\r\n    color: rgb(104, 104, 112);\r\n    font-size: 14px;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  &__tabs {\r\n    display: flex;\r\n    background: rgb(245, 245, 247);\r\n  }\r\n}\r\n.tabs-wrapper {\r\n}\r\n.tabs {\r\n  &__content {\r\n  }\r\n}\r\n.tab {\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  &__content {\r\n  }\r\n}\r\n.delivery {\r\n  &__text {\r\n  }\r\n\r\n  &__btns {\r\n  }\r\n\r\n  &__btn {\r\n  }\r\n\r\n  &__other {\r\n  }\r\n\r\n  &__other-label {\r\n  }\r\n\r\n  &__other-check {\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n.order {\r\n  &__person-inputs {\r\n    display: flex;\r\n    gap: 12px;\r\n    .el-form-item {\r\n      flex-direction: column;\r\n      flex-grow: 1;\r\n      margin-bottom: 0;\r\n    }\r\n    .el-form-item__label {\r\n      justify-content: flex-start;\r\n      color: rgb(158, 158, 158);\r\n      font-size: 14px;\r\n      font-weight: 400;\r\n      margin-bottom: 4px;\r\n      padding: 0;\r\n      line-height: 1.5;\r\n      height: auto;\r\n    }\r\n    .el-input {\r\n      height: 48px;\r\n      width: 100%;\r\n      background: var(---, #f5f5f7);\r\n      border-radius: $border;\r\n      color: $grey-dark;\r\n      font-weight: 400;\r\n    }\r\n    .el-input__wrapper {\r\n      flex-grow: 1;\r\n      padding: 12px 16px;\r\n      background-color: transparent;\r\n      border-radius: $border;\r\n      cursor: text;\r\n      transition: none;\r\n      transform: none;\r\n      box-shadow: none;\r\n      &:hover,\r\n      &.is-focus {\r\n        box-shadow: none;\r\n      }\r\n    }\r\n    .el-input__prefix-inner > :last-child {\r\n      margin-right: 16px;\r\n    }\r\n    .el-input__inner {\r\n      --el-input-inner-height: 100%;\r\n      width: 100%;\r\n      color: $grey-dark;\r\n      font-size: 16px;\r\n      height: 100%;\r\n      line-height: 1.5;\r\n    }\r\n    .el-input {\r\n      --el-input-placeholder-color: #8f8f8f;\r\n    }\r\n  }\r\n  &__delivery {\r\n    .el-button {\r\n      line-height: 1.5;\r\n      height: auto;\r\n      cursor: pointer;\r\n      color: rgb(255, 102, 51);\r\n      transition: $transition;\r\n      font-weight: 500;\r\n      background-color: transparent;\r\n      border: none;\r\n      border-color: none;\r\n      padding: 0;\r\n      font-size: 16px;\r\n      border-radius: 0;\r\n      span {\r\n        display: flex;\r\n        gap: 13px;\r\n      }\r\n    }\r\n  }\r\n  .el-dialog {\r\n    margin: auto;\r\n    background: #fff;\r\n    border-radius: $border;\r\n    box-shadow: none;\r\n    width: 1100px;\r\n    padding: 32px;\r\n  }\r\n  .el-dialog__header {\r\n    padding: 0;\r\n    padding-bottom: 0;\r\n    margin-right: 0;\r\n    margin-bottom: 12px;\r\n    height: min-content;\r\n    span {\r\n      font-size: 32px;\r\n      font-weight: 700;\r\n      color: $grey-dark;\r\n      line-height: 1.3;\r\n      display: block;\r\n    }\r\n  }\r\n  .el-dialog__headerbtn {\r\n    position: absolute;\r\n    top: 32px;\r\n    right: 32px;\r\n    padding: 0;\r\n    width: 32px;\r\n    height: 32px;\r\n    background: rgb(245, 245, 247);\r\n    cursor: pointer;\r\n    font-size: 0;\r\n    border-radius: 8px;\r\n    &::after {\r\n      content: url(\"@/img/icon/close.svg\");\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n  .el-dialog__body {\r\n    padding: 0;\r\n    color: inherit;\r\n    font-size: inherit;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAwHA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,MAAK,QAAS,KAAK;AAC5B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,KAAK;MACpBC,GAAG,EAAE,OAAO;MACZC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE,mBAAmB;QAAEC,IAAI,EAAE;MAAkB,CAAC;IAChE,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAM;UAAER;QAAK,IAAI,MAAMF,KAAK,CAACW,GAAG,CAAE,4CAA2C,CAAC;QAE9E,IAAI,CAACC,OAAM,GAAIV,IAAI;MACrB,EAAE,OAAOW,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACD,MAAMG,aAAaA,CAACC,GAAG,EAAEC,IAAI,EAAE;MAC7B,IAAI;QACF,MAAM;UAAEhB;QAAK,IAAI,MAAMF,KAAK,CAACW,GAAG,CAC7B,2FAA0FM,GAAI,IAAGC,IAAK,yBACzG,CAAC;QAED,MAAMV,IAAG,GACPN,IAAI,CAACiB,QAAQ,CAACC,mBAAmB,CAACC,aAAa,CAAC,CAAC,CAAC,CAACC,SAAS,CAACC,gBAAe,CACzEC,gBAAgB;MACvB,EAAE,OAAOX,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF;EACF,CAAC;EACDY,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,YAAY,CAAC,CAAC;EACrB,CAAC;EACDgB,KAAKA,CAAA,EAAG;IACN,MAAM;MAAEd;IAAQ,IAAIX,MAAM,CAAC,SAAS,CAAC;IACrC,OAAO;MACLW;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}