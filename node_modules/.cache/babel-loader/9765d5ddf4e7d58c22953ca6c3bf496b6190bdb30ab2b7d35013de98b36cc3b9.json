{"ast":null,"code":"import axios from \"axios\";\nimport { inject } from \"vue\";\nexport default {\n  data() {\n    return {\n      order: [],\n      formatted\n    };\n  },\n  methods: {\n    async fetchOrder() {\n      try {\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/orders?number=${this.historyOrder}`);\n        this.order = data[0];\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    dateFormat(dayDate, yearDate) {\n      console.log(dayDate);\n      const [day, month] = dayDate.split(\".\");\n      const date = new Date(yearDate, month - 1, day);\n      const months = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\n    }\n  },\n  mounted() {\n    this.fetchOrder().then(() => {\n      this.dateFormat(this.order.day, this.order.year);\n    });\n  },\n  setup() {\n    const {\n      historyOrder\n    } = inject(\"cart\");\n    return {\n      historyOrder\n    };\n  }\n};","map":{"version":3,"names":["axios","inject","data","order","formatted","methods","fetchOrder","get","historyOrder","err","console","log","dateFormat","dayDate","yearDate","day","month","split","date","Date","months","mounted","then","year","setup"],"sources":["C:\\gitPages\\rol-shop\\src\\pages\\OrderSuccess.vue"],"sourcesContent":["<template>\r\n  <div class=\"success\">\r\n    <div class=\"container\">\r\n      <div class=\"success__inner\">\r\n        <div class=\"success__top\">\r\n          <div class=\"success__top-left\">\r\n            <p class=\"success__top-text\">\r\n              Спасибо,<br />\r\n              ваш заказ{{ `#${order.number}` }}успешно оформлен\r\n            </p>\r\n          </div>\r\n          <div class=\"success__top-right\">\r\n            <h3 class=\"success__top-title\">Информация о доставке</h3>\r\n            <ul class=\"success__list\">\r\n              <li class=\"success__list-item\">\r\n                <p class=\"success__list-name\">Адрес:</p>\r\n                <p v-if=\"order.address\" class=\"success__list-value\">\r\n                  {{ order.address.address\r\n                  }}{{ order.address.input ? \", подъезд \" + order.address.input : \"\"\r\n                  }}{{ order.address.apartment ? \", кв \" + order.address.apartment : \"\"\r\n                  }}{{ order.address.floor ? \", этаж \" + order.address.floor : \"\" }}\r\n                </p>\r\n              </li>\r\n              <li class=\"success__list-item\">\r\n                <p class=\"success__list-name\">Время:</p>\r\n                <p class=\"success__list-value\">{{}}</p>\r\n              </li>\r\n              <li class=\"success__list-item\">\r\n                <p class=\"success__list-name\">Способ оплаты:</p>\r\n                <p class=\"success__list-value\"></p>\r\n              </li>\r\n              <li class=\"success__list-item\">\r\n                <p class=\"success__list-name\">Сумма к оплате:</p>\r\n                <p class=\"success__list-value\"></p>\r\n              </li>\r\n              <li class=\"success__list-item\">\r\n                <p class=\"success__list-name\">Сдача с</p>\r\n                <p class=\"success__list-value\"></p>\r\n              </li>\r\n              <li class=\"success__list-item\">\r\n                <p class=\"success__list-name\">Кол-во человек:</p>\r\n                <p class=\"success__list-value\"></p>\r\n              </li>\r\n            </ul>\r\n            <div class=\"success__options\">\r\n              <p class=\"success__options-title\">Примечание:</p>\r\n              <p class=\"success__options-text\"></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { inject } from \"vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      order: [],\r\n      formatted\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchOrder() {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://c2ff7a8de0a119c8.mokky.dev/orders?number=${this.historyOrder}`\r\n        );\r\n        this.order = data[0];\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    dateFormat(dayDate, yearDate) {\r\n      console.log(dayDate);\r\n      const [day, month] = dayDate.split(\".\");\r\n      const date = new Date(yearDate, month - 1, day);\r\n\r\n      const months = [\r\n        \"января\",\r\n        \"февраля\",\r\n        \"марта\",\r\n        \"апреля\",\r\n        \"мая\",\r\n        \"июня\",\r\n        \"июля\",\r\n        \"августа\",\r\n        \"сентября\",\r\n        \"октября\",\r\n        \"ноября\",\r\n        \"декабря\",\r\n      ];\r\n\r\n\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchOrder().then(() => {\r\n      this.dateFormat(this.order.day, this.order.year);\r\n    });\r\n  },\r\n  setup() {\r\n    const { historyOrder } = inject(\"cart\");\r\n\r\n    return {\r\n      historyOrder,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"],"mappings":"AAwDA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,MAAK,QAAS,KAAK;AAC5B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAM;UAAEJ;QAAK,IAAI,MAAMF,KAAK,CAACO,GAAG,CAC7B,oDAAmD,IAAI,CAACC,YAAa,EACxE,CAAC;QACD,IAAI,CAACL,KAAI,GAAID,IAAI,CAAC,CAAC,CAAC;MACtB,EAAE,OAAOO,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACDG,UAAUA,CAACC,OAAO,EAAEC,QAAQ,EAAE;MAC5BJ,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;MACpB,MAAM,CAACE,GAAG,EAAEC,KAAK,IAAIH,OAAO,CAACI,KAAK,CAAC,GAAG,CAAC;MACvC,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACL,QAAQ,EAAEE,KAAI,GAAI,CAAC,EAAED,GAAG,CAAC;MAE/C,MAAMK,MAAK,GAAI,CACb,QAAQ,EACR,SAAS,EACT,OAAO,EACP,QAAQ,EACR,KAAK,EACL,MAAM,EACN,MAAM,EACN,SAAS,EACT,UAAU,EACV,SAAS,EACT,QAAQ,EACR,SAAS,CACV;IAGH;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,UAAU,CAAC,CAAC,CAACgB,IAAI,CAAC,MAAM;MAC3B,IAAI,CAACV,UAAU,CAAC,IAAI,CAACT,KAAK,CAACY,GAAG,EAAE,IAAI,CAACZ,KAAK,CAACoB,IAAI,CAAC;IAClD,CAAC,CAAC;EACJ,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAM;MAAEhB;IAAa,IAAIP,MAAM,CAAC,MAAM,CAAC;IAEvC,OAAO;MACLO;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}