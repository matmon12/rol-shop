{"ast":null,"code":"import { ref, inject, computed } from 'vue';\nimport axios from 'axios';\nimport { useStore, mapState } from 'vuex';\nexport default {\n  props: {\n    geocoderCoord: Function\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {},\n  computed: {\n    ...mapState({\n      polygonCoord1: state => state.map.polygonCoord1\n    })\n  },\n  setup(props) {\n    const store = useStore();\n    const polygonCoord1 = mapState({\n      polygonCoord1: state => state.map.polygonCoord1\n    });\n    const polygonCoord2 = computed(() => store.state.polygonCoord2);\n    const polygonCoord3 = computed(() => store.state.polygonCoord3);\n    const {\n      coord\n    } = inject(\"address\");\n    const zoom = ref(16);\n    let map, marker;\n    console.log(polygonCoord1.value);\n    const initMap = async () => {\n      await ymaps3.ready;\n      const {\n        YMap,\n        YMapDefaultSchemeLayer,\n        YMapDefaultFeaturesLayer,\n        YMapMarker,\n        YMapFeature,\n        YMapListener,\n        YMapControls,\n        YMapControlButton\n      } = ymaps3;\n      map = new YMap(document.getElementById(\"map\"), {\n        location: {\n          center: coord.value,\n          zoom: zoom.value\n        }\n      });\n      console.log(ymaps3);\n      // стили\n      const layer = new YMapDefaultSchemeLayer({\n        customization: [{\n          tags: {\n            any: [\"traffic_light\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"entrance\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"road\"],\n            none: [\"road_1\", \"road_2\", \"road_3\", \"road_4\", \"road_5\", \"road_6\", \"road_7\"]\n          },\n          elements: \"label.icon\",\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"building\", \"address\", \"fence\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"transit\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }]\n      });\n      map.addChild(layer);\n      map.addChild(new YMapDefaultFeaturesLayer());\n\n      // маркер\n      const markerElement = document.createElement(\"div\");\n      markerElement.className = \"icon-marker\";\n      marker = new YMapMarker({\n        coordinates: coord.value\n      }, markerElement);\n      map.addChild(marker);\n\n      // полигоны\n      // const polygon1 = new YMapFeature({\n      //   geometry: {\n      //     type: \"Polygon\",\n      //     coordinates: [polygonCoord1.value],\n      //   },\n      //   style: {\n      //     stroke: [{ color: \"#ffc700\", width: 2 }],\n      //     fill: \"#ffc80059\",\n      //   },\n      // });\n      // const polygon2 = new YMapFeature({\n      //   geometry: {\n      //     type: \"Polygon\",\n      //     coordinates: [polygonCoord2.value],\n      //   },\n      //   style: {\n      //     stroke: [{ color: \"#55b20b\", width: 2 }],\n      //     fill: \"#56b20b50\",\n      //   },\n      // });\n      // const polygon3 = new YMapFeature({\n      //   geometry: {\n      //     type: \"Polygon\",\n      //     coordinates: [polygonCoord3.value],\n      //   },\n      //   style: {\n      //     stroke: [{ color: \"#f44837\", width: 2 }],\n      //     fill: \"#f4473752\",\n      //   },\n      // });\n      // map.addChild(polygon1);\n      // map.addChild(polygon2);\n      // map.addChild(polygon3);\n\n      // обработка клика / перемещение по карте по клику\n      function changeMapPosition(location, camera) {\n        map.update({\n          location: {\n            ...location,\n            duration: 1000\n          },\n          camera\n        });\n      }\n      const click = (object, event) => {\n        changeMapPosition({\n          center: [event.coordinates[0], event.coordinates[1]],\n          zoom: zoom.value\n        }, {\n          tilt: Math.PI / 180\n        });\n        coord.value = [event.coordinates[0], event.coordinates[1]];\n        marker.update({\n          coordinates: coord.value\n        });\n        // геокодер\n        props.geocoderCoord(event.coordinates[0], event.coordinates[1]);\n      };\n      const mapListener = new YMapListener({\n        onClick: click\n      });\n      map.addChild(mapListener);\n    };\n    const geocoderAddress = async item => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${item}&format=json&lang=ru_RU`);\n        const address = data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;\n        const arrayCoord = address.split(\" \");\n\n        // перемещение по карте\n        map.update({\n          location: {\n            ...{\n              center: [arrayCoord[0], arrayCoord[1]],\n              zoom: zoom.value\n            },\n            duration: 1000\n          },\n          tilt: Math.PI / 180\n        });\n        coord.value = [arrayCoord[0], arrayCoord[1]];\n        marker.update({\n          coordinates: coord.value\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    return {\n      initMap,\n      map,\n      marker,\n      coord,\n      zoom,\n      geocoderAddress\n    };\n  }\n};","map":{"version":3,"names":["ref","inject","computed","axios","useStore","mapState","props","geocoderCoord","Function","mounted","initMap","methods","polygonCoord1","state","map","setup","store","polygonCoord2","polygonCoord3","coord","zoom","marker","console","log","value","ymaps3","ready","YMap","YMapDefaultSchemeLayer","YMapDefaultFeaturesLayer","YMapMarker","YMapFeature","YMapListener","YMapControls","YMapControlButton","document","getElementById","location","center","layer","customization","tags","any","stylers","visibility","none","elements","addChild","markerElement","createElement","className","coordinates","changeMapPosition","camera","update","duration","click","object","event","tilt","Math","PI","mapListener","onClick","geocoderAddress","item","data","get","address","response","GeoObjectCollection","featureMember","GeoObject","Point","pos","arrayCoord","split","err"],"sources":["C:\\gitPages\\rol-shop\\src\\components\\Map.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport {ref, inject, computed} from 'vue'; \r\nimport axios from 'axios';\r\nimport { useStore, mapState } from 'vuex';\r\n\r\nexport default {\r\n  props: {\r\n    geocoderCoord: Function\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      polygonCoord1: state => state.map.polygonCoord1,\r\n    })\r\n  },\r\n  setup(props) {\r\n    const store = useStore();\r\n    const  polygonCoord1  = mapState({\r\n      polygonCoord1: state => state.map.polygonCoord1,\r\n    });\r\n    const polygonCoord2 = computed(() => store.state.polygonCoord2);\r\n    const polygonCoord3 = computed(() => store.state.polygonCoord3);\r\n    const { coord} = inject(\"address\");\r\n    const zoom = ref(16);\r\n    let map, marker;\r\n\r\n    console.log(polygonCoord1.value);\r\n\r\n    const initMap = async () => {\r\n      await ymaps3.ready;\r\n      const {\r\n        YMap,\r\n        YMapDefaultSchemeLayer,\r\n        YMapDefaultFeaturesLayer,\r\n        YMapMarker,\r\n        YMapFeature,\r\n        YMapListener,\r\n        YMapControls,\r\n        YMapControlButton,\r\n      } = ymaps3;\r\n      map = new YMap(document.getElementById(\"map\"), {\r\n        location: {\r\n          center: coord.value,\r\n          zoom: zoom.value,\r\n        },\r\n      });\r\n\r\n      console.log(ymaps3)\r\n      // стили\r\n      const layer = new YMapDefaultSchemeLayer({\r\n        customization: [\r\n          {\r\n            tags: {\r\n              any: [\"traffic_light\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"entrance\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"road\"],\r\n              none: [\r\n                \"road_1\",\r\n                \"road_2\",\r\n                \"road_3\",\r\n                \"road_4\",\r\n                \"road_5\",\r\n                \"road_6\",\r\n                \"road_7\",\r\n              ],\r\n            },\r\n            elements: \"label.icon\",\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"building\", \"address\", \"fence\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"transit\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n        ],\r\n      });\r\n      map.addChild(layer);\r\n      map.addChild(new YMapDefaultFeaturesLayer());\r\n\r\n      // маркер\r\n      const markerElement = document.createElement(\"div\");\r\n      markerElement.className = \"icon-marker\";\r\n      marker = new YMapMarker({ coordinates: coord.value }, markerElement);\r\n      map.addChild(marker);\r\n\r\n      // полигоны\r\n      // const polygon1 = new YMapFeature({\r\n      //   geometry: {\r\n      //     type: \"Polygon\",\r\n      //     coordinates: [polygonCoord1.value],\r\n      //   },\r\n      //   style: {\r\n      //     stroke: [{ color: \"#ffc700\", width: 2 }],\r\n      //     fill: \"#ffc80059\",\r\n      //   },\r\n      // });\r\n      // const polygon2 = new YMapFeature({\r\n      //   geometry: {\r\n      //     type: \"Polygon\",\r\n      //     coordinates: [polygonCoord2.value],\r\n      //   },\r\n      //   style: {\r\n      //     stroke: [{ color: \"#55b20b\", width: 2 }],\r\n      //     fill: \"#56b20b50\",\r\n      //   },\r\n      // });\r\n      // const polygon3 = new YMapFeature({\r\n      //   geometry: {\r\n      //     type: \"Polygon\",\r\n      //     coordinates: [polygonCoord3.value],\r\n      //   },\r\n      //   style: {\r\n      //     stroke: [{ color: \"#f44837\", width: 2 }],\r\n      //     fill: \"#f4473752\",\r\n      //   },\r\n      // });\r\n      // map.addChild(polygon1);\r\n      // map.addChild(polygon2);\r\n      // map.addChild(polygon3);\r\n\r\n      // обработка клика / перемещение по карте по клику\r\n      function changeMapPosition(location, camera) {\r\n        map.update({ location: { ...location, duration: 1000 }, camera });\r\n      }\r\n      const click = (object, event) => {\r\n        changeMapPosition(\r\n          {\r\n            center: [event.coordinates[0], event.coordinates[1]],\r\n            zoom: zoom.value,\r\n          },\r\n          { tilt: Math.PI / 180 }\r\n        );\r\n        coord.value = [event.coordinates[0], event.coordinates[1]];\r\n        marker.update({ coordinates: coord.value });\r\n        // геокодер\r\n        props.geocoderCoord(event.coordinates[0], event.coordinates[1]);\r\n      };\r\n      const mapListener = new YMapListener({\r\n        onClick: click,\r\n      });\r\n      map.addChild(mapListener);\r\n    };\r\n\r\n    const geocoderAddress = async (item) => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${item}&format=json&lang=ru_RU`\r\n        );\r\n\r\n        const address =\r\n          data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;\r\n\r\n        const arrayCoord = address.split(\" \");\r\n\r\n        // перемещение по карте\r\n        map.update({\r\n          location: {\r\n            ...{\r\n              center: [arrayCoord[0], arrayCoord[1]],\r\n              zoom: zoom.value,\r\n            },\r\n            duration: 1000,\r\n          },\r\n          tilt: Math.PI / 180,\r\n        });\r\n        coord.value = [arrayCoord[0], arrayCoord[1]];\r\n        marker.update({ coordinates: coord.value });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    return {\r\n      initMap,\r\n      map,\r\n      marker,\r\n      coord,\r\n      zoom,\r\n      geocoderAddress,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#map {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}