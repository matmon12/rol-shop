{"ast":null,"code":"import { inject, computed, getCurrentInstance, toRaw, watch } from 'vue';\nimport { isEqual, get } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport { selectKey, selectGroupKey } from './token.mjs';\nimport { isObject } from '@vue/shared';\nimport { escapeStringRegexp } from '../../../utils/strings.mjs';\nfunction useOption(props, states) {\n  const select = inject(selectKey);\n  const selectGroup = inject(selectGroupKey, {\n    disabled: false\n  });\n  const itemSelected = computed(() => {\n    if (!select.props.multiple) {\n      return isEqual(props.value, select.props.modelValue);\n    } else {\n      return contains(select.props.modelValue, props.value);\n    }\n  });\n  const limitReached = computed(() => {\n    if (select.props.multiple) {\n      const modelValue = select.props.modelValue || [];\n      return !itemSelected.value && modelValue.length >= select.props.multipleLimit && select.props.multipleLimit > 0;\n    } else {\n      return false;\n    }\n  });\n  const currentLabel = computed(() => {\n    return props.label || (isObject(props.value) ? \"\" : props.value);\n  });\n  const currentValue = computed(() => {\n    return props.value || props.label || \"\";\n  });\n  const isDisabled = computed(() => {\n    return props.disabled || states.groupDisabled || limitReached.value;\n  });\n  const instance = getCurrentInstance();\n  const contains = (arr = [], target) => {\n    if (!isObject(props.value)) {\n      return arr && arr.includes(target);\n    } else {\n      const valueKey = select.props.valueKey;\n      return arr && arr.some(item => {\n        return toRaw(get(item, valueKey)) === get(target, valueKey);\n      });\n    }\n  };\n  const hoverItem = () => {\n    if (!props.disabled && !selectGroup.disabled) {\n      select.states.hoveringIndex = select.optionsArray.indexOf(instance.proxy);\n    }\n  };\n  const updateOption = query => {\n    const regexp = new RegExp(escapeStringRegexp(query), \"i\");\n    states.visible = regexp.test(currentLabel.value) || props.created;\n  };\n  watch(() => currentLabel.value, () => {\n    if (!props.created && !select.props.remote) select.setSelected();\n  });\n  watch(() => props.value, (val, oldVal) => {\n    const {\n      remote,\n      valueKey\n    } = select.props;\n    if (!isEqual(val, oldVal)) {\n      select.onOptionDestroy(oldVal, instance.proxy);\n      select.onOptionCreate(instance.proxy);\n    }\n    if (!props.created && !remote) {\n      if (valueKey && isObject(val) && isObject(oldVal) && val[valueKey] === oldVal[valueKey]) {\n        return;\n      }\n      select.setSelected();\n    }\n  });\n  watch(() => selectGroup.disabled, () => {\n    states.groupDisabled = selectGroup.disabled;\n  }, {\n    immediate: true\n  });\n  return {\n    select,\n    currentLabel,\n    currentValue,\n    itemSelected,\n    isDisabled,\n    hoverItem,\n    updateOption\n  };\n}\nexport { useOption };","map":{"version":3,"names":["useOption","props","states","select","inject","selectKey","selectGroup","selectGroupKey","disabled","itemSelected","computed","multiple","isEqual","value","modelValue","contains","limitReached","length","multipleLimit","currentLabel","label","isObject","currentValue","isDisabled","groupDisabled","instance","getCurrentInstance","arr","target","includes","valueKey","some","item","toRaw","get","hoverItem","hoveringIndex","optionsArray","indexOf","proxy","updateOption","query","regexp","RegExp","escapeStringRegexp","visible","test","created","watch","remote","setSelected","val","oldVal","onOptionDestroy","onOptionCreate","immediate"],"sources":["../../../../../../packages/components/select/src/useOption.ts"],"sourcesContent":["// @ts-nocheck\nimport { computed, getCurrentInstance, inject, toRaw, watch } from 'vue'\nimport { get, isEqual } from 'lodash-unified'\nimport { escapeStringRegexp, isObject } from '@element-plus/utils'\nimport { selectGroupKey, selectKey } from './token'\n\nexport function useOption(props, states) {\n  // inject\n  const select = inject(selectKey)\n  const selectGroup = inject(selectGroupKey, { disabled: false })\n\n  // computed\n  const itemSelected = computed(() => {\n    if (!select.props.multiple) {\n      return isEqual(props.value, select.props.modelValue)\n    } else {\n      return contains(select.props.modelValue as unknown[], props.value)\n    }\n  })\n\n  const limitReached = computed(() => {\n    if (select.props.multiple) {\n      const modelValue = (select.props.modelValue || []) as unknown[]\n      return (\n        !itemSelected.value &&\n        modelValue.length >= select.props.multipleLimit &&\n        select.props.multipleLimit > 0\n      )\n    } else {\n      return false\n    }\n  })\n\n  const currentLabel = computed(() => {\n    return props.label || (isObject(props.value) ? '' : props.value)\n  })\n\n  const currentValue = computed(() => {\n    return props.value || props.label || ''\n  })\n\n  const isDisabled = computed(() => {\n    return props.disabled || states.groupDisabled || limitReached.value\n  })\n\n  const instance = getCurrentInstance()\n\n  const contains = (arr = [], target) => {\n    if (!isObject(props.value)) {\n      return arr && arr.includes(target)\n    } else {\n      const valueKey = select.props.valueKey\n      return (\n        arr &&\n        arr.some((item) => {\n          return toRaw(get(item, valueKey)) === get(target, valueKey)\n        })\n      )\n    }\n  }\n\n  const hoverItem = () => {\n    if (!props.disabled && !selectGroup.disabled) {\n      select.states.hoveringIndex = select.optionsArray.indexOf(instance.proxy)\n    }\n  }\n\n  const updateOption = (query: string) => {\n    const regexp = new RegExp(escapeStringRegexp(query), 'i')\n    states.visible = regexp.test(currentLabel.value) || props.created\n  }\n\n  watch(\n    () => currentLabel.value,\n    () => {\n      if (!props.created && !select.props.remote) select.setSelected()\n    }\n  )\n\n  watch(\n    () => props.value,\n    (val, oldVal) => {\n      const { remote, valueKey } = select.props\n\n      if (!isEqual(val, oldVal)) {\n        select.onOptionDestroy(oldVal, instance.proxy)\n        select.onOptionCreate(instance.proxy)\n      }\n\n      if (!props.created && !remote) {\n        if (\n          valueKey &&\n          isObject(val) &&\n          isObject(oldVal) &&\n          val[valueKey] === oldVal[valueKey]\n        ) {\n          return\n        }\n        select.setSelected()\n      }\n    }\n  )\n\n  watch(\n    () => selectGroup.disabled,\n    () => {\n      states.groupDisabled = selectGroup.disabled\n    },\n    { immediate: true }\n  )\n\n  return {\n    select,\n    currentLabel,\n    currentValue,\n    itemSelected,\n    isDisabled,\n    hoverItem,\n    updateOption,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}