{"ast":null,"code":"import { ref } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      loading: false,\n      paths: [{\n        name: \"Адрес доставки\",\n        path: \"/rol-shop/address\"\n      }, {\n        name: \"Добавление адреса доставки\",\n        path: \"/rol-shop/map\"\n      }],\n      result: [],\n      area: \"22.702357,46.966060,39.940511,52.517961\",\n      rules: {\n        address: [{\n          required: true,\n          message: \"Нужно заполнить!\",\n          trigger: \"blur\"\n        }, {\n          min: 5,\n          message: \"Слишком короткий!\",\n          trigger: \"blur\"\n        }, {\n          validator: this.checkGeo,\n          trigger: \"sumbit\"\n        }],\n        other: [{\n          required: true,\n          message: \"Нужно заполнить!\",\n          trigger: \"blur\"\n        }, {\n          min: 1,\n          max: 5,\n          message: \"Неправильный номер!\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    async fetchAddress(value, cb) {\n      try {\n        if (value) {\n          const {\n            data\n          } = await axios.get(`https://suggest-maps.yandex.ru/v1/suggest?apikey=00748542-2e0b-439d-864b-98b4baac2c5f&text=${value}&bbox=${this.area}&lang=ru_RU&strict_bounds=1&print_address=1`);\n          this.result = data.results.map(item => ({\n            address: item.address.formatted_address,\n            house: item.address.component.find(pl => pl.kind == \"HOUSE\") ? item.address.component.find(pl => pl.kind == \"HOUSE\").name : \"\"\n          }));\n          // возвращение данных\n          cb(this.result);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async postAddress() {\n      try {\n        this.loading = true;\n        const {\n          data\n        } = await axios.post(`https://c2ff7a8de0a119c8.mokky.dev/address`, {\n          address: this.form.address,\n          house: this.form.house,\n          input: this.form.input,\n          floor: this.form.floor,\n          apartment: this.form.apartment\n        });\n        this.form.address = \"\";\n        this.form.house = \"\";\n        this.form.input = \"\";\n        this.form.floor = \"\";\n        this.form.apartment = \"\";\n      } catch (err) {\n        console.log(err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleSelect(item) {\n      // заполнение полей\n      this.form.address = item.address;\n      this.form.house = item.house;\n\n      // перемещение по карте\n      // this.$refs.Map.geocoderAddress(item.address);\n    },\n    sumbitForm(forName) {\n      forName.validate(valid => {\n        if (valid) {\n          this.postAddress();\n        } else {\n          return false;\n        }\n      });\n    }\n  },\n  setup() {\n    const form = ref({\n      address: \"\",\n      house: \"\",\n      input: \"\",\n      floor: \"\",\n      apartment: \"\"\n    });\n    const ruleFormRef = ref();\n    const geocoderCoord = async (lat, long) => {\n      try {\n        form.value.address = \"\";\n        form.value.house = \"\";\n        const {\n          data\n        } = await axios.get(`https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${lat},${long}&format=json&lang=ru_RU`);\n        const path = data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData;\n\n        // заполнение полей адреса и дом\n        if (path.kind == \"house\") {\n          form.value.house = path.Address.Components.find(item => item.kind == \"house\").name;\n        }\n        const filteredArray = path.Address.Components.filter(item => [\"street\", \"metro\", \"district\", \"area\", \"province\", \"railway_station\", \"station\", \"vegetation\", \"other\", \"house\"].includes(item.kind));\n        const names = filteredArray.map(item => item.name).join(\", \");\n        // адрес с карты в инпут  \n        form.value.address = names;\n        // form.value.name = form.value.address;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const geocoderAddress = async item => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${item}&format=json&lang=ru_RU`);\n        const address = data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;\n        const arrayCoord = address.split(\" \");\n\n        // перемещение по карте\n        map.update({\n          location: {\n            ...{\n              center: [arrayCoord[0], arrayCoord[1]],\n              zoom: zoom.value\n            },\n            duration: 1000\n          },\n          tilt: Math.PI / 180\n        });\n        coord = [arrayCoord[0], arrayCoord[1]];\n        marker.update({\n          coordinates: coord\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    // проверка адреса на доступность для доставки\n    const checkGeo = (rule, value, callback) => {\n      if (value !== 0 && value) {\n        this.$refs.Map.geocoderAddress(value);\n        callback(new Error('Доставка по этому адресу не осуществляется!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      geocoderCoord,\n      form,\n      ruleFormRef,\n      checkGeo\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","data","loading","paths","name","path","result","area","rules","address","required","message","trigger","min","validator","checkGeo","other","max","methods","fetchAddress","value","cb","get","results","map","item","formatted_address","house","component","find","pl","kind","err","console","log","postAddress","post","form","input","floor","apartment","handleSelect","sumbitForm","forName","validate","valid","setup","ruleFormRef","geocoderCoord","lat","long","response","GeoObjectCollection","featureMember","GeoObject","metaDataProperty","GeocoderMetaData","Address","Components","filteredArray","filter","includes","names","join","geocoderAddress","Point","pos","arrayCoord","split","update","location","center","zoom","duration","tilt","Math","PI","coord","marker","coordinates","rule","callback","$refs","Map","Error"],"sources":["C:\\gitPages\\rol-shop\\src\\pages\\AddressMap.vue"],"sourcesContent":["<template>\r\n  <div class=\"destination\">\r\n    <div class=\"container\">\r\n      <Crumbs :paths=\"paths\" class=\"crumbs\" />\r\n\r\n      <h1 class=\"destination-title\">Добавление адреса доставки</h1>\r\n      <div class=\"destination__inner\">\r\n        <div class=\"destination__form\">\r\n          <h6 class=\"destination__form-title\">\r\n            Введите адрес <br />или выберите на карте\r\n          </h6>\r\n          <el-form ref=\"ruleFormRef\" :model=\"form\">\r\n            <el-form-item prop=\"address\" :rules=\"rules.address\">\r\n              <el-autocomplete\r\n                v-model=\"form.address\"\r\n                :fetch-suggestions=\"fetchAddress\"\r\n                :trigger-on-focus=\"false\"\r\n                placeholder=\"Введите адрес\"\r\n                @select=\"handleSelect\"\r\n                :debounce=\"1000\"\r\n                clearable\r\n                fit-input-width\r\n                popper-class=\"my-autocomplete\"\r\n                class=\"destination__form-search\"\r\n              >\r\n                <template #prefix>\r\n                  <img src=\"@/img/icon/search.svg\" alt=\"\" />\r\n                </template>\r\n                <template #default=\"{ item }\">\r\n                  <div class=\"address\">{{ item.address }}</div>\r\n                </template>\r\n              </el-autocomplete>\r\n            </el-form-item>\r\n            <div class=\"destination__list\">\r\n              <el-form-item prop=\"house\" :rules=\"rules.other\">\r\n                <p class=\"destination__list-title\">Номер дома</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.house\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item prop=\"input\" :rules=\"rules.other\">\r\n                <p class=\"destination__list-title\">Подъезд</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.input\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item prop=\"floor\" :rules=\"rules.other\">\r\n                <p class=\"destination__list-title\">Этаж</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.floor\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item prop=\"apartment\" :rules=\"rules.other\">\r\n                <p class=\"destination__list-title\">Квартира</p>\r\n                <el-input\r\n                  class=\"destination__list-input\"\r\n                  placeholder=\"Номер\"\r\n                  v-model=\"form.apartment\"\r\n                />\r\n              </el-form-item>\r\n            </div>\r\n            <el-form-item>\r\n              <el-button\r\n                class=\"destination__btn\"\r\n                color=\"#00cc2d\"\r\n                @click=\"sumbitForm(ruleFormRef)\"\r\n                :loading=\"loading\"\r\n              >\r\n                <template #loading>\r\n                  <div class=\"custom-loading\">\r\n                    <svg class=\"circular\" viewBox=\"-10, -10, 50, 50\">\r\n                      <path\r\n                        class=\"path\"\r\n                        d=\"\r\n                          M 30 15\r\n                          L 28 17\r\n                          M 25.61 25.61\r\n                          A 15 15, 0, 0, 1, 15 30\r\n                          A 15 15, 0, 1, 1, 27.99 7.5\r\n                          L 15 15\r\n                        \"\r\n                        style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </template>\r\n                {{ loading ? \"Идет отправка\" : \"Сохранить адрес\" }}\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n\r\n        <div class=\"destination__map\">\r\n          <Map :geocoderCoord=\"geocoderCoord\" ref=\"Map\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      paths: [\r\n        { name: \"Адрес доставки\", path: \"/rol-shop/address\" },\r\n        { name: \"Добавление адреса доставки\", path: \"/rol-shop/map\" },\r\n      ],\r\n      result: [],\r\n      area: \"22.702357,46.966060,39.940511,52.517961\",\r\n      rules: {\r\n        address: [\r\n          { required: true, message: \"Нужно заполнить!\", trigger: \"blur\" },\r\n          { min: 5, message: \"Слишком короткий!\", trigger: \"blur\" },\r\n          { validator: this.checkGeo, trigger: \"sumbit\"}\r\n        ],\r\n        other: [\r\n          { required: true, message: \"Нужно заполнить!\", trigger: \"blur\" },\r\n          { min: 1, max: 5, message: \"Неправильный номер!\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchAddress(value, cb) {\r\n      try {\r\n        if (value) {\r\n          const { data } = await axios.get(\r\n            `https://suggest-maps.yandex.ru/v1/suggest?apikey=00748542-2e0b-439d-864b-98b4baac2c5f&text=${value}&bbox=${this.area}&lang=ru_RU&strict_bounds=1&print_address=1`\r\n          );\r\n          this.result = data.results.map((item) => ({\r\n            address: item.address.formatted_address,\r\n            house: item.address.component.find((pl) => pl.kind == \"HOUSE\")\r\n              ? item.address.component.find((pl) => pl.kind == \"HOUSE\").name\r\n              : \"\",\r\n          }));\r\n          // возвращение данных\r\n          cb(this.result);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    async postAddress() {\r\n      try {\r\n        this.loading = true;\r\n        const { data } = await axios.post(`https://c2ff7a8de0a119c8.mokky.dev/address`, {\r\n          address: this.form.address,\r\n          house: this.form.house,\r\n          input: this.form.input,\r\n          floor: this.form.floor,\r\n          apartment: this.form.apartment,\r\n        });\r\n\r\n        this.form.address = \"\";\r\n        this.form.house = \"\";\r\n        this.form.input = \"\";\r\n        this.form.floor = \"\";\r\n        this.form.apartment = \"\";\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    handleSelect(item) {\r\n      // заполнение полей\r\n      this.form.address = item.address;\r\n      this.form.house = item.house;\r\n\r\n      // перемещение по карте\r\n      // this.$refs.Map.geocoderAddress(item.address);\r\n    },\r\n    sumbitForm(forName) {\r\n      forName.validate((valid) => {\r\n        if (valid) {\r\n          this.postAddress();\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n\r\n  setup() {\r\n    const form = ref({\r\n      address: \"\",\r\n      house: \"\",\r\n      input: \"\",\r\n      floor: \"\",\r\n      apartment: \"\",\r\n    });\r\n    const ruleFormRef = ref();\r\n\r\n    const geocoderCoord = async (lat, long) => {\r\n      try {\r\n        form.value.address = \"\";\r\n        form.value.house = \"\";\r\n\r\n        const { data } = await axios.get(\r\n          `https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${lat},${long}&format=json&lang=ru_RU`\r\n        );\r\n\r\n        const path =\r\n          data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty\r\n            .GeocoderMetaData;\r\n\r\n        // заполнение полей адреса и дом\r\n        if (path.kind == \"house\") {\r\n          form.value.house = path.Address.Components.find(\r\n            (item) => item.kind == \"house\"\r\n          ).name;\r\n        }\r\n        const filteredArray = path.Address.Components.filter((item) =>\r\n          [\r\n            \"street\",\r\n            \"metro\",\r\n            \"district\",\r\n            \"area\",\r\n            \"province\",\r\n            \"railway_station\",\r\n            \"station\",\r\n            \"vegetation\",\r\n            \"other\",\r\n            \"house\",\r\n          ].includes(item.kind)\r\n        );\r\n        const names = filteredArray.map((item) => item.name).join(\", \");\r\n        // адрес с карты в инпут  \r\n        form.value.address = names;\r\n        // form.value.name = form.value.address;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    const geocoderAddress = async (item) => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://geocode-maps.yandex.ru/1.x/?apikey=37720b8b-dc03-4346-b6a4-3ae3458e9af6&geocode=${item}&format=json&lang=ru_RU`\r\n        );\r\n\r\n        const address =\r\n          data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;\r\n\r\n        const arrayCoord = address.split(\" \");\r\n\r\n        // перемещение по карте\r\n        map.update({\r\n          location: {\r\n            ...{\r\n              center: [arrayCoord[0], arrayCoord[1]],\r\n              zoom: zoom.value,\r\n            },\r\n            duration: 1000,\r\n          },\r\n          tilt: Math.PI / 180,\r\n        });\r\n        coord = [arrayCoord[0], arrayCoord[1]];\r\n        marker.update({ coordinates: coord });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    // проверка адреса на доступность для доставки\r\n    const checkGeo = (rule, value, callback) =>  {\r\n      if (value !== 0 && value) {\r\n        this.$refs.Map.geocoderAddress(value);\r\n        callback(new Error('Доставка по этому адресу не осуществляется!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n\r\n    return {\r\n      geocoderCoord,\r\n      form,\r\n      ruleFormRef,\r\n      checkGeo\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.crumbs {\r\n  margin-bottom: 32px;\r\n}\r\n.destination-title {\r\n  color: $grey-dark;\r\n  font-size: 48px;\r\n  font-weight: 700;\r\n  line-height: 133%;\r\n  margin-bottom: 24px;\r\n}\r\n.destination {\r\n  margin-bottom: 64px;\r\n  &__inner {\r\n    display: flex;\r\n    gap: 24px;\r\n  }\r\n\r\n  &__form {\r\n    height: fit-content;\r\n    min-width: 379px;\r\n    max-width: 379px;\r\n    border-radius: $border;\r\n    background-color: #fff;\r\n    padding: 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 24px;\r\n  }\r\n\r\n  &__form-title {\r\n    color: $grey-dark;\r\n    text-align: center;\r\n    font-weight: 500;\r\n  }\r\n\r\n  &__list {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    row-gap: 24px;\r\n    column-gap: 12px;\r\n    margin-top: 24px;\r\n  }\r\n\r\n  &__list-item {\r\n  }\r\n\r\n  &__list-title {\r\n    color: #9e9e9e;\r\n    font-size: 14px;\r\n    line-height: 142%;\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  &__map {\r\n    // flex-grow: 1;\r\n    width: 100%;\r\n    height: 540px;\r\n    border-radius: $border;\r\n    overflow: hidden;\r\n  }\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n.ymaps-2-1-79-map-copyrights-promo {\r\n  display: none;\r\n}\r\n.icon-marker {\r\n  cursor: pointer;\r\n\r\n  width: 57px;\r\n  height: 57px;\r\n  border-radius: 50%;\r\n\r\n  position: relative;\r\n  transform: translate(-50%, -90%);\r\n  &::after {\r\n    content: url(\"@/img/icon/location.svg\");\r\n  }\r\n}\r\n// inputs\r\n.destination__list-input {\r\n  height: 48px;\r\n  width: 100%;\r\n  background: var(---, #f5f5f7);\r\n  border-radius: $border;\r\n  color: $grey-dark;\r\n  font-weight: 400;\r\n  &::placeholder {\r\n    color: #8f8f8f;\r\n  }\r\n}\r\n// btn\r\n.destination__btn {\r\n  height: 56px;\r\n  padding: 16px 24px;\r\n  color: #fff;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  border-radius: $border;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  margin-top: 16px;\r\n  transition: $transition;\r\n}\r\n\r\n.destination {\r\n  .el-form-item__content {\r\n    line-height: inherit;\r\n    position: relative;\r\n    font-size: inherit;\r\n  }\r\n\r\n  // autocomplete\r\n  .el-autocomplete {\r\n    width: 100%;\r\n  }\r\n  .el-input {\r\n    height: 48px;\r\n    width: 100%;\r\n    background: var(---, #f5f5f7);\r\n    border-radius: $border;\r\n    color: $grey-dark;\r\n    font-weight: 400;\r\n  }\r\n  .el-input__wrapper {\r\n    flex-grow: 1;\r\n    padding: 1px 18px;\r\n    background-color: transparent;\r\n    border-radius: $border;\r\n    cursor: text;\r\n    transition: none;\r\n    transform: none;\r\n    box-shadow: none;\r\n    &:hover,\r\n    &.is-focus {\r\n      box-shadow: none;\r\n    }\r\n  }\r\n  .el-input__prefix-inner > :last-child {\r\n    margin-right: 16px;\r\n  }\r\n  .el-input__inner {\r\n    --el-input-inner-height: 100%;\r\n    width: 100%;\r\n    color: $grey-dark;\r\n    font-size: 16px;\r\n    height: 100%;\r\n    line-height: 1.5;\r\n  }\r\n  .el-input {\r\n    --el-input-placeholder-color: #8f8f8f;\r\n  }\r\n\r\n  // form\r\n  .el-form-item {\r\n    display: flex;\r\n    --font-size: 14px;\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  // loading\r\n  .el-button .custom-loading .circular {\r\n    margin-right: 6px;\r\n    width: 25px;\r\n    height: 25px;\r\n    animation: loading-rotate 2s linear infinite;\r\n  }\r\n  .el-button .custom-loading .circular .path {\r\n    animation: loading-dash 1.5s ease-in-out infinite;\r\n    stroke-dasharray: 90, 150;\r\n    stroke-dashoffset: 0;\r\n    stroke-width: 2;\r\n    stroke: var(--el-button-text-color);\r\n    stroke-linecap: round;\r\n  }\r\n}\r\n\r\n// dropdown\r\n.el-popper.is-light {\r\n  background: #f5f5f7;\r\n  border: 1px solid #bdbdbd;\r\n}\r\n.el-autocomplete__popper.el-popper {\r\n  box-shadow: none;\r\n}\r\n.el-popper {\r\n  border-radius: $border;\r\n  padding: 0px;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  overflow-wrap: normal;\r\n}\r\n.el-autocomplete-suggestion {\r\n  border-radius: $border;\r\n}\r\n// dropdown контейнер\r\n.el-autocomplete-suggestion__wrap {\r\n  max-height: 280px;\r\n  padding: 0;\r\n  border-radius: $border;\r\n}\r\n.el-autocomplete-suggestion li {\r\n  padding: 10px 20px;\r\n  line-height: 1.5;\r\n  cursor: pointer;\r\n  color: $grey-dark;\r\n  font-size: 16px;\r\n  transition: $transition;\r\n  white-space: break-spaces;\r\n  &:not(:last-child) {\r\n    border-bottom: 1px solid #bdbdbd;\r\n  }\r\n  &:hover {\r\n    background-color: #e6e4e4;\r\n  }\r\n}\r\n// очистка поля\r\n.el-input .el-input__clear,\r\n.el-input .el-input__password {\r\n  color: var(--el-input-icon-color);\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n// стрелка\r\n.el-popper__arrow::before {\r\n  width: 10px;\r\n  height: 10px;\r\n  transform: rotate(45deg);\r\n  background: #f5f5f7;\r\n}\r\n.el-popper.is-light .el-popper__arrow::before {\r\n  border: 1px solid #bdbdbd;\r\n  background: #f5f5f7;\r\n}\r\n.el-popper[data-popper-placement^=\"bottom\"] > .el-popper__arrow::before {\r\n  border-top-left-radius: 2px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}