{"ast":null,"code":"import { ref, inject, computed } from \"vue\";\nimport axios from \"axios\";\nimport { useStore, mapState } from \"vuex\";\nimport { prop } from \"vue-class-component\";\nimport * as turf from \"@turf/turf\";\nimport \"vue-yandex-maps\";\nexport default {\n  props: {\n    geocoderCoord: Function,\n    newMarker: Array\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {},\n  setup(props) {\n    const store = useStore();\n    // из store vuex\n    const polygonCoord1 = store.state.map.polygonCoord1;\n    const polygonCoord2 = store.state.map.polygonCoord2;\n    const polygonCoord3 = store.state.map.polygonCoord3;\n    var coord = store.state.map.coord;\n    var arrayCoord = computed(() => store.state.map.arrayCoord);\n    var theme = computed(() => store.state.theme.theme);\n    const zoom = ref(16);\n    let map, marker;\n    const initMap = async () => {\n      await ymaps3.ready;\n      const {\n        YMap,\n        YMapDefaultSchemeLayer,\n        YMapDefaultFeaturesLayer,\n        YMapMarker,\n        YMapFeature,\n        YMapListener,\n        YMapControls,\n        YMapControlButton\n      } = ymaps3;\n      map = new YMap(document.getElementById(\"map\"), {\n        location: {\n          center: coord,\n          zoom: zoom.value\n        }\n      });\n\n      // стили\n      const layer = new YMapDefaultSchemeLayer({\n        theme: theme.value ? \"dark\" : \"light\",\n        customization: [{\n          tags: {\n            any: [\"traffic_light\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"entrance\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"road\"],\n            none: [\"road_1\", \"road_2\", \"road_3\", \"road_4\", \"road_5\", \"road_6\", \"road_7\"]\n          },\n          elements: \"label.icon\",\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"building\", \"address\", \"fence\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }, {\n          tags: {\n            any: [\"transit\"]\n          },\n          stylers: {\n            visibility: \"off\"\n          }\n        }]\n      });\n      map.addChild(layer);\n      map.addChild(new YMapDefaultFeaturesLayer());\n\n      // маркер\n      const markerElement = document.createElement(\"div\");\n      markerElement.className = \"icon-marker\";\n      marker = new YMapMarker({\n        coordinates: coord\n      }, markerElement);\n      map.addChild(marker);\n\n      // маркер точки выдачи\n      if (props.newMarker && props.newMarker.length > 0) {\n        const markerElementDest = document.createElement(\"div\");\n        markerElementDest.className = \"icon-marker\";\n        let markerDest = new YMapMarker({\n          coordinates: props.newMarker\n        }, markerElementDest);\n        map.addChild(markerDest);\n\n        // центр между точками\n        var point1 = turf.point(coord);\n        var point2 = turf.point(props.newMarker);\n        var midpoint = turf.midpoint(point1, point2);\n\n        // расстояние между точками\n        var distance = turf.distance(point1, point2);\n\n        // перемещение к центру\n        map.update({\n          location: {\n            ...{\n              center: midpoint.geometry.coordinates,\n              zoom: calculateZoomLevel(distance)\n            },\n            duration: 1000\n          },\n          tilt: Math.PI / 180\n        });\n      }\n\n      // полигоны\n      const polygon1 = new YMapFeature({\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [polygonCoord1]\n        },\n        style: {\n          stroke: [{\n            color: \"#ffc700\",\n            width: 2\n          }],\n          fill: \"#ffc80059\"\n        }\n      });\n      const polygon2 = new YMapFeature({\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [polygonCoord2]\n        },\n        style: {\n          stroke: [{\n            color: \"#55b20b\",\n            width: 2\n          }],\n          fill: \"#56b20b50\"\n        }\n      });\n      const polygon3 = new YMapFeature({\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [polygonCoord3]\n        },\n        style: {\n          stroke: [{\n            color: \"#f44837\",\n            width: 2\n          }],\n          fill: \"#f4473752\"\n        }\n      });\n      map.addChild(polygon1);\n      map.addChild(polygon2);\n      map.addChild(polygon3);\n\n      // обработка клика / перемещение по карте по клику\n      function changeMapPosition(location, camera) {\n        map.update({\n          location: {\n            ...location,\n            duration: 1000\n          },\n          camera\n        });\n      }\n      const click = (object, event) => {\n        changeMapPosition({\n          center: [event.coordinates[0], event.coordinates[1]],\n          zoom: zoom.value\n        }, {\n          tilt: Math.PI / 180\n        });\n        coord = [event.coordinates[0], event.coordinates[1]];\n        marker.update({\n          coordinates: coord\n        });\n        // геокодер\n        props.geocoderCoord(event.coordinates[0], event.coordinates[1]);\n      };\n      const mapListener = new YMapListener({\n        onClick: click\n      });\n      map.addChild(mapListener);\n    };\n    const moveMap = item => {\n      // преобразование адреса в координаты\n      store.dispatch(\"map/geocoderAddress\", item).then(() => {\n        // перемещение по карте\n        map.update({\n          location: {\n            ...{\n              center: [arrayCoord.value[0], arrayCoord.value[1]],\n              zoom: zoom.value\n            },\n            duration: 1000\n          },\n          tilt: Math.PI / 180\n        });\n        coord = [arrayCoord.value[0], arrayCoord.value[1]];\n        marker.update({\n          coordinates: coord\n        });\n      });\n    };\n    const calculateZoomLevel = distance => {\n      const earthRadius = 6371; // Радиус Земли\n      const pixelWidth = 1.1; // Ширина тайла карты в пикселях\n      const zoom = Math.round(Math.log2(earthRadius * 2 * Math.PI / (distance * pixelWidth)));\n      return zoom;\n    };\n    return {\n      initMap,\n      map,\n      marker,\n      coord,\n      zoom,\n      moveMap\n    };\n  }\n};","map":{"version":3,"names":["ref","inject","computed","axios","useStore","mapState","prop","turf","props","geocoderCoord","Function","newMarker","Array","mounted","initMap","methods","setup","store","polygonCoord1","state","map","polygonCoord2","polygonCoord3","coord","arrayCoord","theme","zoom","marker","ymaps3","ready","YMap","YMapDefaultSchemeLayer","YMapDefaultFeaturesLayer","YMapMarker","YMapFeature","YMapListener","YMapControls","YMapControlButton","document","getElementById","location","center","value","layer","customization","tags","any","stylers","visibility","none","elements","addChild","markerElement","createElement","className","coordinates","length","markerElementDest","markerDest","point1","point","point2","midpoint","distance","update","geometry","calculateZoomLevel","duration","tilt","Math","PI","polygon1","type","style","stroke","color","width","fill","polygon2","polygon3","changeMapPosition","camera","click","object","event","mapListener","onClick","moveMap","item","dispatch","then","earthRadius","pixelWidth","round","log2"],"sources":["C:\\gitPages\\rol-shop\\src\\components\\Map.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, inject, computed } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { useStore, mapState } from \"vuex\";\r\nimport { prop } from \"vue-class-component\";\r\nimport * as turf from \"@turf/turf\";\r\nimport {  } from \"vue-yandex-maps\" \r\n\r\nexport default {\r\n  props: {\r\n    geocoderCoord: Function,\r\n    newMarker: Array,\r\n  },\r\n  mounted() {\r\n\r\n    this.initMap();\r\n  },\r\n  methods: {},\r\n  setup(props) {\r\n    const store = useStore();\r\n    // из store vuex\r\n    const polygonCoord1 = store.state.map.polygonCoord1;\r\n    const polygonCoord2 = store.state.map.polygonCoord2;\r\n    const polygonCoord3 = store.state.map.polygonCoord3;\r\n    var coord = store.state.map.coord;\r\n    var arrayCoord = computed(() => store.state.map.arrayCoord);\r\n    var theme = computed(() => store.state.theme.theme);\r\n\r\n    const zoom = ref(16);\r\n    let map, marker;\r\n\r\n    const initMap = async () => {\r\n      await ymaps3.ready;\r\n      const {\r\n        YMap,\r\n        YMapDefaultSchemeLayer,\r\n        YMapDefaultFeaturesLayer,\r\n        YMapMarker,\r\n        YMapFeature,\r\n        YMapListener,\r\n        YMapControls,\r\n        YMapControlButton,\r\n      } = ymaps3;\r\n      map = new YMap(document.getElementById(\"map\"), {\r\n        location: {\r\n          center: coord,\r\n          zoom: zoom.value,\r\n        },\r\n      });\r\n\r\n      // стили\r\n      const layer = new YMapDefaultSchemeLayer({\r\n        theme: theme.value ? \"dark\" : \"light\",\r\n        customization: [\r\n          {\r\n            tags: {\r\n              any: [\"traffic_light\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"entrance\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"road\"],\r\n              none: [\r\n                \"road_1\",\r\n                \"road_2\",\r\n                \"road_3\",\r\n                \"road_4\",\r\n                \"road_5\",\r\n                \"road_6\",\r\n                \"road_7\",\r\n              ],\r\n            },\r\n            elements: \"label.icon\",\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"building\", \"address\", \"fence\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n          {\r\n            tags: {\r\n              any: [\"transit\"],\r\n            },\r\n            stylers: {\r\n              visibility: \"off\",\r\n            },\r\n          },\r\n        ],\r\n      });\r\n      map.addChild(layer);\r\n      map.addChild(new YMapDefaultFeaturesLayer());\r\n\r\n      // маркер\r\n      const markerElement = document.createElement(\"div\");\r\n      markerElement.className = \"icon-marker\";\r\n      marker = new YMapMarker({ coordinates: coord }, markerElement);\r\n      map.addChild(marker);\r\n\r\n      // маркер точки выдачи\r\n      if (props.newMarker && props.newMarker.length > 0) {\r\n        const markerElementDest = document.createElement(\"div\");\r\n        markerElementDest.className = \"icon-marker\";\r\n        let markerDest = new YMapMarker(\r\n          { coordinates: props.newMarker },\r\n          markerElementDest\r\n        );\r\n        map.addChild(markerDest);\r\n\r\n        // центр между точками\r\n        var point1 = turf.point(coord);\r\n        var point2 = turf.point(props.newMarker);\r\n        var midpoint = turf.midpoint(point1, point2);\r\n\r\n        // расстояние между точками\r\n        var distance = turf.distance(point1, point2);\r\n\r\n        // перемещение к центру\r\n        map.update({\r\n          location: {\r\n            ...{\r\n              center: midpoint.geometry.coordinates,\r\n              zoom: calculateZoomLevel(distance),\r\n            },\r\n            duration: 1000,\r\n          },\r\n          tilt: Math.PI / 180,\r\n        });\r\n      }\r\n\r\n      // полигоны\r\n      const polygon1 = new YMapFeature({\r\n        geometry: {\r\n          type: \"Polygon\",\r\n          coordinates: [polygonCoord1],\r\n        },\r\n        style: {\r\n          stroke: [{ color: \"#ffc700\", width: 2 }],\r\n          fill: \"#ffc80059\",\r\n        },\r\n      });\r\n      const polygon2 = new YMapFeature({\r\n        geometry: {\r\n          type: \"Polygon\",\r\n          coordinates: [polygonCoord2],\r\n        },\r\n        style: {\r\n          stroke: [{ color: \"#55b20b\", width: 2 }],\r\n          fill: \"#56b20b50\",\r\n        },\r\n      });\r\n      const polygon3 = new YMapFeature({\r\n        geometry: {\r\n          type: \"Polygon\",\r\n          coordinates: [polygonCoord3],\r\n        },\r\n        style: {\r\n          stroke: [{ color: \"#f44837\", width: 2 }],\r\n          fill: \"#f4473752\",\r\n        },\r\n      });\r\n      map.addChild(polygon1);\r\n      map.addChild(polygon2);\r\n      map.addChild(polygon3);\r\n\r\n      // обработка клика / перемещение по карте по клику\r\n      function changeMapPosition(location, camera) {\r\n        map.update({ location: { ...location, duration: 1000 }, camera });\r\n      }\r\n      const click = (object, event) => {\r\n        changeMapPosition(\r\n          {\r\n            center: [event.coordinates[0], event.coordinates[1]],\r\n            zoom: zoom.value,\r\n          },\r\n          { tilt: Math.PI / 180 }\r\n        );\r\n        coord = [event.coordinates[0], event.coordinates[1]];\r\n        marker.update({ coordinates: coord });\r\n        // геокодер\r\n        props.geocoderCoord(event.coordinates[0], event.coordinates[1]);\r\n      };\r\n      const mapListener = new YMapListener({\r\n        onClick: click,\r\n      });\r\n      map.addChild(mapListener);\r\n    };\r\n\r\n    const moveMap = (item) => {\r\n      // преобразование адреса в координаты\r\n      store.dispatch(\"map/geocoderAddress\", item).then(() => {\r\n        // перемещение по карте\r\n        map.update({\r\n          location: {\r\n            ...{\r\n              center: [arrayCoord.value[0], arrayCoord.value[1]],\r\n              zoom: zoom.value,\r\n            },\r\n            duration: 1000,\r\n          },\r\n          tilt: Math.PI / 180,\r\n        });\r\n        coord = [arrayCoord.value[0], arrayCoord.value[1]];\r\n        marker.update({ coordinates: coord });\r\n      });\r\n    };\r\n\r\n    const calculateZoomLevel = (distance) => {\r\n      const earthRadius = 6371; // Радиус Земли\r\n      const pixelWidth = 1.1; // Ширина тайла карты в пикселях\r\n      const zoom = Math.round(\r\n        Math.log2((earthRadius * 2 * Math.PI) / (distance * pixelWidth))\r\n      );\r\n\r\n      return zoom;\r\n    };\r\n\r\n    return {\r\n      initMap,\r\n      map,\r\n      marker,\r\n      coord,\r\n      zoom,\r\n      moveMap,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#map {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}