{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"app-top\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Drawer = _resolveComponent(\"Drawer\");\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_Footer = _resolveComponent(\"Footer\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$setup.drawerOpen ? (_openBlock(), _createBlock(_component_Drawer, {\n    key: 0,\n    \"total-price\": $setup.totalPrice,\n    class: \"basket\"\n  }, null, 8 /* PROPS */, [\"total-price\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Header, {\n    onOpenDrawer: $setup.openDrawer,\n    onCloseDrawer: $setup.closeDrawer,\n    \"notif-count\": 2,\n    \"favorite-count\": $setup.countFavorite,\n    \"cart-count\": $setup.cart.length\n  }, null, 8 /* PROPS */, [\"onOpenDrawer\", \"onCloseDrawer\", \"favorite-count\", \"cart-count\"])]), _createVNode(_component_router_view), _createVNode(_component_Footer)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$setup","drawerOpen","_createBlock","_component_Drawer","key","totalPrice","_createCommentVNode","_createVNode","_component_Header","onOpenDrawer","openDrawer","onCloseDrawer","closeDrawer","countFavorite","cart","length","_component_router_view","_component_Footer"],"sources":["C:\\gitPages\\rol-shop\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <div class=\"app-top\">\n      <Drawer v-if=\"drawerOpen\" :total-price=\"totalPrice\" class=\"basket\" />\n      <Header\n        @open-drawer=\"openDrawer\"\n        @close-drawer=\"closeDrawer\"\n        :notif-count=\"2\"\n        :favorite-count=\"countFavorite\"\n        :cart-count=\"cart.length\"\n      />\n    </div>\n    <router-view></router-view>\n\n    <Footer />\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { provide, ref, watch, computed } from \"vue\";\nimport { mapState, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"App\",\n  components: {\n  },\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapState({\n      favoriteCount: (state) => state.favorite.favoriteCount,\n    }),\n  },\n  watch: {\n    cart: {\n      handler(newCart) {\n        // оформление заказа / обнуление\n        this.sushi = this.sushi.map((item) => ({ ...item, isAdded: false, count: 1 }));\n        this.rolls = this.rolls.map((item) => ({ ...item, isAdded: false, count: 1 }));\n        this.sets = this.sets.map((item) => ({ ...item, isAdded: false, count: 1 }));\n        this.snacks = this.snacks.map((item) => ({ ...item, isAdded: false, count: 1 }));\n        this.drinks = this.drinks.map((item) => ({ ...item, isAdded: false, count: 1 }));\n\n        this.slides = this.slides.map((item) => ({ ...item, isAdded: false }));\n        this.favorites = this.favorites.map((item) => ({ ...item, isAdded: false }));\n        this.categores = this.categores.map((item) => ({ ...item, isAdded: false }));\n        this.slidesTovar = this.slidesTovar.map((item) => ({ ...item, isAdded: false }));\n        this.product.isAdded ? this.product.isAdded = false : null;\n      },\n    },\n    favoriteCount: {\n      handler() {\n        this.countFavorite = this.favoriteCount;\n      },\n    },\n  },\n  methods: {\n    ...mapMutations({\n      setFavoriteCount: \"favorite/setFavoriteCount\",\n    }),\n    async fetchFavoritesCount() {\n      try {\n        const { data } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/favorites`);\n        this.countFavorite = data.length;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n  },\n  mounted() {\n    // получение корзины\n    const localCart = localStorage.getItem(\"cart\");\n    this.cart = localCart ? JSON.parse(localCart) : [];\n\n    // история получение данных\n    const historyCart = localStorage.getItem(\"order\");\n    this.historyOrder = historyCart ? JSON.parse(historyCart) : [];\n\n    // кол-во favorites\n    this.fetchFavoritesCount().then(() => {\n      this.setFavoriteCount(this.countFavorite);\n    });\n  },\n  setup() {\n    const favorites = ref([]);\n    const countFavorite = ref(0);\n    const slides = ref([]);\n    const cart = ref([]);\n    const sushi = ref([]);\n    const rolls = ref([]);\n    const sets = ref([]);\n    const snacks = ref([]);\n    const drinks = ref([]);\n    const drawerOpen = ref(false);\n    const historyOrder = ref([]);\n    const categores = ref([]);\n    const product = ref([]);\n    const slidesTovar = ref([]);\n    const address = ref([]);\n    const products = ref([]);\n\n    const coord = ref([30.523745, 50.418901]);\n    const polygonCoord1 = ref([\n      [30.525609135265174, 50.41581452769492],\n      [30.526797353858758, 50.41704674162194],\n      [30.526598870391656, 50.41866108161345],\n      [30.52590149604774, 50.41975098688669],\n      [30.522425353164497, 50.421245281434295],\n      [30.520730197067063, 50.420923121020905],\n      [30.519861161346252, 50.42113218281552],\n      [30.518546878928944, 50.421085915120884],\n      [30.516867816085664, 50.4219307217831],\n      [30.516213357085984, 50.42147833226991],\n      [30.514341175193604, 50.42149889552497],\n      [30.514306306476406, 50.42091969376908],\n      [30.513816803331178, 50.42012285131241],\n      [30.514151408905786, 50.419628459485686],\n      [30.514855153496086, 50.419490937093364],\n      [30.511780252317603, 50.41692709917943],\n      [30.511058193268894, 50.416591145423126],\n      [30.513336457415182, 50.415518278488875],\n      [30.512651687358204, 50.41437855989807],\n      [30.514337052344967, 50.412067352083284],\n      [30.517937897914575, 50.4115187660733],\n      [30.521717249984505, 50.411127021711366],\n      [30.524810301794076, 50.41173932782978],\n      [30.52592295371987, 50.413128909469826],\n      [30.525609135265174, 50.41581452769492],\n    ]);\n    const polygonCoord2 = ref([\n      [30.5098794981063, 50.42628119920888],\n      [30.51226666412955, 50.42715846727746],\n      [30.515678433996502, 50.427624509288435],\n      [30.519663852782916, 50.42687216158533],\n      [30.521460589013188, 50.4251054368052],\n      [30.523487651409056, 50.42316198375982],\n      [30.522434850236454, 50.421248960895035],\n      [30.520720293229566, 50.420928888987],\n      [30.519875737450686, 50.42112499152181],\n      [30.51855433089325, 50.421092218566464],\n      [30.516854434264705, 50.421924601598306],\n      [30.516223597234163, 50.42147820963046],\n      [30.514348058325066, 50.421503913674094],\n      [30.514144210439984, 50.421891186574015],\n      [30.5143856092513, 50.42240012001261],\n      [30.513015000444693, 50.422764252515826],\n      [30.510881303173356, 50.42282294184412],\n      [30.50966711301253, 50.42317672311909],\n      [30.509595183950726, 50.42445807423617],\n      [30.5098794981063, 50.42628119920888],\n    ]);\n    const polygonCoord3 = ref([\n      [30.53565310831554, 50.42189449360963],\n      [30.5346124950368, 50.42341715413044],\n      [30.532402522446606, 50.42341918895238],\n      [30.53107248205133, 50.42301200861088],\n      [30.531845628799886, 50.422115385518396],\n      [30.530302017511836, 50.42210424723551],\n      [30.529532223524566, 50.422356143130784],\n      [30.529237180532984, 50.42143423186331],\n      [30.527660041632206, 50.42115319955797],\n      [30.52844324666457, 50.42007703597716],\n      [30.528512984098914, 50.41931959400213],\n      [30.52893409091424, 50.41809086697714],\n      [30.52965962845278, 50.41718858049145],\n      [30.529550328435437, 50.416257570671156],\n      [30.52876611757469, 50.4151750826024],\n      [30.535583789976325, 50.415936340165416],\n      [30.53519461821206, 50.41676940341607],\n      [30.536759561443716, 50.4170076980345],\n      [30.540460276467726, 50.41663327851576],\n      [30.54059901792002, 50.417931489990465],\n      [30.540084033789153, 50.42026211044566],\n      [30.53836742001964, 50.42146850397636],\n      [30.537101417364596, 50.42168784493982],\n      [30.53565310831554, 50.42189449360963],\n    ]);\n\n    const categoryMap = {\n      sushi: sushi,\n      rolls: rolls,\n      sets: sets,\n      snacks: snacks,\n      drinks: drinks,\n    };\n\n    const totalPrice = computed(() => {\n      return cart.value.reduce((acc, item) => acc + item.price * item.count, 0);\n    });\n\n    watch(\n      cart,\n      () => {\n        localStorage.setItem(\"cart\", JSON.stringify(cart.value));\n      },\n      { deep: true }\n    );\n\n    const closeDrawer = () => {\n      drawerOpen.value = false;\n    };\n\n    const openDrawer = () => {\n      drawerOpen.value = true;\n    };\n\n    const addToCart = (item) => {\n      cart.value.push(item);\n      item.isAdded = true;\n\n      // слайды\n      CartSync(item, true);\n    };\n\n    const removeFromCart = (item) => {\n      // из корзины\n      let index = -1;\n      for (let i = 0; i < cart.value.length; i++) {\n        if (cart.value[i].id === item.id) {\n          index = i;\n          break;\n        }\n      }\n      if (index !== -1) {\n        cart.value.splice(index, 1);\n      }\n      // карточка\n      categoryMap[item.category].value.forEach((pl) => {\n        if (pl.id === item.id) {\n          pl.isAdded = false;\n          pl.count = 1;\n        }\n      });\n      // карточка favorites\n      favorites.value.forEach((pl) => {\n        if (pl.id === item.id) {\n          pl.isAdded = false;\n          pl.count = 1;\n        }\n      });\n      // карточка categores\n      categores.value.forEach((pl) => {\n        if (pl.id === item.id) {\n          pl.isAdded = false;\n          pl.count = 1;\n        }\n      });\n      // карточка sliderTovar\n      slidesTovar.value.forEach((pl) => {\n        if (pl.id === item.id) {\n          pl.isAdded = false;\n          pl.count = 1;\n        }\n      });\n\n      products.value.forEach((pl) => {\n        if (pl.id === item.id) {\n          pl.isAdded = false;\n          pl.count = 1;\n        }\n      });\n      // товар\n      product.value.isAdded = false;\n      product.value.count = 1;\n      // слайды\n      CartSync(item, false);\n    };\n\n    // синхрон добавления в корзину между карточками и слайдером\n    const CartSync = (item, check) => {\n      slides.value = slides.value.map((el) => {\n        if (el.id == item.id) {\n          return {\n            ...el,\n            isAdded: check,\n          };\n        } else {\n          return el;\n        }\n      });\n    };\n\n    // кол-во товара\n    const countPlus = (item) => {\n      item.count = item.count + 1;\n    };\n    const countMinus = (item) => {\n      if (item.count > 1) {\n        item.count = item.count - 1;\n      }\n    };\n\n    provide(\"items\", {\n      sushi,\n      rolls,\n      sets,\n      snacks,\n      drinks,\n      slides,\n      favorites,\n      countFavorite,\n      categores,\n      product,\n      slidesTovar,\n      products\n    });\n\n    provide(\"cart\", {\n      cart,\n      addToCart,\n      removeFromCart,\n      closeDrawer,\n      openDrawer,\n      drawerOpen,\n      countPlus,\n      countMinus,\n      historyOrder,\n    });\n\n    provide(\"address\", {\n      address,\n      polygonCoord1,\n      polygonCoord2,\n      polygonCoord3,\n      coord\n    });\n\n    return {\n      sushi,\n      rolls,\n      sets,\n      snacks,\n      drinks,\n      cart,\n      addToCart,\n      removeFromCart,\n      closeDrawer,\n      openDrawer,\n      drawerOpen,\n      slides,\n      countPlus,\n      countMinus,\n      totalPrice,\n      historyOrder,\n      favorites,\n      countFavorite,\n      categores,\n      product,\n      slidesTovar\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.app {\n  padding-top: 122px;\n}\n.app-top {\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  z-index: 200;\n}\n.basket {\n  height: 100vh;\n  background: rgba(26, 26, 26, 0.4);\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: -1;\n  padding-top: 122px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAS;;;;;;uBADtBC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CASM,OATNC,UASM,GARUC,MAAA,CAAAC,UAAU,I,cAAxBC,YAAA,CAAqEC,iBAAA;IAH3EC,GAAA;IAGiC,aAAW,EAAEJ,MAAA,CAAAK,UAAU;IAAEV,KAAK,EAAC;8CAHhEW,mBAAA,gBAIMC,YAAA,CAMEC,iBAAA;IALCC,YAAW,EAAET,MAAA,CAAAU,UAAU;IACvBC,aAAY,EAAEX,MAAA,CAAAY,WAAW;IACzB,aAAW,EAAE,CAAC;IACd,gBAAc,EAAEZ,MAAA,CAAAa,aAAa;IAC7B,YAAU,EAAEb,MAAA,CAAAc,IAAI,CAACC;gGAGtBR,YAAA,CAA2BS,sBAAA,GAE3BT,YAAA,CAAUU,iBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}