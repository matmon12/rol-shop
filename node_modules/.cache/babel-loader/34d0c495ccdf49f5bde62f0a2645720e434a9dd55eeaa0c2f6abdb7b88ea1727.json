{"ast":null,"code":"import axios from \"axios\";\nimport { inject, ref } from \"vue\";\nimport { mapActions, mapMutations } from \"vuex\";\nexport default {\n  data() {\n    return {\n      paths: [{\n        name: \"Избранное\",\n        path: \"/rol-shop/favorites\"\n      }],\n      limit: 6,\n      isAllLoading: false,\n      error: false\n    };\n  },\n  components: {},\n  methods: {\n    ...mapActions({\n      addToFavorite: \"favorite/addToFavorite\"\n    }),\n    ...mapMutations({\n      setPaths: \"crumbs/setPaths\"\n    }),\n    check(item) {\n      this.addToFavorite(item);\n      this.favorites.splice(this.favorites.indexOf(item), 1);\n    },\n    async fetchFavorites() {\n      let apiRes = null;\n      try {\n        const {\n          data\n        } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/favorites`);\n        this.favorites = data.map(obj => obj.item);\n        this.favorites.map((obj, index) => obj.favoriteId = data[index].id);\n      } catch (err) {\n        apiRes = err.response.status;\n      } finally {\n        if (apiRes == 404) {\n          this.error = true;\n        }\n      }\n    },\n    onLoadMoreFavorites() {\n      this.isAllLoading = !this.isAllLoading;\n    },\n    load() {\n      this.fetchFavorites().then(() => {\n        // включение кнопки для карточек\n        this.favorites = this.favorites.map(item => ({\n          ...item,\n          isAdded: this.cart.some(cartItem => cartItem.id === item.id)\n        }));\n      });\n    }\n  },\n  mounted() {\n    this.setPaths(this.paths);\n    this.load();\n  },\n  setup() {\n    const {\n      favorites\n    } = inject(\"items\");\n    const {\n      cart,\n      addToCart,\n      removeFromCart\n    } = inject(\"cart\");\n    const onClickAddPlus = item => {\n      if (!item.isAdded) {\n        addToCart(item);\n      } else {\n        removeFromCart(item);\n        // карточка favorites\n        favorites.value.forEach(pl => {\n          if (pl.id === item.id) {\n            pl.isAdded = false;\n            pl.count = 1;\n          }\n        });\n      }\n    };\n    return {\n      onClickAddPlus,\n      cart,\n      favorites\n    };\n  }\n};","map":{"version":3,"names":["axios","inject","ref","mapActions","mapMutations","data","paths","name","path","limit","isAllLoading","error","components","methods","addToFavorite","setPaths","check","item","favorites","splice","indexOf","fetchFavorites","apiRes","get","map","obj","index","favoriteId","id","err","response","status","onLoadMoreFavorites","load","then","isAdded","cart","some","cartItem","mounted","setup","addToCart","removeFromCart","onClickAddPlus","value","forEach","pl","count"],"sources":["C:\\gitPages\\rol-shop\\src\\pages\\Favorites.vue"],"sourcesContent":["<template>\r\n  <div class=\"favorites-wrapper\">\r\n    <FavoriteList\r\n      :items=\"favorites\"\r\n      :check=\"isAllLoading\"\r\n      @add-to-favorite=\"(item) => check(item)\"\r\n      @add-to-cart=\"(item) => onClickAddPlus(item)\"\r\n      @load-more-favorites=\"onLoadMoreFavorites()\"\r\n    />\r\n  </div>\r\n\r\n  <!-- <Error\r\n    :imgUrl=\"require('@/img/icon/404.svg')\"\r\n    :title=\"['Ошибка 404.', 'Что-то пошло не так.']\"\r\n    text=\"Страница, которую вы ищите, временно не доступна или ее еже нет\"\r\n    :button=\"{ imgUrl: '', text: 'Вернуться на главную' }\"\r\n    @click-error=\"this.$router.push('/rol-shop/')\"\r\n  /> -->\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { inject, ref } from \"vue\";\r\nimport { mapActions, mapMutations } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      paths: [{ name: \"Избранное\", path: \"/rol-shop/favorites\" }],\r\n      limit: 6,\r\n      isAllLoading: false,\r\n      error: false,\r\n    };\r\n  },\r\n  components: {},\r\n  methods: {\r\n    ...mapActions({\r\n      addToFavorite: \"favorite/addToFavorite\",\r\n    }),\r\n    ...mapMutations({\r\n      setPaths: \"crumbs/setPaths\",\r\n    }),\r\n    check(item) {\r\n      this.addToFavorite(item);\r\n      this.favorites.splice(this.favorites.indexOf(item), 1);\r\n    },\r\n    async fetchFavorites() {\r\n      let apiRes = null;\r\n      try {\r\n        const { data } = await axios.get(`https://c2ff7a8de0a119c8.mokky.dev/favorites`);\r\n\r\n        this.favorites = data.map((obj) => obj.item);\r\n        this.favorites.map((obj, index) => (obj.favoriteId = data[index].id));\r\n      } catch (err) {\r\n        apiRes = err.response.status;\r\n      } finally {\r\n        if (apiRes == 404) {\r\n          this.error = true;\r\n        }\r\n      }\r\n    },\r\n    onLoadMoreFavorites() {\r\n      this.isAllLoading = !this.isAllLoading;\r\n    },\r\n    load() {\r\n      this.fetchFavorites().then(() => {\r\n        // включение кнопки для карточек\r\n        this.favorites = this.favorites.map((item) => ({\r\n          ...item,\r\n          isAdded: this.cart.some((cartItem) => cartItem.id === item.id),\r\n        }));\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.setPaths(this.paths);\r\n    this.load();\r\n  },\r\n  setup() {\r\n    const { favorites } = inject(\"items\");\r\n    const { cart, addToCart, removeFromCart } = inject(\"cart\");\r\n    const onClickAddPlus = (item) => {\r\n      if (!item.isAdded) {\r\n        addToCart(item);\r\n      } else {\r\n        removeFromCart(item);\r\n        // карточка favorites\r\n        favorites.value.forEach((pl) => {\r\n          if (pl.id === item.id) {\r\n            pl.isAdded = false;\r\n            pl.count = 1;\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    return {\r\n      onClickAddPlus,\r\n      cart,\r\n      favorites,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.favorites {\r\n  &-wrapper {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}