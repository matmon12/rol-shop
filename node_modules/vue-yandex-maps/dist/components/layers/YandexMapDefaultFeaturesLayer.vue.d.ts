import type { YMapDefaultFeaturesLayer } from '@yandex/ymaps3-types';
import type { PropType, SlotsType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    value: {
        type: PropType<YMapDefaultFeaturesLayer>;
        default: null;
    };
    modelValue: {
        type: PropType<YMapDefaultFeaturesLayer>;
        default: null;
    };
    settings: {
        type: PropType<import("@yandex/ymaps3-types/imperative/YMapDefaultFeaturesLayer/index").YMapDefaultFeaturesLayerProps>;
        default: () => {};
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    input(item: YMapDefaultFeaturesLayer): boolean;
    'update:modelValue'(item: YMapDefaultFeaturesLayer): boolean;
    hold(status: boolean): boolean;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    value: {
        type: PropType<YMapDefaultFeaturesLayer>;
        default: null;
    };
    modelValue: {
        type: PropType<YMapDefaultFeaturesLayer>;
        default: null;
    };
    settings: {
        type: PropType<import("@yandex/ymaps3-types/imperative/YMapDefaultFeaturesLayer/index").YMapDefaultFeaturesLayerProps>;
        default: () => {};
    };
}>> & {
    onInput?: ((item: YMapDefaultFeaturesLayer) => any) | undefined;
    "onUpdate:modelValue"?: ((item: YMapDefaultFeaturesLayer) => any) | undefined;
    onHold?: ((status: boolean) => any) | undefined;
}, {
    value: YMapDefaultFeaturesLayer;
    modelValue: YMapDefaultFeaturesLayer;
    settings: import("@yandex/ymaps3-types/imperative/YMapDefaultFeaturesLayer/index").YMapDefaultFeaturesLayerProps;
}, SlotsType<{
    default: {};
}>>;
export default _default;
